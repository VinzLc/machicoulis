{"ast":null,"code":"import { I18n } from 'aws-amplify/utils';\nimport { defaultTexts, thDict, uaDict, heDict, ruDict, trDict, svDict, zhDict, ptDict, plDict, nlDict, nbDict, krDict, jaDict, itDict, idDict, frDict, esDict, enDict, deDict } from './dictionaries/index.mjs';\n\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n/**\n * Contains translatable strings that authenticator provides by default. Customers\n * can use this to add custom vocabularies:\n *\n * ```\n * I18n.putVocabulariesForLanguage(\"en\", {\n *  [DefaultTexts.SIGN_IN]: \"Custom Sign In Text\",\n *  [DefaultTexts.SIGN_IN_BUTTON]: \"Custom Click Here to Sign In\"\n * });\n * ```\n */\nconst DefaultTexts = {\n  ...defaultTexts\n};\n/**\n * This helper type checks that given phrase is one of the texts @aws-amplify/ui\n * provides by default. This enables vscode autocompletion to help catch typos\n * during development.\n *\n * You can also use translate<string> to handle custom strings or dynamic content.\n */\nfunction translate(phrase) {\n  return I18n.get(phrase);\n}\n/**\n * Whether I18n has a translation entry for given phrase\n */\nfunction hasTranslation(phrase) {\n  return I18n.get(phrase) !== phrase;\n}\nconst translations = {\n  de: deDict,\n  en: enDict,\n  es: esDict,\n  fr: frDict,\n  id: idDict,\n  it: itDict,\n  ja: jaDict,\n  // TODO: remove kr in next major release\n  kr: krDict,\n  ko: krDict,\n  nb: nbDict,\n  nl: nlDict,\n  pl: plDict,\n  pt: ptDict,\n  zh: zhDict,\n  sv: svDict,\n  tr: trDict,\n  ru: ruDict,\n  he: heDict,\n  ua: uaDict,\n  th: thDict\n};\nexport { DefaultTexts, hasTranslation, translate, translations };","map":{"version":3,"names":["I18n","defaultTexts","thDict","uaDict","heDict","ruDict","trDict","svDict","zhDict","ptDict","plDict","nlDict","nbDict","krDict","jaDict","itDict","idDict","frDict","esDict","enDict","deDict","DefaultTexts","translate","phrase","get","hasTranslation","translations","de","en","es","fr","id","it","ja","kr","ko","nb","nl","pl","pt","zh","sv","tr","ru","he","ua","th"],"sources":["C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@aws-amplify/ui/dist/esm/i18n/translations.mjs"],"sourcesContent":["import { I18n } from 'aws-amplify/utils';\nimport { defaultTexts, thDict, uaDict, heDict, ruDict, trDict, svDict, zhDict, ptDict, plDict, nlDict, nbDict, krDict, jaDict, itDict, idDict, frDict, esDict, enDict, deDict } from './dictionaries/index.mjs';\n\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n/**\n * Contains translatable strings that authenticator provides by default. Customers\n * can use this to add custom vocabularies:\n *\n * ```\n * I18n.putVocabulariesForLanguage(\"en\", {\n *  [DefaultTexts.SIGN_IN]: \"Custom Sign In Text\",\n *  [DefaultTexts.SIGN_IN_BUTTON]: \"Custom Click Here to Sign In\"\n * });\n * ```\n */\nconst DefaultTexts = { ...defaultTexts };\n/**\n * This helper type checks that given phrase is one of the texts @aws-amplify/ui\n * provides by default. This enables vscode autocompletion to help catch typos\n * during development.\n *\n * You can also use translate<string> to handle custom strings or dynamic content.\n */\nfunction translate(phrase) {\n    return I18n.get(phrase);\n}\n/**\n * Whether I18n has a translation entry for given phrase\n */\nfunction hasTranslation(phrase) {\n    return I18n.get(phrase) !== phrase;\n}\nconst translations = {\n    de: deDict,\n    en: enDict,\n    es: esDict,\n    fr: frDict,\n    id: idDict,\n    it: itDict,\n    ja: jaDict,\n    // TODO: remove kr in next major release\n    kr: krDict,\n    ko: krDict,\n    nb: nbDict,\n    nl: nlDict,\n    pl: plDict,\n    pt: ptDict,\n    zh: zhDict,\n    sv: svDict,\n    tr: trDict,\n    ru: ruDict,\n    he: heDict,\n    ua: uaDict,\n    th: thDict,\n};\n\nexport { DefaultTexts, hasTranslation, translate, translations };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,SAASC,YAAY,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,QAAQ,0BAA0B;;AAE/M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EAAE,GAAGpB;AAAa,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqB,SAASA,CAACC,MAAM,EAAE;EACvB,OAAOvB,IAAI,CAACwB,GAAG,CAACD,MAAM,CAAC;AAC3B;AACA;AACA;AACA;AACA,SAASE,cAAcA,CAACF,MAAM,EAAE;EAC5B,OAAOvB,IAAI,CAACwB,GAAG,CAACD,MAAM,CAAC,KAAKA,MAAM;AACtC;AACA,MAAMG,YAAY,GAAG;EACjBC,EAAE,EAAEP,MAAM;EACVQ,EAAE,EAAET,MAAM;EACVU,EAAE,EAAEX,MAAM;EACVY,EAAE,EAAEb,MAAM;EACVc,EAAE,EAAEf,MAAM;EACVgB,EAAE,EAAEjB,MAAM;EACVkB,EAAE,EAAEnB,MAAM;EACV;EACAoB,EAAE,EAAErB,MAAM;EACVsB,EAAE,EAAEtB,MAAM;EACVuB,EAAE,EAAExB,MAAM;EACVyB,EAAE,EAAE1B,MAAM;EACV2B,EAAE,EAAE5B,MAAM;EACV6B,EAAE,EAAE9B,MAAM;EACV+B,EAAE,EAAEhC,MAAM;EACViC,EAAE,EAAElC,MAAM;EACVmC,EAAE,EAAEpC,MAAM;EACVqC,EAAE,EAAEtC,MAAM;EACVuC,EAAE,EAAExC,MAAM;EACVyC,EAAE,EAAE1C,MAAM;EACV2C,EAAE,EAAE5C;AACR,CAAC;AAED,SAASmB,YAAY,EAAEI,cAAc,EAAEH,SAAS,EAAEI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}