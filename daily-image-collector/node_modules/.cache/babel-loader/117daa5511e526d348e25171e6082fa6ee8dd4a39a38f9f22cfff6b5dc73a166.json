{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isClockSkewError = void 0;\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = ['AuthFailure', 'InvalidSignatureException', 'RequestExpired', 'RequestInTheFuture', 'RequestTimeTooSkewed', 'SignatureDoesNotMatch', 'BadRequestException' // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = errorCode => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\nexports.isClockSkewError = isClockSkewError;","map":{"version":3,"names":["Object","defineProperty","exports","value","isClockSkewError","CLOCK_SKEW_ERROR_CODES","errorCode","includes"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\retry\\isClockSkewError.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewError = void 0;\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\nexports.isClockSkewError = isClockSkewError;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,MAAM;AACjC;AACA,MAAMC,sBAAsB,GAAG,CAC3B,aAAa,EACb,2BAA2B,EAC3B,gBAAgB,EAChB,oBAAoB,EACpB,sBAAsB,EACtB,uBAAuB,EACvB,qBAAqB;AAAA,CACxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,gBAAgB,GAAIE,SAAS,IAAK,CAAC,CAACA,SAAS,IAAID,sBAAsB,CAACE,QAAQ,CAACD,SAAS,CAAC;AACjGJ,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}