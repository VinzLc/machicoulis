{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadData = void 0;\nconst utils_1 = require(\"../../../utils\");\nconst assertValidationError_1 = require(\"../../../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../../../errors/types/validation\");\nconst constants_1 = require(\"../../../utils/constants\");\nconst byteLength_1 = require(\"./byteLength\");\nconst putObjectJob_1 = require(\"./putObjectJob\");\nconst multipart_1 = require(\"./multipart\");\nconst uploadData = input => {\n  const {\n    data\n  } = input;\n  const dataByteLength = (0, byteLength_1.byteLength)(data);\n  // Using InvalidUploadSource error code because the input data must NOT be any\n  // of permitted Blob, string, ArrayBuffer(View) if byteLength could not be determined.\n  (0, assertValidationError_1.assertValidationError)(dataByteLength !== undefined, validation_1.StorageValidationErrorCode.InvalidUploadSource);\n  (0, assertValidationError_1.assertValidationError)(dataByteLength <= constants_1.MAX_OBJECT_SIZE, validation_1.StorageValidationErrorCode.ObjectIsTooLarge);\n  if (dataByteLength <= constants_1.DEFAULT_PART_SIZE) {\n    // Single part upload\n    const abortController = new AbortController();\n    return (0, utils_1.createUploadTask)({\n      isMultipartUpload: false,\n      job: (0, putObjectJob_1.putObjectJob)(input, abortController.signal, dataByteLength),\n      onCancel: message => {\n        abortController.abort(message);\n      }\n    });\n  } else {\n    // Multipart upload\n    const {\n      multipartUploadJob,\n      onPause,\n      onResume,\n      onCancel\n    } = (0, multipart_1.getMultipartUploadHandlers)(input, dataByteLength);\n    return (0, utils_1.createUploadTask)({\n      isMultipartUpload: true,\n      job: multipartUploadJob,\n      onCancel: message => {\n        onCancel(message);\n      },\n      onPause,\n      onResume\n    });\n  }\n};\nexports.uploadData = uploadData;","map":{"version":3,"names":["Object","defineProperty","exports","value","uploadData","utils_1","require","assertValidationError_1","validation_1","constants_1","byteLength_1","putObjectJob_1","multipart_1","input","data","dataByteLength","byteLength","assertValidationError","undefined","StorageValidationErrorCode","InvalidUploadSource","MAX_OBJECT_SIZE","ObjectIsTooLarge","DEFAULT_PART_SIZE","abortController","AbortController","createUploadTask","isMultipartUpload","job","putObjectJob","signal","onCancel","message","abort","multipartUploadJob","onPause","onResume","getMultipartUploadHandlers"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\internal\\uploadData\\index.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uploadData = void 0;\nconst utils_1 = require(\"../../../utils\");\nconst assertValidationError_1 = require(\"../../../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../../../errors/types/validation\");\nconst constants_1 = require(\"../../../utils/constants\");\nconst byteLength_1 = require(\"./byteLength\");\nconst putObjectJob_1 = require(\"./putObjectJob\");\nconst multipart_1 = require(\"./multipart\");\nconst uploadData = (input) => {\n    const { data } = input;\n    const dataByteLength = (0, byteLength_1.byteLength)(data);\n    // Using InvalidUploadSource error code because the input data must NOT be any\n    // of permitted Blob, string, ArrayBuffer(View) if byteLength could not be determined.\n    (0, assertValidationError_1.assertValidationError)(dataByteLength !== undefined, validation_1.StorageValidationErrorCode.InvalidUploadSource);\n    (0, assertValidationError_1.assertValidationError)(dataByteLength <= constants_1.MAX_OBJECT_SIZE, validation_1.StorageValidationErrorCode.ObjectIsTooLarge);\n    if (dataByteLength <= constants_1.DEFAULT_PART_SIZE) {\n        // Single part upload\n        const abortController = new AbortController();\n        return (0, utils_1.createUploadTask)({\n            isMultipartUpload: false,\n            job: (0, putObjectJob_1.putObjectJob)(input, abortController.signal, dataByteLength),\n            onCancel: (message) => {\n                abortController.abort(message);\n            },\n        });\n    }\n    else {\n        // Multipart upload\n        const { multipartUploadJob, onPause, onResume, onCancel } = (0, multipart_1.getMultipartUploadHandlers)(input, dataByteLength);\n        return (0, utils_1.createUploadTask)({\n            isMultipartUpload: true,\n            job: multipartUploadJob,\n            onCancel: (message) => {\n                onCancel(message);\n            },\n            onPause,\n            onResume,\n        });\n    }\n};\nexports.uploadData = uploadData;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,MAAM;AAC3B,MAAMC,OAAO,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,mDAAmD,CAAC;AAC5F,MAAME,YAAY,GAAGF,OAAO,CAAC,wCAAwC,CAAC;AACtE,MAAMG,WAAW,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACvD,MAAMI,YAAY,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMK,cAAc,GAAGL,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMM,WAAW,GAAGN,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMF,UAAU,GAAIS,KAAK,IAAK;EAC1B,MAAM;IAAEC;EAAI,CAAE,GAAGD,KAAK;EACtB,MAAME,cAAc,GAAG,IAAIL,YAAY,CAACM,UAAU,EAAEF,IAAI,CAAC;EAC7D;EACA;EACI,IAAIP,uBAAuB,CAACU,qBAAqB,EAAEF,cAAc,KAAKG,SAAS,EAAEV,YAAY,CAACW,0BAA0B,CAACC,mBAAmB,CAAC;EAC7I,IAAIb,uBAAuB,CAACU,qBAAqB,EAAEF,cAAc,IAAIN,WAAW,CAACY,eAAe,EAAEb,YAAY,CAACW,0BAA0B,CAACG,gBAAgB,CAAC;EAC3J,IAAIP,cAAc,IAAIN,WAAW,CAACc,iBAAiB,EAAE;IACzD;IACQ,MAAMC,eAAe,GAAG,IAAIC,eAAe,EAAE;IAC7C,OAAO,IAAIpB,OAAO,CAACqB,gBAAgB,EAAE;MACjCC,iBAAiB,EAAE,KAAK;MACxBC,GAAG,EAAE,IAAIjB,cAAc,CAACkB,YAAY,EAAEhB,KAAK,EAAEW,eAAe,CAACM,MAAM,EAAEf,cAAc,CAAC;MACpFgB,QAAQ,EAAGC,OAAO,IAAK;QACnBR,eAAe,CAACS,KAAK,CAACD,OAAO,CAAC;MAC9C;IACA,CAAS,CAAC;EACV,OACS;IACT;IACQ,MAAM;MAAEE,kBAAkB;MAAEC,OAAO;MAAEC,QAAQ;MAAEL;IAAQ,CAAE,GAAG,IAAInB,WAAW,CAACyB,0BAA0B,EAAExB,KAAK,EAAEE,cAAc,CAAC;IAC9H,OAAO,IAAIV,OAAO,CAACqB,gBAAgB,EAAE;MACjCC,iBAAiB,EAAE,IAAI;MACvBC,GAAG,EAAEM,kBAAkB;MACvBH,QAAQ,EAAGC,OAAO,IAAK;QACnBD,QAAQ,CAACC,OAAO,CAAC;MACjC,CAAa;MACDG,OAAO;MACPC;IACZ,CAAS,CAAC;EACV;AACA,CAAC;AACDlC,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}