{"ast":null,"code":"import { parseMetadata } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { s3TransferHandler } from '../runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { buildStorageServiceError, map, deserializeStringTag, deserializeBoolean } from '../utils/deserializeHelpers.mjs';\nimport { validateS3RequiredParameter, serializePathnameObjectKey, assignStringVariables } from '../utils/serializeHelpers.mjs';\nimport { validateObjectUrl } from '../../validateObjectUrl.mjs';\nimport { defaultConfig, parseXmlError } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deleteObjectSerializer = (input, endpoint) => {\n  const url = new AmplifyUrl(endpoint.url.toString());\n  validateS3RequiredParameter(!!input.Key, 'Key');\n  url.pathname = serializePathnameObjectKey(url, input.Key);\n  url.search = new AmplifyUrlSearchParams({\n    'x-id': 'DeleteObject'\n  }).toString();\n  validateObjectUrl({\n    bucketName: input.Bucket,\n    key: input.Key,\n    objectURL: url\n  });\n  const headers = assignStringVariables({\n    'x-amz-expected-bucket-owner': input.ExpectedBucketOwner\n  });\n  return {\n    method: 'DELETE',\n    headers,\n    url\n  };\n};\nconst deleteObjectDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    // error is always set when statusCode >= 300\n    throw buildStorageServiceError(await parseXmlError(response));\n  } else {\n    const content = map(response.headers, {\n      DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n      VersionId: 'x-amz-version-id',\n      RequestCharged: ['x-amz-request-charged', deserializeStringTag]\n    });\n    return {\n      ...content,\n      $metadata: parseMetadata(response)\n    };\n  }\n};\nconst deleteObject = composeServiceApi(s3TransferHandler, deleteObjectSerializer, deleteObjectDeserializer, {\n  ...defaultConfig,\n  responseType: 'text'\n});\nexport { deleteObject };","map":{"version":3,"names":["deleteObjectSerializer","input","endpoint","url","AmplifyUrl","toString","validateS3RequiredParameter","Key","pathname","serializePathnameObjectKey","search","AmplifyUrlSearchParams","validateObjectUrl","bucketName","Bucket","key","objectURL","headers","assignStringVariables","ExpectedBucketOwner","method","deleteObjectDeserializer","response","statusCode","buildStorageServiceError","parseXmlError","content","map","DeleteMarker","deserializeBoolean","VersionId","RequestCharged","deserializeStringTag","$metadata","parseMetadata","deleteObject","composeServiceApi","s3TransferHandler","defaultConfig","responseType"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\s3data\\deleteObject.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { parseMetadata, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl, AmplifyUrlSearchParams, } from '@aws-amplify/core/internals/utils';\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { assignStringVariables, buildStorageServiceError, deserializeBoolean, map, s3TransferHandler, serializePathnameObjectKey, validateS3RequiredParameter, } from '../utils';\nimport { validateObjectUrl } from '../../validateObjectUrl';\nimport { deserializeStringTag } from '../utils/deserializeHelpers';\nimport { defaultConfig, parseXmlError } from './base';\nconst deleteObjectSerializer = (input, endpoint) => {\n    const url = new AmplifyUrl(endpoint.url.toString());\n    validateS3RequiredParameter(!!input.Key, 'Key');\n    url.pathname = serializePathnameObjectKey(url, input.Key);\n    url.search = new AmplifyUrlSearchParams({\n        'x-id': 'DeleteObject',\n    }).toString();\n    validateObjectUrl({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    const headers = assignStringVariables({\n        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n    });\n    return {\n        method: 'DELETE',\n        headers,\n        url,\n    };\n};\nconst deleteObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        throw buildStorageServiceError((await parseXmlError(response)));\n    }\n    else {\n        const content = map(response.headers, {\n            DeleteMarker: ['x-amz-delete-marker', deserializeBoolean],\n            VersionId: 'x-amz-version-id',\n            RequestCharged: [\n                'x-amz-request-charged',\n                (deserializeStringTag),\n            ],\n        });\n        return {\n            ...content,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nexport const deleteObject = composeServiceApi(s3TransferHandler, deleteObjectSerializer, deleteObjectDeserializer, { ...defaultConfig, responseType: 'text' });\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAQA,MAAMA,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAChD,MAAMC,GAAG,GAAG,IAAIC,UAAU,CAACF,QAAQ,CAACC,GAAG,CAACE,QAAQ,EAAE,CAAC;EACnDC,2BAA2B,CAAC,CAAC,CAACL,KAAK,CAACM,GAAG,EAAE,KAAK,CAAC;EAC/CJ,GAAG,CAACK,QAAQ,GAAGC,0BAA0B,CAACN,GAAG,EAAEF,KAAK,CAACM,GAAG,CAAC;EACzDJ,GAAG,CAACO,MAAM,GAAG,IAAIC,sBAAsB,CAAC;IACpC,MAAM,EAAE;EAChB,CAAK,CAAC,CAACN,QAAQ,EAAE;EACbO,iBAAiB,CAAC;IACdC,UAAU,EAAEZ,KAAK,CAACa,MAAM;IACxBC,GAAG,EAAEd,KAAK,CAACM,GAAG;IACdS,SAAS,EAAEb;EACnB,CAAK,CAAC;EACF,MAAMc,OAAO,GAAGC,qBAAqB,CAAC;IAClC,6BAA6B,EAAEjB,KAAK,CAACkB;EAC7C,CAAK,CAAC;EACF,OAAO;IACHC,MAAM,EAAE,QAAQ;IAChBH,OAAO;IACPd;EACR,CAAK;AACL,CAAC;AACD,MAAMkB,wBAAwB,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAIA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAAE;IACpC;IACQ,MAAMC,wBAAwB,CAAE,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAE;EACvE,OACS;IACD,MAAMI,OAAO,GAAGC,GAAG,CAACL,QAAQ,CAACL,OAAO,EAAE;MAClCW,YAAY,EAAE,CAAC,qBAAqB,EAAEC,kBAAkB,CAAC;MACzDC,SAAS,EAAE,kBAAkB;MAC7BC,cAAc,EAAE,CACZ,uBAAuB,EACtBC,oBAAoB;IAErC,CAAS,CAAC;IACF,OAAO;MACH,GAAGN,OAAO;MACVO,SAAS,EAAEC,aAAa,CAACZ,QAAQ;IAC7C,CAAS;EACT;AACA,CAAC;AACW,MAACa,YAAY,GAAGC,iBAAiB,CAACC,iBAAiB,EAAErC,sBAAsB,EAAEqB,wBAAwB,EAAE;EAAE,GAAGiB,aAAa;EAAEC,YAAY,EAAE;AAAM,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}