{"ast":null,"code":"import _objectSpread from \"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { RestApiError } from './RestApiError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Internal-only class for CanceledError.\n *\n * @internal\n */\nclass CanceledError extends RestApiError {\n  constructor() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(_objectSpread({\n      name: 'CanceledError',\n      message: 'Request is canceled by user'\n    }, params));\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = CanceledError;\n    Object.setPrototypeOf(this, CanceledError.prototype);\n  }\n}\n/**\n * Check if an error is caused by user calling `cancel()` in REST API.\n *\n * @note This function works **ONLY** for errors thrown by REST API. For GraphQL APIs, use `client.isCancelError(error)`\n *   instead. `client` is generated from  `generateClient()` API from `aws-amplify/api`.\n *\n * @param {unknown} error The unknown exception to be checked.\n * @returns - A boolean indicating if the error was from an upload cancellation\n */\nconst isCancelError = error => !!error && error instanceof CanceledError;\nexport { CanceledError, isCancelError };","map":{"version":3,"names":["CanceledError","RestApiError","constructor","params","arguments","length","undefined","_objectSpread","name","message","Object","setPrototypeOf","prototype","isCancelError","error"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\api-rest\\src\\errors\\CanceledError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { RestApiError } from './RestApiError';\n/**\n * Internal-only class for CanceledError.\n *\n * @internal\n */\nexport class CanceledError extends RestApiError {\n    constructor(params = {}) {\n        super({\n            name: 'CanceledError',\n            message: 'Request is canceled by user',\n            ...params,\n        });\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = CanceledError;\n        Object.setPrototypeOf(this, CanceledError.prototype);\n    }\n}\n/**\n * Check if an error is caused by user calling `cancel()` in REST API.\n *\n * @note This function works **ONLY** for errors thrown by REST API. For GraphQL APIs, use `client.isCancelError(error)`\n *   instead. `client` is generated from  `generateClient()` API from `aws-amplify/api`.\n *\n * @param {unknown} error The unknown exception to be checked.\n * @returns - A boolean indicating if the error was from an upload cancellation\n */\nexport const isCancelError = (error) => !!error && error instanceof CanceledError;\n"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACO,MAAMA,aAAa,SAASC,YAAY,CAAC;EAC5CC,WAAWA,CAAA,EAAc;IAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACnB,KAAK,CAAAG,aAAA;MACDC,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAE;IAA6B,GACnCN,MAAM,CACZ,CAAC;IACV;IACQ,IAAI,CAACD,WAAW,GAAGF,aAAa;IAChCU,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEX,aAAa,CAACY,SAAS,CAAC;EAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACC,aAAa,GAAIC,KAAK,IAAK,CAAC,CAACA,KAAK,IAAIA,KAAK,YAAYd,aAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}