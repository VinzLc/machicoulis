{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { createDownloadTask } from '../../utils/transferTask.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport { getObject } from '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst downloadData = input => {\n  const abortController = new AbortController();\n  const downloadTask = createDownloadTask({\n    job: downloadDataJob(input, abortController.signal),\n    onCancel: message => {\n      abortController.abort(message);\n    }\n  });\n  return downloadTask;\n};\nconst downloadDataJob = (downloadDataInput, abortSignal) => async () => {\n  const {\n    options: downloadDataOptions\n  } = downloadDataInput;\n  const {\n    bucket,\n    keyPrefix,\n    s3Config,\n    identityId\n  } = await resolveS3ConfigAndInput(Amplify, downloadDataInput);\n  const {\n    inputType,\n    objectKey\n  } = validateStorageOperationInput(downloadDataInput, identityId);\n  validateBucketOwnerID(downloadDataOptions?.expectedBucketOwner);\n  const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n  logger.debug(`download ${objectKey} from ${finalKey}.`);\n  const {\n    Body: body,\n    LastModified: lastModified,\n    ContentLength: size,\n    ETag: eTag,\n    Metadata: metadata,\n    VersionId: versionId,\n    ContentType: contentType\n  } = await getObject({\n    ...s3Config,\n    abortSignal,\n    onDownloadProgress: downloadDataOptions?.onProgress,\n    userAgentValue: getStorageUserAgentValue(StorageAction.DownloadData)\n  }, {\n    Bucket: bucket,\n    Key: finalKey,\n    ...(downloadDataOptions?.bytesRange && {\n      Range: `bytes=${downloadDataOptions.bytesRange.start}-${downloadDataOptions.bytesRange.end}`\n    }),\n    ExpectedBucketOwner: downloadDataOptions?.expectedBucketOwner\n  });\n  const result = {\n    body,\n    lastModified,\n    size,\n    contentType,\n    eTag,\n    metadata,\n    versionId\n  };\n  return inputType === STORAGE_INPUT_KEY ? {\n    key: objectKey,\n    ...result\n  } : {\n    path: objectKey,\n    ...result\n  };\n};\nexport { downloadData };","map":{"version":3,"names":["downloadData","input","abortController","AbortController","downloadTask","createDownloadTask","job","downloadDataJob","signal","onCancel","message","abort","downloadDataInput","abortSignal","options","downloadDataOptions","bucket","keyPrefix","s3Config","identityId","resolveS3ConfigAndInput","Amplify","inputType","objectKey","validateStorageOperationInput","validateBucketOwnerID","expectedBucketOwner","finalKey","STORAGE_INPUT_KEY","logger","debug","Body","body","LastModified","lastModified","ContentLength","size","ETag","eTag","Metadata","metadata","VersionId","versionId","ContentType","contentType","getObject","onDownloadProgress","onProgress","userAgentValue","getStorageUserAgentValue","StorageAction","DownloadData","Bucket","Key","bytesRange","Range","start","end","ExpectedBucketOwner","result","key","path"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\internal\\downloadData.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput';\nimport { createDownloadTask, validateBucketOwnerID, validateStorageOperationInput, } from '../../utils';\nimport { getObject } from '../../utils/client/s3data';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { logger } from '../../../../utils';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants';\nexport const downloadData = (input) => {\n    const abortController = new AbortController();\n    const downloadTask = createDownloadTask({\n        job: downloadDataJob(input, abortController.signal),\n        onCancel: (message) => {\n            abortController.abort(message);\n        },\n    });\n    return downloadTask;\n};\nconst downloadDataJob = (downloadDataInput, abortSignal) => async () => {\n    const { options: downloadDataOptions } = downloadDataInput;\n    const { bucket, keyPrefix, s3Config, identityId } = await resolveS3ConfigAndInput(Amplify, downloadDataInput);\n    const { inputType, objectKey } = validateStorageOperationInput(downloadDataInput, identityId);\n    validateBucketOwnerID(downloadDataOptions?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    logger.debug(`download ${objectKey} from ${finalKey}.`);\n    const { Body: body, LastModified: lastModified, ContentLength: size, ETag: eTag, Metadata: metadata, VersionId: versionId, ContentType: contentType, } = await getObject({\n        ...s3Config,\n        abortSignal,\n        onDownloadProgress: downloadDataOptions?.onProgress,\n        userAgentValue: getStorageUserAgentValue(StorageAction.DownloadData),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ...(downloadDataOptions?.bytesRange && {\n            Range: `bytes=${downloadDataOptions.bytesRange.start}-${downloadDataOptions.bytesRange.end}`,\n        }),\n        ExpectedBucketOwner: downloadDataOptions?.expectedBucketOwner,\n    });\n    const result = {\n        body,\n        lastModified,\n        size,\n        contentType,\n        eTag,\n        metadata,\n        versionId,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASY,MAACA,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,eAAe,GAAG,IAAIC,eAAe,EAAE;EAC7C,MAAMC,YAAY,GAAGC,kBAAkB,CAAC;IACpCC,GAAG,EAAEC,eAAe,CAACN,KAAK,EAAEC,eAAe,CAACM,MAAM,CAAC;IACnDC,QAAQ,EAAGC,OAAO,IAAK;MACnBR,eAAe,CAACS,KAAK,CAACD,OAAO,CAAC;IAC1C;EACA,CAAK,CAAC;EACF,OAAON,YAAY;AACvB;AACA,MAAMG,eAAe,GAAGA,CAACK,iBAAiB,EAAEC,WAAW,KAAK,YAAY;EACpE,MAAM;IAAEC,OAAO,EAAEC;EAAmB,CAAE,GAAGH,iBAAiB;EAC1D,MAAM;IAAEI,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAU,CAAE,GAAG,MAAMC,uBAAuB,CAACC,OAAO,EAAET,iBAAiB,CAAC;EAC7G,MAAM;IAAEU,SAAS;IAAEC;EAAS,CAAE,GAAGC,6BAA6B,CAACZ,iBAAiB,EAAEO,UAAU,CAAC;EAC7FM,qBAAqB,CAACV,mBAAmB,EAAEW,mBAAmB,CAAC;EAC/D,MAAMC,QAAQ,GAAGL,SAAS,KAAKM,iBAAiB,GAAGX,SAAS,GAAGM,SAAS,GAAGA,SAAS;EACpFM,MAAM,CAACC,KAAK,CAAC,YAAYP,SAAS,SAASI,QAAQ,GAAG,CAAC;EACvD,MAAM;IAAEI,IAAI,EAAEC,IAAI;IAAEC,YAAY,EAAEC,YAAY;IAAEC,aAAa,EAAEC,IAAI;IAAEC,IAAI,EAAEC,IAAI;IAAEC,QAAQ,EAAEC,QAAQ;IAAEC,SAAS,EAAEC,SAAS;IAAEC,WAAW,EAAEC;EAAW,CAAG,GAAG,MAAMC,SAAS,CAAC;IACrK,GAAG3B,QAAQ;IACXL,WAAW;IACXiC,kBAAkB,EAAE/B,mBAAmB,EAAEgC,UAAU;IACnDC,cAAc,EAAEC,wBAAwB,CAACC,aAAa,CAACC,YAAY;EAC3E,CAAK,EAAE;IACCC,MAAM,EAAEpC,MAAM;IACdqC,GAAG,EAAE1B,QAAQ;IACb,IAAIZ,mBAAmB,EAAEuC,UAAU,IAAI;MACnCC,KAAK,EAAE,SAASxC,mBAAmB,CAACuC,UAAU,CAACE,KAAK,IAAIzC,mBAAmB,CAACuC,UAAU,CAACG,GAAG;IACtG,CAAS,CAAC;IACFC,mBAAmB,EAAE3C,mBAAmB,EAAEW;EAClD,CAAK,CAAC;EACF,MAAMiC,MAAM,GAAG;IACX3B,IAAI;IACJE,YAAY;IACZE,IAAI;IACJQ,WAAW;IACXN,IAAI;IACJE,QAAQ;IACRE;EACR,CAAK;EACD,OAAOpB,SAAS,KAAKM,iBAAA,GACf;IAAEgC,GAAG,EAAErC,SAAS;IAAE,GAAGoC;EAAM,IAC3B;IAAEE,IAAI,EAAEtC,SAAS;IAAE,GAAGoC;EAAM,CAAE;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}