{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateStorageOperationInputWithPrefix = void 0;\nconst assertValidationError_1 = require(\"../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../errors/types/validation\");\nconst constants_1 = require(\"./constants\");\nconst resolveIdentityId_1 = require(\"./resolveIdentityId\");\n// Local assertion function with StorageOperationInputWithPrefixPath as Input\nconst _isInputWithPath = input => {\n  return input.path !== undefined;\n};\nconst validateStorageOperationInputWithPrefix = (input, identityId) => {\n  // Validate prefix & path not present at the same time\n  (0, assertValidationError_1.assertValidationError)(!(input.prefix && input.path), validation_1.StorageValidationErrorCode.InvalidStorageOperationPrefixInput);\n  if (_isInputWithPath(input)) {\n    const {\n      path\n    } = input;\n    const objectKey = typeof path === 'string' ? path : path({\n      identityId: (0, resolveIdentityId_1.resolveIdentityId)(identityId)\n    });\n    // Assert on no leading slash in the path parameter\n    (0, assertValidationError_1.assertValidationError)(!objectKey.startsWith('/'), validation_1.StorageValidationErrorCode.InvalidStoragePathInput);\n    return {\n      inputType: constants_1.STORAGE_INPUT_PATH,\n      objectKey\n    };\n  } else {\n    return {\n      inputType: constants_1.STORAGE_INPUT_PREFIX,\n      objectKey: input.prefix ?? ''\n    };\n  }\n};\nexports.validateStorageOperationInputWithPrefix = validateStorageOperationInputWithPrefix;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateStorageOperationInputWithPrefix","assertValidationError_1","require","validation_1","constants_1","resolveIdentityId_1","_isInputWithPath","input","path","undefined","identityId","assertValidationError","prefix","StorageValidationErrorCode","InvalidStorageOperationPrefixInput","objectKey","resolveIdentityId","startsWith","InvalidStoragePathInput","inputType","STORAGE_INPUT_PATH","STORAGE_INPUT_PREFIX"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\validateStorageOperationInputWithPrefix.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateStorageOperationInputWithPrefix = void 0;\nconst assertValidationError_1 = require(\"../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../errors/types/validation\");\nconst constants_1 = require(\"./constants\");\nconst resolveIdentityId_1 = require(\"./resolveIdentityId\");\n// Local assertion function with StorageOperationInputWithPrefixPath as Input\nconst _isInputWithPath = (input) => {\n    return input.path !== undefined;\n};\nconst validateStorageOperationInputWithPrefix = (input, identityId) => {\n    // Validate prefix & path not present at the same time\n    (0, assertValidationError_1.assertValidationError)(!(input.prefix && input.path), validation_1.StorageValidationErrorCode.InvalidStorageOperationPrefixInput);\n    if (_isInputWithPath(input)) {\n        const { path } = input;\n        const objectKey = typeof path === 'string'\n            ? path\n            : path({ identityId: (0, resolveIdentityId_1.resolveIdentityId)(identityId) });\n        // Assert on no leading slash in the path parameter\n        (0, assertValidationError_1.assertValidationError)(!objectKey.startsWith('/'), validation_1.StorageValidationErrorCode.InvalidStoragePathInput);\n        return {\n            inputType: constants_1.STORAGE_INPUT_PATH,\n            objectKey,\n        };\n    }\n    else {\n        return { inputType: constants_1.STORAGE_INPUT_PREFIX, objectKey: input.prefix ?? '' };\n    }\n};\nexports.validateStorageOperationInputWithPrefix = validateStorageOperationInputWithPrefix;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,uCAAuC,GAAG,MAAM;AACxD,MAAMC,uBAAuB,GAAGC,OAAO,CAAC,6CAA6C,CAAC;AACtF,MAAMC,YAAY,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAChE,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMG,mBAAmB,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAC1D;AACA,MAAMI,gBAAgB,GAAIC,KAAK,IAAK;EAChC,OAAOA,KAAK,CAACC,IAAI,KAAKC,SAAS;AACnC,CAAC;AACD,MAAMT,uCAAuC,GAAGA,CAACO,KAAK,EAAEG,UAAU,KAAK;EACvE;EACI,IAAIT,uBAAuB,CAACU,qBAAqB,EAAE,EAAEJ,KAAK,CAACK,MAAM,IAAIL,KAAK,CAACC,IAAI,CAAC,EAAEL,YAAY,CAACU,0BAA0B,CAACC,kCAAkC,CAAC;EAC7J,IAAIR,gBAAgB,CAACC,KAAK,CAAC,EAAE;IACzB,MAAM;MAAEC;IAAI,CAAE,GAAGD,KAAK;IACtB,MAAMQ,SAAS,GAAG,OAAOP,IAAI,KAAK,WAC5BA,IAAA,GACAA,IAAI,CAAC;MAAEE,UAAU,EAAE,IAAIL,mBAAmB,CAACW,iBAAiB,EAAEN,UAAU;IAAC,CAAE,CAAC;IAC1F;IACQ,IAAIT,uBAAuB,CAACU,qBAAqB,EAAE,CAACI,SAAS,CAACE,UAAU,CAAC,GAAG,CAAC,EAAEd,YAAY,CAACU,0BAA0B,CAACK,uBAAuB,CAAC;IAC/I,OAAO;MACHC,SAAS,EAAEf,WAAW,CAACgB,kBAAkB;MACzCL;IACZ,CAAS;EACT,OACS;IACD,OAAO;MAAEI,SAAS,EAAEf,WAAW,CAACiB,oBAAoB;MAAEN,SAAS,EAAER,KAAK,CAACK,MAAM,IAAI;IAAE,CAAE;EAC7F;AACA,CAAC;AACDd,OAAO,CAACE,uCAAuC,GAAGA,uCAAuC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}