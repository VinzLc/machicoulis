{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHashedDataAsHex = exports.getHashedData = void 0;\n// TODO: V6 update to different crypto dependency?\nconst sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n  const sha256 = new sha256_js_1.Sha256(key ?? undefined);\n  sha256.update(data);\n  // TODO: V6 flip to async digest\n  const hashedData = sha256.digestSync();\n  return hashedData;\n};\nexports.getHashedData = getHashedData;\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n  const hashedData = (0, exports.getHashedData)(key, data);\n  return (0, util_hex_encoding_1.toHex)(hashedData);\n};\nexports.getHashedDataAsHex = getHashedDataAsHex;","map":{"version":3,"names":["Object","defineProperty","exports","value","getHashedDataAsHex","getHashedData","sha256_js_1","require","util_hex_encoding_1","key","data","sha256","Sha256","undefined","update","hashedData","digestSync","toHex"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\signer\\signatureV4\\utils\\dataHashHelpers.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHashedDataAsHex = exports.getHashedData = void 0;\n// TODO: V6 update to different crypto dependency?\nconst sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n    const sha256 = new sha256_js_1.Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\nexports.getHashedData = getHashedData;\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n    const hashedData = (0, exports.getHashedData)(key, data);\n    return (0, util_hex_encoding_1.toHex)(hashedData);\n};\nexports.getHashedDataAsHex = getHashedDataAsHex;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,aAAa,GAAG,MAAM;AAC3D;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACpD,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,aAAa,GAAGA,CAACI,GAAG,EAAEC,IAAI,KAAK;EACjC,MAAMC,MAAM,GAAG,IAAIL,WAAW,CAACM,MAAM,CAACH,GAAG,IAAII,SAAS,CAAC;EACvDF,MAAM,CAACG,MAAM,CAACJ,IAAI,CAAC;EACvB;EACI,MAAMK,UAAU,GAAGJ,MAAM,CAACK,UAAU,EAAE;EACtC,OAAOD,UAAU;AACrB,CAAC;AACDb,OAAO,CAACG,aAAa,GAAGA,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,kBAAkB,GAAGA,CAACK,GAAG,EAAEC,IAAI,KAAK;EACtC,MAAMK,UAAU,GAAG,IAAIb,OAAO,CAACG,aAAa,EAAEI,GAAG,EAAEC,IAAI,CAAC;EACxD,OAAO,IAAIF,mBAAmB,CAACS,KAAK,EAAEF,UAAU,CAAC;AACrD,CAAC;AACDb,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}