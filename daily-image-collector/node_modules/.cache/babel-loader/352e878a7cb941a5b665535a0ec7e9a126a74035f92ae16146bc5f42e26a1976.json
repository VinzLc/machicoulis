{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fetchTransferHandler = void 0;\nconst errors_1 = require(\"../../errors\");\nconst memoization_1 = require(\"../utils/memoization\");\nconst types_1 = require(\"../../types\");\nconst shouldSendBody = method => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({\n  url,\n  method,\n  headers,\n  body\n}, {\n  abortSignal,\n  cache,\n  withCrossDomainCredentials\n}) => {\n  let resp;\n  try {\n    resp = await fetch(url, {\n      method,\n      headers,\n      body: shouldSendBody(method) ? body : undefined,\n      signal: abortSignal,\n      cache,\n      credentials: withCrossDomainCredentials ? 'include' : 'same-origin'\n    });\n  } catch (e) {\n    if (e instanceof TypeError) {\n      throw new errors_1.AmplifyError({\n        name: types_1.AmplifyErrorCode.NetworkError,\n        message: 'A network error has occurred.',\n        underlyingError: e\n      });\n    }\n    throw e;\n  }\n  const responseHeaders = {};\n  resp.headers?.forEach((value, key) => {\n    responseHeaders[key.toLowerCase()] = value;\n  });\n  const httpResponse = {\n    statusCode: resp.status,\n    headers: responseHeaders,\n    body: null\n  };\n  // resp.body is a ReadableStream according to Fetch API spec, but React Native\n  // does not implement it.\n  const bodyWithMixin = Object.assign(resp.body ?? {}, {\n    text: (0, memoization_1.withMemoization)(() => resp.text()),\n    blob: (0, memoization_1.withMemoization)(() => resp.blob()),\n    json: (0, memoization_1.withMemoization)(() => resp.json())\n  });\n  return {\n    ...httpResponse,\n    body: bodyWithMixin\n  };\n};\nexports.fetchTransferHandler = fetchTransferHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","fetchTransferHandler","errors_1","require","memoization_1","types_1","shouldSendBody","method","includes","toUpperCase","url","headers","body","abortSignal","cache","withCrossDomainCredentials","resp","fetch","undefined","signal","credentials","e","TypeError","AmplifyError","name","AmplifyErrorCode","NetworkError","message","underlyingError","responseHeaders","forEach","key","toLowerCase","httpResponse","statusCode","status","bodyWithMixin","assign","text","withMemoization","blob","json"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\handlers\\fetch.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchTransferHandler = void 0;\nconst errors_1 = require(\"../../errors\");\nconst memoization_1 = require(\"../utils/memoization\");\nconst types_1 = require(\"../../types\");\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new errors_1.AmplifyError({\n                name: types_1.AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: (0, memoization_1.withMemoization)(() => resp.text()),\n        blob: (0, memoization_1.withMemoization)(() => resp.blob()),\n        json: (0, memoization_1.withMemoization)(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\nexports.fetchTransferHandler = fetchTransferHandler;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,MAAM;AACrC,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMC,aAAa,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAME,OAAO,GAAGF,OAAO,CAAC,aAAa,CAAC;AACtC,MAAMG,cAAc,GAAIC,MAAM,IAAK,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,MAAM,CAACE,WAAW,EAAE,CAAC;AAC5F;AACA,MAAMR,oBAAoB,GAAG,MAAAA,CAAO;EAAES,GAAG;EAAEH,MAAM;EAAEI,OAAO;EAAEC;AAAI,CAAE,EAAE;EAAEC,WAAW;EAAEC,KAAK;EAAEC;AAA0B,CAAE,KAAK;EACvH,IAAIC,IAAI;EACR,IAAI;IACAA,IAAI,GAAG,MAAMC,KAAK,CAACP,GAAG,EAAE;MACpBH,MAAM;MACNI,OAAO;MACPC,IAAI,EAAEN,cAAc,CAACC,MAAM,CAAC,GAAGK,IAAI,GAAGM,SAAS;MAC/CC,MAAM,EAAEN,WAAW;MACnBC,KAAK;MACLM,WAAW,EAAEL,0BAA0B,GAAG,SAAS,GAAG;IAClE,CAAS,CAAC;EACV,EACI,OAAOM,CAAC,EAAE;IACN,IAAIA,CAAC,YAAYC,SAAS,EAAE;MACxB,MAAM,IAAIpB,QAAQ,CAACqB,YAAY,CAAC;QAC5BC,IAAI,EAAEnB,OAAO,CAACoB,gBAAgB,CAACC,YAAY;QAC3CC,OAAO,EAAE,+BAA+B;QACxCC,eAAe,EAAEP;MACjC,CAAa,CAAC;IACd;IACQ,MAAMA,CAAC;EACf;EACI,MAAMQ,eAAe,GAAG,EAAE;EAC1Bb,IAAI,CAACL,OAAO,EAAEmB,OAAO,CAAC,CAAC9B,KAAK,EAAE+B,GAAG,KAAK;IAClCF,eAAe,CAACE,GAAG,CAACC,WAAW,EAAE,CAAC,GAAGhC,KAAK;EAClD,CAAK,CAAC;EACF,MAAMiC,YAAY,GAAG;IACjBC,UAAU,EAAElB,IAAI,CAACmB,MAAM;IACvBxB,OAAO,EAAEkB,eAAe;IACxBjB,IAAI,EAAE;EACd,CAAK;EACL;EACA;EACI,MAAMwB,aAAa,GAAGvC,MAAM,CAACwC,MAAM,CAACrB,IAAI,CAACJ,IAAI,IAAI,EAAE,EAAE;IACjD0B,IAAI,EAAE,IAAIlC,aAAa,CAACmC,eAAe,EAAE,MAAMvB,IAAI,CAACsB,IAAI,EAAE,CAAC;IAC3DE,IAAI,EAAE,IAAIpC,aAAa,CAACmC,eAAe,EAAE,MAAMvB,IAAI,CAACwB,IAAI,EAAE,CAAC;IAC3DC,IAAI,EAAE,IAAIrC,aAAa,CAACmC,eAAe,EAAE,MAAMvB,IAAI,CAACyB,IAAI,EAAE;EAClE,CAAK,CAAC;EACF,OAAO;IACH,GAAGR,YAAY;IACfrB,IAAI,EAAEwB;EACd,CAAK;AACL,CAAC;AACDrC,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}