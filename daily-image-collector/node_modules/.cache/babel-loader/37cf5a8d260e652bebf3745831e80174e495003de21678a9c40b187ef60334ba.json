{"ast":null,"code":"import _objectSpread from \"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import { GraphQLFormattedError } from '@aws-amplify/data-schema-types';\n/**\n * Handle errors for list return types (list and index query operations)\n */\nfunction handleListGraphQlError(error) {\n  if (error !== null && error !== void 0 && error.errors) {\n    // graphql errors pass through\n    return _objectSpread(_objectSpread({}, error), {}, {\n      data: []\n    });\n  } else {\n    // non-graphql errors are re-thrown\n    throw error;\n  }\n}\n/**\n * Handle errors for singular return types (create, get, update, delete operations)\n */\nfunction handleSingularGraphQlError(error) {\n  if (error.errors) {\n    // graphql errors pass through\n    return _objectSpread(_objectSpread({}, error), {}, {\n      data: null\n    });\n  } else {\n    // non-graphql errors are re-thrown\n    throw error;\n  }\n}\nexport { handleListGraphQlError, handleSingularGraphQlError };","map":{"version":3,"names":["handleListGraphQlError","error","errors","_objectSpread","data","handleSingularGraphQlError"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\data-schema\\src\\runtime\\internals\\operations\\utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// import { GraphQLFormattedError } from '@aws-amplify/data-schema-types';\n/**\n * Handle errors for list return types (list and index query operations)\n */\nexport function handleListGraphQlError(error) {\n    if (error?.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: [],\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n/**\n * Handle errors for singular return types (create, get, update, delete operations)\n */\nexport function handleSingularGraphQlError(error) {\n    if (error.errors) {\n        // graphql errors pass through\n        return {\n            ...error,\n            data: null,\n        };\n    }\n    else {\n        // non-graphql errors are re-thrown\n        throw error;\n    }\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,sBAAsBA,CAACC,KAAK,EAAE;EAC1C,IAAIA,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEC,MAAM,EAAE;IACvB;IACQ,OAAAC,aAAA,CAAAA,aAAA,KACOF,KAAK;MACRG,IAAI,EAAE;IAAE;EAEpB,OACS;IACT;IACQ,MAAMH,KAAK;EACnB;AACA;AACA;AACA;AACA;AACO,SAASI,0BAA0BA,CAACJ,KAAK,EAAE;EAC9C,IAAIA,KAAK,CAACC,MAAM,EAAE;IACtB;IACQ,OAAAC,aAAA,CAAAA,aAAA,KACOF,KAAK;MACRG,IAAI,EAAE;IAAI;EAEtB,OACS;IACT;IACQ,MAAMH,KAAK;EACnB;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}