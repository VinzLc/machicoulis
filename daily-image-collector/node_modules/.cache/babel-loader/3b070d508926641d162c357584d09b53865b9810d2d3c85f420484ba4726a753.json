{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultConfig = exports.retryDecider = exports.parseXmlError = exports.isDnsCompatibleBucketName = exports.SERVICE_NAME = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_2 = require(\"../utils\");\nconst constants_1 = require(\"../../constants\");\nconst assertValidationError_1 = require(\"../../../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../../../errors/types/validation\");\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexports.SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nconst endpointResolver = (options, apiInput) => {\n  const {\n    region,\n    useAccelerateEndpoint,\n    customEndpoint,\n    forcePathStyle\n  } = options;\n  let endpoint;\n  // 1. get base endpoint\n  if (customEndpoint) {\n    if (customEndpoint === constants_1.LOCAL_TESTING_S3_ENDPOINT) {\n      endpoint = new utils_1.AmplifyUrl(customEndpoint);\n    }\n    (0, assertValidationError_1.assertValidationError)(!customEndpoint.includes('://'), validation_1.StorageValidationErrorCode.InvalidCustomEndpoint);\n    endpoint = new utils_1.AmplifyUrl(`https://${customEndpoint}`);\n  } else if (useAccelerateEndpoint) {\n    // this ErrorCode isn't expose yet since forcePathStyle param isn't publicly exposed\n    (0, assertValidationError_1.assertValidationError)(!forcePathStyle, validation_1.StorageValidationErrorCode.ForcePathStyleEndpointNotSupported);\n    endpoint = new utils_1.AmplifyUrl(`https://s3-accelerate.${(0, aws_client_utils_1.getDnsSuffix)(region)}`);\n  } else {\n    endpoint = new utils_1.AmplifyUrl(`https://s3.${region}.${(0, aws_client_utils_1.getDnsSuffix)(region)}`);\n  }\n  // 2. inject bucket name\n  if (apiInput?.Bucket) {\n    (0, assertValidationError_1.assertValidationError)((0, exports.isDnsCompatibleBucketName)(apiInput.Bucket), validation_1.StorageValidationErrorCode.DnsIncompatibleBucketName);\n    if (forcePathStyle || apiInput.Bucket.includes('.')) {\n      endpoint.pathname = `/${apiInput.Bucket}`;\n    } else {\n      endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;\n    }\n  }\n  return {\n    url: endpoint\n  };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nconst isDnsCompatibleBucketName = bucketName => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexports.isDnsCompatibleBucketName = isDnsCompatibleBucketName;\n/**\n * Error parser for the XML payload of S3 data plane error response. The error's\n * `Code` and `Message` locates directly at the XML root element.\n *\n * @example\n * ```\n * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n * \t<Error>\n * \t\t<Code>NoSuchKey</Code>\n * \t\t<Message>The resource you requested does not exist</Message>\n * \t\t<Resource>/mybucket/myfoto.jpg</Resource>\n * \t\t<RequestId>4442587FB7D0A2F9</RequestId>\n * \t</Error>\n * \t```\n *\n * @internal\n */\nexports.parseXmlError = (0, utils_2.createXmlErrorParser)({\n  noErrorWrapping: true\n});\n/**\n * @internal\n */\nexports.retryDecider = (0, utils_2.createRetryDecider)(exports.parseXmlError);\n/**\n * @internal\n */\nexports.defaultConfig = {\n  service: exports.SERVICE_NAME,\n  endpointResolver,\n  retryDecider: exports.retryDecider,\n  computeDelay: aws_client_utils_1.jitteredBackoff,\n  get userAgentValue() {\n    return (0, utils_1.getAmplifyUserAgent)();\n  },\n  useAccelerateEndpoint: false,\n  uriEscapePath: false // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","defaultConfig","retryDecider","parseXmlError","isDnsCompatibleBucketName","SERVICE_NAME","utils_1","require","aws_client_utils_1","utils_2","constants_1","assertValidationError_1","validation_1","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","endpointResolver","options","apiInput","region","useAccelerateEndpoint","customEndpoint","forcePathStyle","endpoint","LOCAL_TESTING_S3_ENDPOINT","AmplifyUrl","assertValidationError","includes","StorageValidationErrorCode","InvalidCustomEndpoint","ForcePathStyleEndpointNotSupported","getDnsSuffix","Bucket","DnsIncompatibleBucketName","pathname","host","url","bucketName","test","createXmlErrorParser","noErrorWrapping","createRetryDecider","service","computeDelay","jitteredBackoff","userAgentValue","getAmplifyUserAgent","uriEscapePath"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\s3data\\base.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultConfig = exports.retryDecider = exports.parseXmlError = exports.isDnsCompatibleBucketName = exports.SERVICE_NAME = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_2 = require(\"../utils\");\nconst constants_1 = require(\"../../constants\");\nconst assertValidationError_1 = require(\"../../../../../errors/utils/assertValidationError\");\nconst validation_1 = require(\"../../../../../errors/types/validation\");\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nexports.SERVICE_NAME = 's3';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region, and input parameters.\n */\nconst endpointResolver = (options, apiInput) => {\n    const { region, useAccelerateEndpoint, customEndpoint, forcePathStyle } = options;\n    let endpoint;\n    // 1. get base endpoint\n    if (customEndpoint) {\n        if (customEndpoint === constants_1.LOCAL_TESTING_S3_ENDPOINT) {\n            endpoint = new utils_1.AmplifyUrl(customEndpoint);\n        }\n        (0, assertValidationError_1.assertValidationError)(!customEndpoint.includes('://'), validation_1.StorageValidationErrorCode.InvalidCustomEndpoint);\n        endpoint = new utils_1.AmplifyUrl(`https://${customEndpoint}`);\n    }\n    else if (useAccelerateEndpoint) {\n        // this ErrorCode isn't expose yet since forcePathStyle param isn't publicly exposed\n        (0, assertValidationError_1.assertValidationError)(!forcePathStyle, validation_1.StorageValidationErrorCode.ForcePathStyleEndpointNotSupported);\n        endpoint = new utils_1.AmplifyUrl(`https://s3-accelerate.${(0, aws_client_utils_1.getDnsSuffix)(region)}`);\n    }\n    else {\n        endpoint = new utils_1.AmplifyUrl(`https://s3.${region}.${(0, aws_client_utils_1.getDnsSuffix)(region)}`);\n    }\n    // 2. inject bucket name\n    if (apiInput?.Bucket) {\n        (0, assertValidationError_1.assertValidationError)((0, exports.isDnsCompatibleBucketName)(apiInput.Bucket), validation_1.StorageValidationErrorCode.DnsIncompatibleBucketName);\n        if (forcePathStyle || apiInput.Bucket.includes('.')) {\n            endpoint.pathname = `/${apiInput.Bucket}`;\n        }\n        else {\n            endpoint.host = `${apiInput.Bucket}.${endpoint.host}`;\n        }\n    }\n    return { url: endpoint };\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://github.com/aws/aws-sdk-js-v3/blob/f2da6182298d4d6b02e84fb723492c07c27469a8/packages/middleware-bucket-endpoint/src/bucketHostnameUtils.ts#L39-L48\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) &&\n    !IP_ADDRESS_PATTERN.test(bucketName) &&\n    !DOTS_PATTERN.test(bucketName);\nexports.isDnsCompatibleBucketName = isDnsCompatibleBucketName;\n/**\n * Error parser for the XML payload of S3 data plane error response. The error's\n * `Code` and `Message` locates directly at the XML root element.\n *\n * @example\n * ```\n * <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n * \t<Error>\n * \t\t<Code>NoSuchKey</Code>\n * \t\t<Message>The resource you requested does not exist</Message>\n * \t\t<Resource>/mybucket/myfoto.jpg</Resource>\n * \t\t<RequestId>4442587FB7D0A2F9</RequestId>\n * \t</Error>\n * \t```\n *\n * @internal\n */\nexports.parseXmlError = (0, utils_2.createXmlErrorParser)({ noErrorWrapping: true });\n/**\n * @internal\n */\nexports.retryDecider = (0, utils_2.createRetryDecider)(exports.parseXmlError);\n/**\n * @internal\n */\nexports.defaultConfig = {\n    service: exports.SERVICE_NAME,\n    endpointResolver,\n    retryDecider: exports.retryDecider,\n    computeDelay: aws_client_utils_1.jitteredBackoff,\n    get userAgentValue() {\n        return (0, utils_1.getAmplifyUserAgent)();\n    },\n    useAccelerateEndpoint: false,\n    uriEscapePath: false, // Required by S3. See https://github.com/aws/aws-sdk-js-v3/blob/9ba012dfa3a3429aa2db0f90b3b0b3a7a31f9bc3/packages/signature-v4/src/SignatureV4.ts#L76-L83\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}