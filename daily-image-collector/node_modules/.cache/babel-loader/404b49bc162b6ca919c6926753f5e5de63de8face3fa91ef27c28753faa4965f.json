{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Amplify = exports.AmplifyClass = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst Hub_1 = require(\"../Hub\");\nconst utils_1 = require(\"../utils\");\nconst libraryUtils_1 = require(\"../libraryUtils\");\nconst Auth_1 = require(\"./Auth\");\nconst constants_1 = require(\"./constants\");\nclass AmplifyClass {\n  constructor() {\n    this.oAuthListener = undefined;\n    this.isConfigured = false;\n    this.resourcesConfig = {};\n    this.libraryOptions = {};\n    this.Auth = new Auth_1.AuthClass();\n  }\n  /**\n   * Configures Amplify for use with your back-end resources.\n   *\n   * @remarks\n   * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n   * provided values will be used after configuration.\n   *\n   * @remarks\n   * `configure` can be used to specify additional library options where available for supported categories.\n   *\n   * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n   * @param libraryOptions - Additional options for customizing the behavior of the library.\n   */\n  configure(resourcesConfig, libraryOptions) {\n    const resolvedResourceConfig = (0, libraryUtils_1.parseAmplifyConfig)(resourcesConfig);\n    this.resourcesConfig = resolvedResourceConfig;\n    if (libraryOptions) {\n      this.libraryOptions = libraryOptions;\n    }\n    // Make resource config immutable\n    this.resourcesConfig = (0, utils_1.deepFreeze)(this.resourcesConfig);\n    this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n    Hub_1.Hub.dispatch('core', {\n      event: 'configure',\n      data: this.resourcesConfig\n    }, 'Configure', Hub_1.AMPLIFY_SYMBOL);\n    this.notifyOAuthListener();\n    this.isConfigured = true;\n  }\n  /**\n   * Provides access to the current back-end resource configuration for the Library.\n   *\n   * @returns Returns the immutable back-end resource configuration.\n   */\n  getConfig() {\n    if (!this.isConfigured) {\n      // eslint-disable-next-line no-console\n      console.warn(`Amplify has not been configured. Please call Amplify.configure() before using this service.`);\n    }\n    return this.resourcesConfig;\n  }\n  /** @internal */\n  [constants_1.ADD_OAUTH_LISTENER](listener) {\n    if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n      // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n      listener(this.resourcesConfig.Auth?.Cognito);\n    } else {\n      // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n      this.oAuthListener = listener;\n    }\n  }\n  notifyOAuthListener() {\n    if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth || !this.oAuthListener) {\n      return;\n    }\n    this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n    // the listener should only be notified once with a valid oauth config\n    this.oAuthListener = undefined;\n  }\n}\nexports.AmplifyClass = AmplifyClass;\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexports.Amplify = new AmplifyClass();","map":{"version":3,"names":["Object","defineProperty","exports","value","Amplify","AmplifyClass","Hub_1","require","utils_1","libraryUtils_1","Auth_1","constants_1","constructor","oAuthListener","undefined","isConfigured","resourcesConfig","libraryOptions","Auth","AuthClass","configure","resolvedResourceConfig","parseAmplifyConfig","deepFreeze","Hub","dispatch","event","data","AMPLIFY_SYMBOL","notifyOAuthListener","getConfig","console","warn","ADD_OAUTH_LISTENER","listener","Cognito","loginWith","oauth"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\singleton\\Amplify.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Amplify = exports.AmplifyClass = void 0;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst Hub_1 = require(\"../Hub\");\nconst utils_1 = require(\"../utils\");\nconst libraryUtils_1 = require(\"../libraryUtils\");\nconst Auth_1 = require(\"./Auth\");\nconst constants_1 = require(\"./constants\");\nclass AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.isConfigured = false;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new Auth_1.AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = (0, libraryUtils_1.parseAmplifyConfig)(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = (0, utils_1.deepFreeze)(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub_1.Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', Hub_1.AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n        this.isConfigured = true;\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        if (!this.isConfigured) {\n            // eslint-disable-next-line no-console\n            console.warn(`Amplify has not been configured. Please call Amplify.configure() before using this service.`);\n        }\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [constants_1.ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\nexports.AmplifyClass = AmplifyClass;\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nexports.Amplify = new AmplifyClass();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}