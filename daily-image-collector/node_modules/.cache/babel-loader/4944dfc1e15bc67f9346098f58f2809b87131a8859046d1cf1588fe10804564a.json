{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEventBuffer = void 0;\nconst PinpointEventBuffer_1 = require(\"./PinpointEventBuffer\");\n// Map of buffers by region -> appId\nconst eventBufferMap = {};\n/**\n * Returns a PinpointEventBuffer instance for the specified region & app ID, creating one if it does not yet exist.\n *\n * @internal\n */\nconst getEventBuffer = ({\n  appId,\n  region,\n  credentials,\n  bufferSize,\n  flushInterval,\n  flushSize,\n  resendLimit,\n  identityId,\n  userAgentValue\n}) => {\n  if (eventBufferMap[region]?.[appId]) {\n    const buffer = eventBufferMap[region][appId];\n    /*\n    If the identity or credentials has changed flush out the buffer and create a new instance. The old instance will be garbage\n    collected.\n    */\n    const shouldFlushBuffer = buffer.identityHasChanged(identityId) || buffer.haveCredentialsChanged(credentials);\n    if (shouldFlushBuffer) {\n      buffer.flush();\n    } else {\n      return buffer;\n    }\n  }\n  const buffer = new PinpointEventBuffer_1.PinpointEventBuffer({\n    appId,\n    bufferSize,\n    credentials,\n    flushInterval,\n    flushSize,\n    identityId,\n    region,\n    resendLimit,\n    userAgentValue\n  });\n  if (!eventBufferMap[region]) {\n    eventBufferMap[region] = {};\n  }\n  eventBufferMap[region][appId] = buffer;\n  return buffer;\n};\nexports.getEventBuffer = getEventBuffer;","map":{"version":3,"names":["Object","defineProperty","exports","value","getEventBuffer","PinpointEventBuffer_1","require","eventBufferMap","appId","region","credentials","bufferSize","flushInterval","flushSize","resendLimit","identityId","userAgentValue","buffer","shouldFlushBuffer","identityHasChanged","haveCredentialsChanged","flush","PinpointEventBuffer"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\providers\\pinpoint\\utils\\getEventBuffer.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEventBuffer = void 0;\nconst PinpointEventBuffer_1 = require(\"./PinpointEventBuffer\");\n// Map of buffers by region -> appId\nconst eventBufferMap = {};\n/**\n * Returns a PinpointEventBuffer instance for the specified region & app ID, creating one if it does not yet exist.\n *\n * @internal\n */\nconst getEventBuffer = ({ appId, region, credentials, bufferSize, flushInterval, flushSize, resendLimit, identityId, userAgentValue, }) => {\n    if (eventBufferMap[region]?.[appId]) {\n        const buffer = eventBufferMap[region][appId];\n        /*\n        If the identity or credentials has changed flush out the buffer and create a new instance. The old instance will be garbage\n        collected.\n        */\n        const shouldFlushBuffer = buffer.identityHasChanged(identityId) ||\n            buffer.haveCredentialsChanged(credentials);\n        if (shouldFlushBuffer) {\n            buffer.flush();\n        }\n        else {\n            return buffer;\n        }\n    }\n    const buffer = new PinpointEventBuffer_1.PinpointEventBuffer({\n        appId,\n        bufferSize,\n        credentials,\n        flushInterval,\n        flushSize,\n        identityId,\n        region,\n        resendLimit,\n        userAgentValue,\n    });\n    if (!eventBufferMap[region]) {\n        eventBufferMap[region] = {};\n    }\n    eventBufferMap[region][appId] = buffer;\n    return buffer;\n};\nexports.getEventBuffer = getEventBuffer;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,MAAM;AAC/B,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC9D;AACA,MAAMC,cAAc,GAAG,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,MAAMH,cAAc,GAAGA,CAAC;EAAEI,KAAK;EAAEC,MAAM;EAAEC,WAAW;EAAEC,UAAU;EAAEC,aAAa;EAAEC,SAAS;EAAEC,WAAW;EAAEC,UAAU;EAAEC;AAAc,CAAG,KAAK;EACvI,IAAIT,cAAc,CAACE,MAAM,CAAC,GAAGD,KAAK,CAAC,EAAE;IACjC,MAAMS,MAAM,GAAGV,cAAc,CAACE,MAAM,CAAC,CAACD,KAAK,CAAC;IACpD;AACA;AACA;AACA;IACQ,MAAMU,iBAAiB,GAAGD,MAAM,CAACE,kBAAkB,CAACJ,UAAU,CAAC,IAC3DE,MAAM,CAACG,sBAAsB,CAACV,WAAW,CAAC;IAC9C,IAAIQ,iBAAiB,EAAE;MACnBD,MAAM,CAACI,KAAK,EAAE;IAC1B,OACa;MACD,OAAOJ,MAAM;IACzB;EACA;EACI,MAAMA,MAAM,GAAG,IAAIZ,qBAAqB,CAACiB,mBAAmB,CAAC;IACzDd,KAAK;IACLG,UAAU;IACVD,WAAW;IACXE,aAAa;IACbC,SAAS;IACTE,UAAU;IACVN,MAAM;IACNK,WAAW;IACXE;EACR,CAAK,CAAC;EACF,IAAI,CAACT,cAAc,CAACE,MAAM,CAAC,EAAE;IACzBF,cAAc,CAACE,MAAM,CAAC,GAAG,EAAE;EACnC;EACIF,cAAc,CAACE,MAAM,CAAC,CAACD,KAAK,CAAC,GAAGS,MAAM;EACtC,OAAOA,MAAM;AACjB,CAAC;AACDf,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}