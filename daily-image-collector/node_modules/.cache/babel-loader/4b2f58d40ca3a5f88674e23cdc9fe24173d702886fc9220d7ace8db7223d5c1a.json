{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSignature = void 0;\nconst dataHashHelpers_1 = require(\"./dataHashHelpers\");\nconst getCanonicalRequest_1 = require(\"./getCanonicalRequest\");\nconst getSigningKey_1 = require(\"./getSigningKey\");\nconst getStringToSign_1 = require(\"./getStringToSign\");\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, {\n  credentialScope,\n  longDate,\n  secretAccessKey,\n  shortDate,\n  signingRegion,\n  signingService,\n  uriEscapePath\n}) => {\n  // step 1: create a canonical request\n  const canonicalRequest = (0, getCanonicalRequest_1.getCanonicalRequest)(request, uriEscapePath);\n  // step 2: create a hash of the canonical request\n  const hashedRequest = (0, dataHashHelpers_1.getHashedDataAsHex)(null, canonicalRequest);\n  // step 3: create a string to sign\n  const stringToSign = (0, getStringToSign_1.getStringToSign)(longDate, credentialScope, hashedRequest);\n  // step 4: calculate the signature\n  const signature = (0, dataHashHelpers_1.getHashedDataAsHex)((0, getSigningKey_1.getSigningKey)(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n  return signature;\n};\nexports.getSignature = getSignature;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSignature","dataHashHelpers_1","require","getCanonicalRequest_1","getSigningKey_1","getStringToSign_1","request","credentialScope","longDate","secretAccessKey","shortDate","signingRegion","signingService","uriEscapePath","canonicalRequest","getCanonicalRequest","hashedRequest","getHashedDataAsHex","stringToSign","getStringToSign","signature","getSigningKey"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\signer\\signatureV4\\utils\\getSignature.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSignature = void 0;\nconst dataHashHelpers_1 = require(\"./dataHashHelpers\");\nconst getCanonicalRequest_1 = require(\"./getCanonicalRequest\");\nconst getSigningKey_1 = require(\"./getSigningKey\");\nconst getStringToSign_1 = require(\"./getStringToSign\");\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = (0, getCanonicalRequest_1.getCanonicalRequest)(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = (0, dataHashHelpers_1.getHashedDataAsHex)(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = (0, getStringToSign_1.getStringToSign)(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = (0, dataHashHelpers_1.getHashedDataAsHex)((0, getSigningKey_1.getSigningKey)(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\nexports.getSignature = getSignature;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,MAAM;AAC7B,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACtD,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC9D,MAAME,eAAe,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,YAAY,GAAGA,CAACM,OAAO,EAAE;EAAEC,eAAe;EAAEC,QAAQ;EAAEC,eAAe;EAAEC,SAAS;EAAEC,aAAa;EAAEC,cAAc;EAAEC;AAAa,CAAG,KAAK;EAC5I;EACI,MAAMC,gBAAgB,GAAG,IAAIX,qBAAqB,CAACY,mBAAmB,EAAET,OAAO,EAAEO,aAAa,CAAC;EACnG;EACI,MAAMG,aAAa,GAAG,IAAIf,iBAAiB,CAACgB,kBAAkB,EAAE,IAAI,EAAEH,gBAAgB,CAAC;EAC3F;EACI,MAAMI,YAAY,GAAG,IAAIb,iBAAiB,CAACc,eAAe,EAAEX,QAAQ,EAAED,eAAe,EAAES,aAAa,CAAC;EACzG;EACI,MAAMI,SAAS,GAAG,IAAInB,iBAAiB,CAACgB,kBAAkB,EAAE,IAAIb,eAAe,CAACiB,aAAa,EAAEZ,eAAe,EAAEC,SAAS,EAAEC,aAAa,EAAEC,cAAc,CAAC,EAAEM,YAAY,CAAC;EACxK,OAAOE,SAAS;AACpB,CAAC;AACDtB,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}