{"ast":null,"code":"import _objectSpread from \"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createCancellableOperation } from '../../utils/createCancellableOperation.mjs';\nimport { parseSigningInfo } from '../../utils/parseSigningInfo.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport '../../errors/validation.mjs';\nimport { resolveApiUrl } from '../../utils/resolveApiUrl.mjs';\nimport { logger } from '../../utils/logger.mjs';\nimport { isIamAuthApplicableForRest } from '../../utils/isIamAuthApplicable.mjs';\nimport { transferHandler } from './transferHandler.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst publicHandler = (amplify, options, method) => createCancellableOperation(async abortSignal => {\n  var _amplify$libraryOptio, _amplify$libraryOptio2;\n  const {\n    apiName,\n    options: apiOptions = {},\n    path: apiPath\n  } = options;\n  const url = resolveApiUrl(amplify, apiName, apiPath, apiOptions === null || apiOptions === void 0 ? void 0 : apiOptions.queryParams);\n  const libraryConfigHeaders = await ((_amplify$libraryOptio = amplify.libraryOptions) === null || _amplify$libraryOptio === void 0 || (_amplify$libraryOptio = _amplify$libraryOptio.API) === null || _amplify$libraryOptio === void 0 || (_amplify$libraryOptio = _amplify$libraryOptio.REST) === null || _amplify$libraryOptio === void 0 || (_amplify$libraryOptio2 = _amplify$libraryOptio.headers) === null || _amplify$libraryOptio2 === void 0 ? void 0 : _amplify$libraryOptio2.call(_amplify$libraryOptio, {\n    apiName\n  }));\n  const {\n    headers: invocationHeaders = {}\n  } = apiOptions;\n  const headers = _objectSpread(_objectSpread({}, libraryConfigHeaders), invocationHeaders);\n  const signingServiceInfo = parseSigningInfo(url, {\n    amplify,\n    apiName\n  });\n  logger.debug(method, url, headers, \"IAM signing options: \".concat(JSON.stringify(signingServiceInfo)));\n  return transferHandler(amplify, _objectSpread(_objectSpread({}, apiOptions), {}, {\n    url,\n    method,\n    headers,\n    abortSignal\n  }), isIamAuthApplicableForRest, signingServiceInfo);\n});\nconst get = (amplify, input) => publicHandler(amplify, input, 'GET');\nconst post = (amplify, input) => publicHandler(amplify, input, 'POST');\nconst put = (amplify, input) => publicHandler(amplify, input, 'PUT');\nconst del = (amplify, input) => publicHandler(amplify, input, 'DELETE');\nconst head = (amplify, input) => publicHandler(amplify, input, 'HEAD');\nconst patch = (amplify, input) => publicHandler(amplify, input, 'PATCH');\nexport { del, get, head, patch, post, put };","map":{"version":3,"names":["publicHandler","amplify","options","method","createCancellableOperation","abortSignal","_amplify$libraryOptio","_amplify$libraryOptio2","apiName","apiOptions","path","apiPath","url","resolveApiUrl","queryParams","libraryConfigHeaders","libraryOptions","API","REST","headers","call","invocationHeaders","_objectSpread","signingServiceInfo","parseSigningInfo","logger","debug","concat","JSON","stringify","transferHandler","isIamAuthApplicableForRest","get","input","post","put","del","head","patch"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\api-rest\\src\\apis\\common\\publicApis.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createCancellableOperation, logger, parseSigningInfo, resolveApiUrl, } from '../../utils';\nimport { isIamAuthApplicableForRest } from '../../utils/isIamAuthApplicable';\nimport { transferHandler } from './transferHandler';\nconst publicHandler = (amplify, options, method) => createCancellableOperation(async (abortSignal) => {\n    const { apiName, options: apiOptions = {}, path: apiPath } = options;\n    const url = resolveApiUrl(amplify, apiName, apiPath, apiOptions?.queryParams);\n    const libraryConfigHeaders = await amplify.libraryOptions?.API?.REST?.headers?.({\n        apiName,\n    });\n    const { headers: invocationHeaders = {} } = apiOptions;\n    const headers = {\n        // custom headers from invocation options should precede library options\n        ...libraryConfigHeaders,\n        ...invocationHeaders,\n    };\n    const signingServiceInfo = parseSigningInfo(url, {\n        amplify,\n        apiName,\n    });\n    logger.debug(method, url, headers, `IAM signing options: ${JSON.stringify(signingServiceInfo)}`);\n    return transferHandler(amplify, {\n        ...apiOptions,\n        url,\n        method,\n        headers,\n        abortSignal,\n    }, isIamAuthApplicableForRest, signingServiceInfo);\n});\nexport const get = (amplify, input) => publicHandler(amplify, input, 'GET');\nexport const post = (amplify, input) => publicHandler(amplify, input, 'POST');\nexport const put = (amplify, input) => publicHandler(amplify, input, 'PUT');\nexport const del = (amplify, input) => publicHandler(amplify, input, 'DELETE');\nexport const head = (amplify, input) => publicHandler(amplify, input, 'HEAD');\nexport const patch = (amplify, input) => publicHandler(amplify, input, 'PATCH');\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AAIA,MAAMA,aAAa,GAAGA,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,KAAKC,0BAA0B,CAAC,MAAOC,WAAW,IAAK;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAClG,MAAM;IAAEC,OAAO;IAAEN,OAAO,EAAEO,UAAU,GAAG,EAAE;IAAEC,IAAI,EAAEC;EAAO,CAAE,GAAGT,OAAO;EACpE,MAAMU,GAAG,GAAGC,aAAa,CAACZ,OAAO,EAAEO,OAAO,EAAEG,OAAO,EAAEF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,WAAW,CAAC;EAC7E,MAAMC,oBAAoB,GAAG,QAAAT,qBAAA,GAAML,OAAO,CAACe,cAAc,cAAAV,qBAAA,gBAAAA,qBAAA,GAAtBA,qBAAA,CAAwBW,GAAG,cAAAX,qBAAA,gBAAAA,qBAAA,GAA3BA,qBAAA,CAA6BY,IAAI,cAAAZ,qBAAA,gBAAAC,sBAAA,GAAjCD,qBAAA,CAAmCa,OAAO,cAAAZ,sBAAA,uBAA1CA,sBAAA,CAAAa,IAAA,CAAAd,qBAAA,EAA6C;IAC5EE;EACR,CAAK,CAAC;EACF,MAAM;IAAEW,OAAO,EAAEE,iBAAiB,GAAG;EAAE,CAAE,GAAGZ,UAAU;EACtD,MAAMU,OAAO,GAAAG,aAAA,CAAAA,aAAA,KAENP,oBAAoB,GACpBM,iBAAiB,CACvB;EACD,MAAME,kBAAkB,GAAGC,gBAAgB,CAACZ,GAAG,EAAE;IAC7CX,OAAO;IACPO;EACR,CAAK,CAAC;EACFiB,MAAM,CAACC,KAAK,CAACvB,MAAM,EAAES,GAAG,EAAEO,OAAO,0BAAAQ,MAAA,CAA0BC,IAAI,CAACC,SAAS,CAACN,kBAAkB,CAAC,CAAE,CAAC;EAChG,OAAOO,eAAe,CAAC7B,OAAO,EAAAqB,aAAA,CAAAA,aAAA,KACvBb,UAAU;IACbG,GAAG;IACHT,MAAM;IACNgB,OAAO;IACPd;EAAW,IACZ0B,0BAA0B,EAAER,kBAAkB,CAAC;AACtD,CAAC,CAAC;AACU,MAACS,GAAG,GAAGA,CAAC/B,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,KAAK;AAC9D,MAACC,IAAI,GAAGA,CAACjC,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,MAAM;AAChE,MAACE,GAAG,GAAGA,CAAClC,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,KAAK;AAC9D,MAACG,GAAG,GAAGA,CAACnC,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,QAAQ;AACjE,MAACI,IAAI,GAAGA,CAACpC,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,MAAM;AAChE,MAACK,KAAK,GAAGA,CAACrC,OAAO,EAAEgC,KAAK,KAAKjC,aAAa,CAACC,OAAO,EAAEgC,KAAK,EAAE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}