{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCustomUserAgent = exports.setCustomUserAgent = void 0;\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = input => {\n  // Save custom user-agent state & increment reference counter\n  // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n  customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n    ...acc,\n    [api]: {\n      refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n      additionalDetails: input.additionalDetails\n    }\n  }), customUserAgentState[input.category] ?? {});\n  // Callback that cleans up state for APIs recorded by this call\n  let cleanUpCallbackCalled = false;\n  const cleanUpCallback = () => {\n    // Only allow the cleanup callback to be called once\n    if (cleanUpCallbackCalled) {\n      return;\n    }\n    cleanUpCallbackCalled = true;\n    input.apis.forEach(api => {\n      const apiRefCount = customUserAgentState[input.category][api].refCount;\n      if (apiRefCount > 1) {\n        customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n      } else {\n        delete customUserAgentState[input.category][api];\n        // Clean up category if no more APIs set\n        if (!Object.keys(customUserAgentState[input.category]).length) {\n          delete customUserAgentState[input.category];\n        }\n      }\n    });\n  };\n  return cleanUpCallback;\n};\nexports.setCustomUserAgent = setCustomUserAgent;\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\nexports.getCustomUserAgent = getCustomUserAgent;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCustomUserAgent","setCustomUserAgent","customUserAgentState","input","category","apis","reduce","acc","api","refCount","additionalDetails","cleanUpCallbackCalled","cleanUpCallback","forEach","apiRefCount","keys","length"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\Platform\\customUserAgent.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCustomUserAgent = exports.setCustomUserAgent = void 0;\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexports.setCustomUserAgent = setCustomUserAgent;\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\nexports.getCustomUserAgent = getCustomUserAgent;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,kBAAkB,GAAG,MAAM;AAChE;AACA,MAAMC,oBAAoB,GAAG,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,kBAAkB,GAAIE,KAAK,IAAK;EACtC;EACA;EACID,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAGD,KAAK,CAACE,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,MAAM;IACpE,GAAGD,GAAG;IACN,CAACC,GAAG,GAAG;MACHC,QAAQ,EAAEF,GAAG,CAACC,GAAG,CAAC,EAAEC,QAAQ,GAAGF,GAAG,CAACC,GAAG,CAAC,CAACC,QAAQ,GAAG,CAAC,GAAG,CAAC;MACxDC,iBAAiB,EAAEP,KAAK,CAACO;IACrC;EACA,CAAK,CAAC,EAAER,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,IAAI,EAAE,CAAC;EACnD;EACI,IAAIO,qBAAqB,GAAG,KAAK;EACjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAClC;IACQ,IAAID,qBAAqB,EAAE;MACvB;IACZ;IACQA,qBAAqB,GAAG,IAAI;IAC5BR,KAAK,CAACE,IAAI,CAACQ,OAAO,CAACL,GAAG,IAAI;MACtB,MAAMM,WAAW,GAAGZ,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,QAAQ;MACtE,IAAIK,WAAW,GAAG,CAAC,EAAE;QACjBZ,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACC,QAAQ,GAAGK,WAAW,GAAG,CAAC;MACpF,OACiB;QACD,OAAOZ,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,CAACI,GAAG,CAAC;QAChE;QACgB,IAAI,CAACZ,MAAM,CAACmB,IAAI,CAACb,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACY,MAAM,EAAE;UAC3D,OAAOd,oBAAoB,CAACC,KAAK,CAACC,QAAQ,CAAC;QAC/D;MACA;IACA,CAAS,CAAC;EACV,CAAK;EACD,OAAOQ,eAAe;AAC1B,CAAC;AACDd,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,MAAMD,kBAAkB,GAAGA,CAACI,QAAQ,EAAEI,GAAG,KAAKN,oBAAoB,CAACE,QAAQ,CAAC,GAAGI,GAAG,CAAC,EAAEE,iBAAiB;AACtGZ,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}