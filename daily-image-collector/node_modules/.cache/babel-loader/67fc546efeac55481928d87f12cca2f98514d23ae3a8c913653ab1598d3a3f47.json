{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendedEncodeURIComponent = void 0;\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nconst extendedEncodeURIComponent = uri => {\n  // Match characters normally not encoded by `encodeURIComponent`\n  const extendedCharacters = /[!'()*]/g;\n  return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\nconst hexEncode = c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;","map":{"version":3,"names":["Object","defineProperty","exports","value","extendedEncodeURIComponent","uri","extendedCharacters","encodeURIComponent","replace","hexEncode","c","charCodeAt","toString","toUpperCase"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\utils\\extendedEncodeURIComponent.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nconst extendedEncodeURIComponent = (uri) => {\n    // Match characters normally not encoded by `encodeURIComponent`\n    const extendedCharacters = /[!'()*]/g;\n    return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,0BAA0B,GAAG,MAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,0BAA0B,GAAIC,GAAG,IAAK;EAC5C;EACI,MAAMC,kBAAkB,GAAG,UAAU;EACrC,OAAOC,kBAAkB,CAACF,GAAG,CAAC,CAACG,OAAO,CAACF,kBAAkB,EAAEG,SAAS,CAAC;AACzE,CAAC;AACDP,OAAO,CAACE,0BAA0B,GAAGA,0BAA0B;AAC/D,MAAMK,SAAS,GAAIC,CAAC,IAAK,IAAIA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,EAAE,EAAE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}