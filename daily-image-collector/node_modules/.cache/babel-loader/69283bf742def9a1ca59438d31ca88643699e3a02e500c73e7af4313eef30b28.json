{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSessionStorageWithFallback = exports.getLocalStorageWithFallback = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst InMemoryStorage_1 = require(\"./InMemoryStorage\");\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new Logger_1.ConsoleLogger('CoreStorageUtils');\nconst getLocalStorageWithFallback = () => {\n  try {\n    // Attempt to use localStorage directly\n    if (typeof window !== 'undefined' && window.localStorage) {\n      return window.localStorage;\n    }\n  } catch (e) {\n    // Handle any errors related to localStorage access\n    logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n  }\n  // Return in-memory storage as a fallback if localStorage is not accessible\n  return new InMemoryStorage_1.InMemoryStorage();\n};\nexports.getLocalStorageWithFallback = getLocalStorageWithFallback;\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => {\n  try {\n    // Attempt to use sessionStorage directly\n    if (typeof window !== 'undefined' && window.sessionStorage) {\n      // Verify we can actually use it by testing access\n      window.sessionStorage.getItem('test');\n      return window.sessionStorage;\n    }\n    throw new Error('sessionStorage is not defined');\n  } catch (e) {\n    // Handle any errors related to sessionStorage access\n    logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n    return new InMemoryStorage_1.InMemoryStorage();\n  }\n};\nexports.getSessionStorageWithFallback = getSessionStorageWithFallback;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSessionStorageWithFallback","getLocalStorageWithFallback","Logger_1","require","InMemoryStorage_1","logger","ConsoleLogger","window","localStorage","e","info","InMemoryStorage","sessionStorage","getItem","Error"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\storage\\utils.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSessionStorageWithFallback = exports.getLocalStorageWithFallback = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst InMemoryStorage_1 = require(\"./InMemoryStorage\");\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new Logger_1.ConsoleLogger('CoreStorageUtils');\nconst getLocalStorageWithFallback = () => {\n    try {\n        // Attempt to use localStorage directly\n        if (typeof window !== 'undefined' && window.localStorage) {\n            return window.localStorage;\n        }\n    }\n    catch (e) {\n        // Handle any errors related to localStorage access\n        logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n    }\n    // Return in-memory storage as a fallback if localStorage is not accessible\n    return new InMemoryStorage_1.InMemoryStorage();\n};\nexports.getLocalStorageWithFallback = getLocalStorageWithFallback;\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => {\n    try {\n        // Attempt to use sessionStorage directly\n        if (typeof window !== 'undefined' && window.sessionStorage) {\n            // Verify we can actually use it by testing access\n            window.sessionStorage.getItem('test');\n            return window.sessionStorage;\n        }\n        throw new Error('sessionStorage is not defined');\n    }\n    catch (e) {\n        // Handle any errors related to sessionStorage access\n        logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n        return new InMemoryStorage_1.InMemoryStorage();\n    }\n};\nexports.getSessionStorageWithFallback = getSessionStorageWithFallback;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,6BAA6B,GAAGF,OAAO,CAACG,2BAA2B,GAAG,MAAM;AACpF,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACtD;AACA;AACA;AACA;AACA,MAAME,MAAM,GAAG,IAAIH,QAAQ,CAACI,aAAa,CAAC,kBAAkB,CAAC;AAC7D,MAAML,2BAA2B,GAAGA,CAAA,KAAM;EACtC,IAAI;IACR;IACQ,IAAI,OAAOM,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,YAAY,EAAE;MACtD,OAAOD,MAAM,CAACC,YAAY;IACtC;EACA,EACI,OAAOC,CAAC,EAAE;IACd;IACQJ,MAAM,CAACK,IAAI,CAAC,gEAAgE,CAAC;EACrF;EACA;EACI,OAAO,IAAIN,iBAAiB,CAACO,eAAe,EAAE;AAClD,CAAC;AACDb,OAAO,CAACG,2BAA2B,GAAGA,2BAA2B;AACjE;AACA;AACA;AACA;AACA,MAAMD,6BAA6B,GAAGA,CAAA,KAAM;EACxC,IAAI;IACR;IACQ,IAAI,OAAOO,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACK,cAAc,EAAE;MACpE;MACYL,MAAM,CAACK,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;MACrC,OAAON,MAAM,CAACK,cAAc;IACxC;IACQ,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EACxD,EACI,OAAOL,CAAC,EAAE;IACd;IACQJ,MAAM,CAACK,IAAI,CAAC,kEAAkE,CAAC;IAC/E,OAAO,IAAIN,iBAAiB,CAACO,eAAe,EAAE;EACtD;AACA,CAAC;AACDb,OAAO,CAACE,6BAA6B,GAAGA,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}