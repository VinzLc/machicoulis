{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.amzSdkRequestHeaderMiddlewareFactory = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nconst amzSdkRequestHeaderMiddlewareFactory = ({\n  maxAttempts = constants_1.DEFAULT_RETRY_ATTEMPTS\n}) => (next, context) => {\n  return async function amzSdkRequestHeaderMiddleware(request) {\n    const attemptsCount = context.attemptsCount ?? 0;\n    request.headers[constants_1.AMZ_SDK_REQUEST_HEADER] = `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n    return next(request);\n  };\n};\nexports.amzSdkRequestHeaderMiddlewareFactory = amzSdkRequestHeaderMiddlewareFactory;","map":{"version":3,"names":["Object","defineProperty","exports","value","amzSdkRequestHeaderMiddlewareFactory","constants_1","require","maxAttempts","DEFAULT_RETRY_ATTEMPTS","next","context","amzSdkRequestHeaderMiddleware","request","attemptsCount","headers","AMZ_SDK_REQUEST_HEADER"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\retry\\amzSdkRequestHeaderMiddleware.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.amzSdkRequestHeaderMiddlewareFactory = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nconst amzSdkRequestHeaderMiddlewareFactory = ({ maxAttempts = constants_1.DEFAULT_RETRY_ATTEMPTS }) => (next, context) => {\n    return async function amzSdkRequestHeaderMiddleware(request) {\n        const attemptsCount = context.attemptsCount ?? 0;\n        request.headers[constants_1.AMZ_SDK_REQUEST_HEADER] =\n            `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n        return next(request);\n    };\n};\nexports.amzSdkRequestHeaderMiddlewareFactory = amzSdkRequestHeaderMiddlewareFactory;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,oCAAoC,GAAG,MAAM;AACrD,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,oCAAoC,GAAGA,CAAC;EAAEG,WAAW,GAAGF,WAAW,CAACG;AAAsB,CAAE,KAAK,CAACC,IAAI,EAAEC,OAAO,KAAK;EACtH,OAAO,eAAeC,6BAA6BA,CAACC,OAAO,EAAE;IACzD,MAAMC,aAAa,GAAGH,OAAO,CAACG,aAAa,IAAI,CAAC;IAChDD,OAAO,CAACE,OAAO,CAACT,WAAW,CAACU,sBAAsB,CAAC,GAC/C,WAAWF,aAAa,GAAG,CAAC,SAASN,WAAW,EAAE;IACtD,OAAOE,IAAI,CAACG,OAAO,CAAC;EAC5B,CAAK;AACL,CAAC;AACDV,OAAO,CAACE,oCAAoC,GAAGA,oCAAoC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}