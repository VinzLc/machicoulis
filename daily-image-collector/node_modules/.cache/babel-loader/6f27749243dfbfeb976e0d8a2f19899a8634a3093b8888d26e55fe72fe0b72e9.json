{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDnsSuffix = void 0;\nconst partitions_1 = require(\"./partitions\");\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = region => {\n  const {\n    partitions\n  } = partitions_1.partitionsInfo;\n  for (const {\n    regions,\n    outputs,\n    regionRegex\n  } of partitions) {\n    const regex = new RegExp(regionRegex);\n    if (regions.includes(region) || regex.test(region)) {\n      return outputs.dnsSuffix;\n    }\n  }\n  return partitions_1.defaultPartition.outputs.dnsSuffix;\n};\nexports.getDnsSuffix = getDnsSuffix;","map":{"version":3,"names":["Object","defineProperty","exports","value","getDnsSuffix","partitions_1","require","region","partitions","partitionsInfo","regions","outputs","regionRegex","regex","RegExp","includes","test","dnsSuffix","defaultPartition"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\endpoints\\getDnsSuffix.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDnsSuffix = void 0;\nconst partitions_1 = require(\"./partitions\");\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = (region) => {\n    const { partitions } = partitions_1.partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return partitions_1.defaultPartition.outputs.dnsSuffix;\n};\nexports.getDnsSuffix = getDnsSuffix;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,MAAM;AAC7B,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,YAAY,GAAIG,MAAM,IAAK;EAC7B,MAAM;IAAEC;EAAU,CAAE,GAAGH,YAAY,CAACI,cAAc;EAClD,KAAK,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAW,CAAE,IAAIJ,UAAU,EAAE;IACxD,MAAMK,KAAK,GAAG,IAAIC,MAAM,CAACF,WAAW,CAAC;IACrC,IAAIF,OAAO,CAACK,QAAQ,CAACR,MAAM,CAAC,IAAIM,KAAK,CAACG,IAAI,CAACT,MAAM,CAAC,EAAE;MAChD,OAAOI,OAAO,CAACM,SAAS;IACpC;EACA;EACI,OAAOZ,YAAY,CAACa,gBAAgB,CAACP,OAAO,CAACM,SAAS;AAC1D,CAAC;AACDf,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}