{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reachability = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst utils_1 = require(\"../utils\");\nclass Reachability {\n  networkMonitor(_) {\n    const globalObj = (0, utils_1.isWebWorker)() ? self : typeof window !== 'undefined' && window;\n    if (!globalObj) {\n      return (0, rxjs_1.from)([{\n        online: true\n      }]);\n    }\n    return new rxjs_1.Observable(observer => {\n      observer.next({\n        online: globalObj.navigator.onLine\n      });\n      const notifyOnline = () => {\n        observer.next({\n          online: true\n        });\n      };\n      const notifyOffline = () => {\n        observer.next({\n          online: false\n        });\n      };\n      globalObj.addEventListener('online', notifyOnline);\n      globalObj.addEventListener('offline', notifyOffline);\n      Reachability._observers.push(observer);\n      return () => {\n        globalObj.removeEventListener('online', notifyOnline);\n        globalObj.removeEventListener('offline', notifyOffline);\n        Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n      };\n    });\n  }\n  // expose observers to simulate offline mode for integration testing\n  static _observerOverride(status) {\n    for (const observer of this._observers) {\n      if (observer.closed) {\n        this._observers = this._observers.filter(_observer => _observer !== observer);\n        continue;\n      }\n      observer?.next && observer.next(status);\n    }\n  }\n}\nexports.Reachability = Reachability;\nReachability._observers = [];","map":{"version":3,"names":["Object","defineProperty","exports","value","Reachability","rxjs_1","require","utils_1","networkMonitor","_","globalObj","isWebWorker","self","window","from","online","Observable","observer","next","navigator","onLine","notifyOnline","notifyOffline","addEventListener","_observers","push","removeEventListener","filter","_observer","_observerOverride","status","closed"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\Reachability\\Reachability.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reachability = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst utils_1 = require(\"../utils\");\nclass Reachability {\n    networkMonitor(_) {\n        const globalObj = (0, utils_1.isWebWorker)()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return (0, rxjs_1.from)([{ online: true }]);\n        }\n        return new rxjs_1.Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => {\n                observer.next({ online: true });\n            };\n            const notifyOffline = () => {\n                observer.next({ online: false });\n            };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nexports.Reachability = Reachability;\nReachability._observers = [];\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,MAAM;AAC7B,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMF,YAAY,CAAC;EACfI,cAAcA,CAACC,CAAC,EAAE;IACd,MAAMC,SAAS,GAAG,IAAIH,OAAO,CAACI,WAAW,MACnCC,IAAA,GACA,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM;IAC7C,IAAI,CAACH,SAAS,EAAE;MACZ,OAAO,IAAIL,MAAM,CAACS,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAI,CAAE,CAAC,CAAC;IACvD;IACQ,OAAO,IAAIV,MAAM,CAACW,UAAU,CAACC,QAAQ,IAAI;MACrCA,QAAQ,CAACC,IAAI,CAAC;QAAEH,MAAM,EAAEL,SAAS,CAACS,SAAS,CAACC;MAAM,CAAE,CAAC;MACrD,MAAMC,YAAY,GAAGA,CAAA,KAAM;QACvBJ,QAAQ,CAACC,IAAI,CAAC;UAAEH,MAAM,EAAE;QAAI,CAAE,CAAC;MAC/C,CAAa;MACD,MAAMO,aAAa,GAAGA,CAAA,KAAM;QACxBL,QAAQ,CAACC,IAAI,CAAC;UAAEH,MAAM,EAAE;QAAK,CAAE,CAAC;MAChD,CAAa;MACDL,SAAS,CAACa,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;MAClDX,SAAS,CAACa,gBAAgB,CAAC,SAAS,EAAED,aAAa,CAAC;MACpDlB,YAAY,CAACoB,UAAU,CAACC,IAAI,CAACR,QAAQ,CAAC;MACtC,OAAO,MAAM;QACTP,SAAS,CAACgB,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;QACrDX,SAAS,CAACgB,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;QACvDlB,YAAY,CAACoB,UAAU,GAAGpB,YAAY,CAACoB,UAAU,CAACG,MAAM,CAACC,SAAS,IAAIA,SAAS,KAAKX,QAAQ,CAAC;MAC7G,CAAa;IACb,CAAS,CAAC;EACV;EACA;EACI,OAAOY,iBAAiBA,CAACC,MAAM,EAAE;IAC7B,KAAK,MAAMb,QAAQ,IAAI,IAAI,CAACO,UAAU,EAAE;MACpC,IAAIP,QAAQ,CAACc,MAAM,EAAE;QACjB,IAAI,CAACP,UAAU,GAAG,IAAI,CAACA,UAAU,CAACG,MAAM,CAACC,SAAS,IAAIA,SAAS,KAAKX,QAAQ,CAAC;QAC7E;MAChB;MACYA,QAAQ,EAAEC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACY,MAAM,CAAC;IACnD;EACA;AACA;AACA5B,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnCA,YAAY,CAACoB,UAAU,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}