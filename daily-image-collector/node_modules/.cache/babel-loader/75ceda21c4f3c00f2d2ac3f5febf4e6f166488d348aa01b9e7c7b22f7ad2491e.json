{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializePathnameObjectKey = exports.serializeObjectConfigsToHeaders = exports.assignStringVariables = void 0;\nexports.validateS3RequiredParameter = validateS3RequiredParameter;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst StorageError_1 = require(\"../../../../../errors/StorageError\");\n/**\n * @internal\n */\nconst assignStringVariables = values => {\n  const queryParams = {};\n  for (const [key, value] of Object.entries(values)) {\n    if (value != null) {\n      queryParams[key] = value.toString();\n    }\n  }\n  return queryParams;\n};\nexports.assignStringVariables = assignStringVariables;\n/**\n * Serailize the parameters for configuring the S3 object. Currently used by\n * `putObject` and `createMultipartUpload` API.\n *\n * @internal\n */\nconst serializeObjectConfigsToHeaders = async input => ({\n  ...(0, exports.assignStringVariables)({\n    'x-amz-acl': input.ACL,\n    'cache-control': input.CacheControl,\n    'content-disposition': input.ContentDisposition,\n    'content-language': input.ContentLanguage,\n    'content-encoding': input.ContentEncoding,\n    'content-type': input.ContentType,\n    expires: input.Expires?.toUTCString(),\n    'x-amz-tagging': input.Tagging,\n    ...serializeMetadata(input.Metadata)\n  })\n});\nexports.serializeObjectConfigsToHeaders = serializeObjectConfigsToHeaders;\nconst serializeMetadata = (metadata = {}) => Object.keys(metadata).reduce((acc, suffix) => {\n  acc[`x-amz-meta-${suffix.toLowerCase()}`] = metadata[suffix];\n  return acc;\n}, {});\n/**\n * Serialize the object key to a URL pathname.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/7ed7101dcc4e81038b6c7f581162b959e6b33a04/clients/client-s3/src/protocols/Aws_restXml.ts#L1108\n *\n * @internal\n */\nconst serializePathnameObjectKey = (url, key) => {\n  return url.pathname.replace(/\\/$/, '') + `/${key.split('/').map(aws_client_utils_1.extendedEncodeURIComponent).join('/')}`;\n};\nexports.serializePathnameObjectKey = serializePathnameObjectKey;\nfunction validateS3RequiredParameter(assertion, paramName) {\n  if (!assertion) {\n    throw new StorageError_1.StorageError({\n      name: utils_1.AmplifyErrorCode.Unknown,\n      message: 'An unknown error has occurred.',\n      underlyingError: new TypeError(`Expected a non-null value for S3 parameter ${paramName}`),\n      recoverySuggestion: 'This is likely to be a bug. Please reach out to library authors.'\n    });\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","serializePathnameObjectKey","serializeObjectConfigsToHeaders","assignStringVariables","validateS3RequiredParameter","aws_client_utils_1","require","utils_1","StorageError_1","values","queryParams","key","entries","toString","input","ACL","CacheControl","ContentDisposition","ContentLanguage","ContentEncoding","ContentType","expires","Expires","toUTCString","Tagging","serializeMetadata","Metadata","metadata","keys","reduce","acc","suffix","toLowerCase","url","pathname","replace","split","map","extendedEncodeURIComponent","join","assertion","paramName","StorageError","name","AmplifyErrorCode","Unknown","message","underlyingError","TypeError","recoverySuggestion"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\utils\\serializeHelpers.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializePathnameObjectKey = exports.serializeObjectConfigsToHeaders = exports.assignStringVariables = void 0;\nexports.validateS3RequiredParameter = validateS3RequiredParameter;\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst StorageError_1 = require(\"../../../../../errors/StorageError\");\n/**\n * @internal\n */\nconst assignStringVariables = (values) => {\n    const queryParams = {};\n    for (const [key, value] of Object.entries(values)) {\n        if (value != null) {\n            queryParams[key] = value.toString();\n        }\n    }\n    return queryParams;\n};\nexports.assignStringVariables = assignStringVariables;\n/**\n * Serailize the parameters for configuring the S3 object. Currently used by\n * `putObject` and `createMultipartUpload` API.\n *\n * @internal\n */\nconst serializeObjectConfigsToHeaders = async (input) => ({\n    ...(0, exports.assignStringVariables)({\n        'x-amz-acl': input.ACL,\n        'cache-control': input.CacheControl,\n        'content-disposition': input.ContentDisposition,\n        'content-language': input.ContentLanguage,\n        'content-encoding': input.ContentEncoding,\n        'content-type': input.ContentType,\n        expires: input.Expires?.toUTCString(),\n        'x-amz-tagging': input.Tagging,\n        ...serializeMetadata(input.Metadata),\n    }),\n});\nexports.serializeObjectConfigsToHeaders = serializeObjectConfigsToHeaders;\nconst serializeMetadata = (metadata = {}) => Object.keys(metadata).reduce((acc, suffix) => {\n    acc[`x-amz-meta-${suffix.toLowerCase()}`] = metadata[suffix];\n    return acc;\n}, {});\n/**\n * Serialize the object key to a URL pathname.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/7ed7101dcc4e81038b6c7f581162b959e6b33a04/clients/client-s3/src/protocols/Aws_restXml.ts#L1108\n *\n * @internal\n */\nconst serializePathnameObjectKey = (url, key) => {\n    return (url.pathname.replace(/\\/$/, '') +\n        `/${key.split('/').map(aws_client_utils_1.extendedEncodeURIComponent).join('/')}`);\n};\nexports.serializePathnameObjectKey = serializePathnameObjectKey;\nfunction validateS3RequiredParameter(assertion, paramName) {\n    if (!assertion) {\n        throw new StorageError_1.StorageError({\n            name: utils_1.AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: new TypeError(`Expected a non-null value for S3 parameter ${paramName}`),\n            recoverySuggestion: 'This is likely to be a bug. Please reach out to library authors.',\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}