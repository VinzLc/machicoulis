{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.putEvents = void 0;\nconst authenticated_1 = require(\"../../clients/handlers/aws/authenticated\");\nconst composeServiceApi_1 = require(\"../../clients/internal/composeServiceApi\");\nconst extendedEncodeURIComponent_1 = require(\"../../clients/middleware/signing/utils/extendedEncodeURIComponent\");\nconst serde_1 = require(\"../../clients/serde\");\nconst amplifyUrl_1 = require(\"../../utils/amplifyUrl\");\nconst base_1 = require(\"./base\");\nconst errorHelpers_1 = require(\"./errorHelpers\");\nconst putEventsSerializer = ({\n  ApplicationId,\n  EventsRequest\n}, endpoint) => {\n  (0, errorHelpers_1.assert)(!!ApplicationId, errorHelpers_1.PinpointValidationErrorCode.NoAppId);\n  const headers = (0, base_1.getSharedHeaders)();\n  const url = new amplifyUrl_1.AmplifyUrl(endpoint.url);\n  url.pathname = `v1/apps/${(0, extendedEncodeURIComponent_1.extendedEncodeURIComponent)(ApplicationId)}/events`;\n  const body = JSON.stringify(EventsRequest ?? {});\n  return {\n    method: 'POST',\n    headers,\n    url,\n    body\n  };\n};\nconst putEventsDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    const error = await (0, serde_1.parseJsonError)(response);\n    throw error;\n  } else {\n    const {\n      Results\n    } = await (0, serde_1.parseJsonBody)(response);\n    return {\n      EventsResponse: {\n        Results\n      },\n      $metadata: (0, serde_1.parseMetadata)(response)\n    };\n  }\n};\n/**\n * @internal\n */\nexports.putEvents = (0, composeServiceApi_1.composeServiceApi)(authenticated_1.authenticatedHandler, putEventsSerializer, putEventsDeserializer, base_1.defaultConfig);","map":{"version":3,"names":["Object","defineProperty","exports","value","putEvents","authenticated_1","require","composeServiceApi_1","extendedEncodeURIComponent_1","serde_1","amplifyUrl_1","base_1","errorHelpers_1","putEventsSerializer","ApplicationId","EventsRequest","endpoint","assert","PinpointValidationErrorCode","NoAppId","headers","getSharedHeaders","url","AmplifyUrl","pathname","extendedEncodeURIComponent","body","JSON","stringify","method","putEventsDeserializer","response","statusCode","error","parseJsonError","Results","parseJsonBody","EventsResponse","$metadata","parseMetadata","composeServiceApi","authenticatedHandler","defaultConfig"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\awsClients\\pinpoint\\putEvents.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.putEvents = void 0;\nconst authenticated_1 = require(\"../../clients/handlers/aws/authenticated\");\nconst composeServiceApi_1 = require(\"../../clients/internal/composeServiceApi\");\nconst extendedEncodeURIComponent_1 = require(\"../../clients/middleware/signing/utils/extendedEncodeURIComponent\");\nconst serde_1 = require(\"../../clients/serde\");\nconst amplifyUrl_1 = require(\"../../utils/amplifyUrl\");\nconst base_1 = require(\"./base\");\nconst errorHelpers_1 = require(\"./errorHelpers\");\nconst putEventsSerializer = ({ ApplicationId, EventsRequest }, endpoint) => {\n    (0, errorHelpers_1.assert)(!!ApplicationId, errorHelpers_1.PinpointValidationErrorCode.NoAppId);\n    const headers = (0, base_1.getSharedHeaders)();\n    const url = new amplifyUrl_1.AmplifyUrl(endpoint.url);\n    url.pathname = `v1/apps/${(0, extendedEncodeURIComponent_1.extendedEncodeURIComponent)(ApplicationId)}/events`;\n    const body = JSON.stringify(EventsRequest ?? {});\n    return { method: 'POST', headers, url, body };\n};\nconst putEventsDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await (0, serde_1.parseJsonError)(response);\n        throw error;\n    }\n    else {\n        const { Results } = await (0, serde_1.parseJsonBody)(response);\n        return {\n            EventsResponse: { Results },\n            $metadata: (0, serde_1.parseMetadata)(response),\n        };\n    }\n};\n/**\n * @internal\n */\nexports.putEvents = (0, composeServiceApi_1.composeServiceApi)(authenticated_1.authenticatedHandler, putEventsSerializer, putEventsDeserializer, base_1.defaultConfig);\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,MAAM;AAC1B,MAAMC,eAAe,GAAGC,OAAO,CAAC,0CAA0C,CAAC;AAC3E,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,0CAA0C,CAAC;AAC/E,MAAME,4BAA4B,GAAGF,OAAO,CAAC,mEAAmE,CAAC;AACjH,MAAMG,OAAO,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAC9C,MAAMI,YAAY,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACtD,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMM,cAAc,GAAGN,OAAO,CAAC,gBAAgB,CAAC;AAChD,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAa,CAAE,EAAEC,QAAQ,KAAK;EACxE,IAAIJ,cAAc,CAACK,MAAM,EAAE,CAAC,CAACH,aAAa,EAAEF,cAAc,CAACM,2BAA2B,CAACC,OAAO,CAAC;EAC/F,MAAMC,OAAO,GAAG,IAAIT,MAAM,CAACU,gBAAgB,GAAG;EAC9C,MAAMC,GAAG,GAAG,IAAIZ,YAAY,CAACa,UAAU,CAACP,QAAQ,CAACM,GAAG,CAAC;EACrDA,GAAG,CAACE,QAAQ,GAAG,WAAW,IAAIhB,4BAA4B,CAACiB,0BAA0B,EAAEX,aAAa,CAAC,SAAS;EAC9G,MAAMY,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACb,aAAa,IAAI,EAAE,CAAC;EAChD,OAAO;IAAEc,MAAM,EAAE,MAAM;IAAET,OAAO;IAAEE,GAAG;IAAEI;EAAI,CAAE;AACjD,CAAC;AACD,MAAMI,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAIA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAAE;IAC5B,MAAMC,KAAK,GAAG,MAAM,IAAIxB,OAAO,CAACyB,cAAc,EAAEH,QAAQ,CAAC;IACzD,MAAME,KAAK;EACnB,OACS;IACD,MAAM;MAAEE;IAAO,CAAE,GAAG,MAAM,IAAI1B,OAAO,CAAC2B,aAAa,EAAEL,QAAQ,CAAC;IAC9D,OAAO;MACHM,cAAc,EAAE;QAAEF;MAAO,CAAE;MAC3BG,SAAS,EAAE,IAAI7B,OAAO,CAAC8B,aAAa,EAAER,QAAQ;IAC1D,CAAS;EACT;AACA,CAAC;AACD;AACA;AACA;AACA7B,OAAO,CAACE,SAAS,GAAG,IAAIG,mBAAmB,CAACiC,iBAAiB,EAAEnC,eAAe,CAACoC,oBAAoB,EAAE5B,mBAAmB,EAAEiB,qBAAqB,EAAEnB,MAAM,CAAC+B,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}