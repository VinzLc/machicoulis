{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinzl\\\\workspace\\\\machicoulis\\\\daily-image-collector\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useGameLogic } from './hooks/useGameLogic';\nimport { Amplify } from 'aws-amplify';\nimport { getCurrentUser, signOut } from 'aws-amplify/auth';\nimport awsExports from './aws-exports';\nimport LoginScreen from './components/LoginScreen';\nimport HomeScreen from './components/HomeScreen';\nimport CollectionScreen from './components/CollectionScreen';\nimport NewImageModal from './components/NewImageModal';\nimport ImageDetailModal from './components/ImageDetailModal';\nimport './styles/animations.css'; // Import the animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure(awsExports);\nconst DailyImageCollector = () => {\n  _s();\n  const [authUser, setAuthUser] = useState(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n  const [isCardNew, setIsCardNew] = useState(false);\n  const {\n    user,\n    login,\n    logout: gameLogout,\n    currentView,\n    setCurrentView,\n    userCollection,\n    todaysClaim,\n    drawDailyImage,\n    loading,\n    getStreakCount,\n    imageDatabase,\n    showNewImage,\n    setShowNewImage,\n    todaysImage,\n    shakeAnimation,\n    setShakeAnimation,\n    selectedImage,\n    setSelectedImage,\n    isFullscreen,\n    setIsFullscreen\n  } = useGameLogic();\n\n  // Check authentication state on app load\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n  const checkAuthState = async () => {\n    try {\n      var _cognitoUser$signInDe;\n      const cognitoUser = await getCurrentUser();\n      console.log('Authenticated user found:', cognitoUser);\n      setAuthUser(cognitoUser);\n\n      // Auto-login with Cognito user data\n      const username = cognitoUser.username;\n      const email = ((_cognitoUser$signInDe = cognitoUser.signInDetails) === null || _cognitoUser$signInDe === void 0 ? void 0 : _cognitoUser$signInDe.loginId) || '';\n      login(username, email);\n    } catch (error) {\n      console.log('No authenticated user found');\n      setAuthUser(null);\n    }\n    setIsAuthLoading(false);\n  };\n\n  // Check if the current card is new for the user when todaysImage changes\n  useEffect(() => {\n    if (todaysImage && userCollection) {\n      // Extract base ID (part before underscore) from todaysImage\n      const todaysBaseId = todaysImage.id.toString().split('_')[0];\n\n      // Exclude the last entry (just drawn card) when checking if it's new\n      const collectionWithoutLastCard = userCollection.slice(0, -1);\n\n      // Check if user had any card with this base ID before drawing this one\n      const userHadCard = collectionWithoutLastCard.some(card => {\n        const cardBaseId = card.id.toString().split('_')[0];\n        return cardBaseId === todaysBaseId;\n      });\n      console.log('=== Card Check Debug ===');\n      console.log('todaysImage:', todaysImage);\n      console.log('todaysImage full ID:', todaysImage.id);\n      console.log('todaysImage base ID:', todaysBaseId);\n      console.log('userCollection length:', userCollection.length);\n      console.log('collection without last card:', collectionWithoutLastCard.map(card => card.id.toString().split('_')[0]));\n      console.log('userHadCard before:', userHadCard);\n      console.log('Setting isCardNew to:', !userHadCard);\n      console.log('========================');\n      setIsCardNew(!userHadCard);\n    }\n  }, [todaysImage, userCollection]);\n\n  // Enhanced login function that handles both Cognito and demo users\n  const handleLogin = async (username, email) => {\n    // For admin users, skip Cognito authentication\n    if (username === 'admin') {\n      login(username, email);\n      setAuthUser({\n        username,\n        email,\n        isAdminUser: true\n      });\n      return;\n    }\n\n    // For real users, they should already be authenticated through Cognito\n    // This function is called after successful Cognito auth\n    login(username, email);\n  };\n\n  // Enhanced logout function\n  const handleLogout = async () => {\n    try {\n      // Only sign out from Cognito if it's not an admin user\n      if (authUser && !authUser.isAdminUser) {\n        await signOut();\n      }\n      setAuthUser(null);\n      gameLogout();\n    } catch (error) {\n      console.error('Error signing out:', error);\n      // Force logout even if Cognito signout fails\n      setAuthUser(null);\n      gameLogout();\n    }\n  };\n\n  // Check if the current card is new for the user\n  const isNewCard = () => {\n    return isCardNew;\n  };\n\n  // Show loading screen while checking authentication\n  if (isAuthLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-600 to-blue-600\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-32 w-32 border-b-4 border-white mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white text-xl font-bold\",\n          children: \"Chargement de Pocket Machicoulis...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show login screen if no authenticated user and no game user\n  if (!authUser && !user) {\n    return /*#__PURE__*/_jsxDEV(LoginScreen, {\n      login: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentView === 'home' && /*#__PURE__*/_jsxDEV(HomeScreen, {\n      user: user,\n      logout: handleLogout,\n      drawDailyImage: drawDailyImage,\n      loading: loading,\n      todaysClaim: todaysClaim,\n      userCollection: userCollection,\n      getStreakCount: getStreakCount,\n      imageDatabase: imageDatabase,\n      setCurrentView: setCurrentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), currentView === 'collection' && /*#__PURE__*/_jsxDEV(CollectionScreen, {\n      userCollection: userCollection,\n      imageDatabase: imageDatabase,\n      setCurrentView: setCurrentView,\n      setSelectedImage: setSelectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewImageModal, {\n      showNewImage: showNewImage,\n      setShowNewImage: setShowNewImage,\n      todaysImage: todaysImage,\n      shakeAnimation: shakeAnimation,\n      setShakeAnimation: setShakeAnimation,\n      isNewCard: isNewCard(),\n      userCollection: userCollection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageDetailModal, {\n      selectedImage: selectedImage,\n      setSelectedImage: setSelectedImage,\n      isFullscreen: isFullscreen,\n      setIsFullscreen: setIsFullscreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyImageCollector, \"1vdzP8AKcVCbRJEr4g5XdqMsH9g=\", false, function () {\n  return [useGameLogic];\n});\n_c = DailyImageCollector;\nexport default DailyImageCollector;\nvar _c;\n$RefreshReg$(_c, \"DailyImageCollector\");","map":{"version":3,"names":["React","useEffect","useState","useGameLogic","Amplify","getCurrentUser","signOut","awsExports","LoginScreen","HomeScreen","CollectionScreen","NewImageModal","ImageDetailModal","jsxDEV","_jsxDEV","configure","DailyImageCollector","_s","authUser","setAuthUser","isAuthLoading","setIsAuthLoading","isCardNew","setIsCardNew","user","login","logout","gameLogout","currentView","setCurrentView","userCollection","todaysClaim","drawDailyImage","loading","getStreakCount","imageDatabase","showNewImage","setShowNewImage","todaysImage","shakeAnimation","setShakeAnimation","selectedImage","setSelectedImage","isFullscreen","setIsFullscreen","checkAuthState","_cognitoUser$signInDe","cognitoUser","console","log","username","email","signInDetails","loginId","error","todaysBaseId","id","toString","split","collectionWithoutLastCard","slice","userHadCard","some","card","cardBaseId","length","map","handleLogin","isAdminUser","handleLogout","isNewCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vinzl/workspace/machicoulis/daily-image-collector/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useGameLogic } from './hooks/useGameLogic';\nimport { Amplify } from 'aws-amplify';\nimport { getCurrentUser, signOut } from 'aws-amplify/auth';\nimport awsExports from './aws-exports';\nimport LoginScreen from './components/LoginScreen';\nimport HomeScreen from './components/HomeScreen';\nimport CollectionScreen from './components/CollectionScreen';\nimport NewImageModal from './components/NewImageModal';\nimport ImageDetailModal from './components/ImageDetailModal';\nimport './styles/animations.css'; // Import the animations\n\nAmplify.configure(awsExports);\n\nconst DailyImageCollector = () => {\n  const [authUser, setAuthUser] = useState(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n  const [isCardNew, setIsCardNew] = useState(false);\n\n  const {\n    user,\n    login,\n    logout: gameLogout,\n    currentView,\n    setCurrentView,\n    userCollection,\n    todaysClaim,\n    drawDailyImage,\n    loading,\n    getStreakCount,\n    imageDatabase,\n    showNewImage,\n    setShowNewImage,\n    todaysImage,\n    shakeAnimation,\n    setShakeAnimation,\n    selectedImage,\n    setSelectedImage,\n    isFullscreen,\n    setIsFullscreen\n  } = useGameLogic();\n\n  // Check authentication state on app load\n  useEffect(() => {\n    checkAuthState();\n  }, []);\n\n  const checkAuthState = async () => {\n    try {\n      const cognitoUser = await getCurrentUser();\n      console.log('Authenticated user found:', cognitoUser);\n      setAuthUser(cognitoUser);\n      \n      // Auto-login with Cognito user data\n      const username = cognitoUser.username;\n      const email = cognitoUser.signInDetails?.loginId || '';\n      login(username, email);\n    } catch (error) {\n      console.log('No authenticated user found');\n      setAuthUser(null);\n    }\n    setIsAuthLoading(false);\n  };\n\n  // Check if the current card is new for the user when todaysImage changes\n  useEffect(() => {\n    if (todaysImage && userCollection) {\n      // Extract base ID (part before underscore) from todaysImage\n      const todaysBaseId = todaysImage.id.toString().split('_')[0];\n      \n      // Exclude the last entry (just drawn card) when checking if it's new\n      const collectionWithoutLastCard = userCollection.slice(0, -1);\n      \n      // Check if user had any card with this base ID before drawing this one\n      const userHadCard = collectionWithoutLastCard.some(card => {\n        const cardBaseId = card.id.toString().split('_')[0];\n        return cardBaseId === todaysBaseId;\n      });\n      \n      console.log('=== Card Check Debug ===');\n      console.log('todaysImage:', todaysImage);\n      console.log('todaysImage full ID:', todaysImage.id);\n      console.log('todaysImage base ID:', todaysBaseId);\n      console.log('userCollection length:', userCollection.length);\n      console.log('collection without last card:', collectionWithoutLastCard.map(card => card.id.toString().split('_')[0]));\n      console.log('userHadCard before:', userHadCard);\n      console.log('Setting isCardNew to:', !userHadCard);\n      console.log('========================');\n      setIsCardNew(!userHadCard);\n    }\n  }, [todaysImage, userCollection]);\n\n  // Enhanced login function that handles both Cognito and demo users\n  const handleLogin = async (username, email) => {\n    // For admin users, skip Cognito authentication\n    if (username === 'admin') {\n      login(username, email);\n      setAuthUser({ username, email, isAdminUser: true });\n      return;\n    }\n\n    // For real users, they should already be authenticated through Cognito\n    // This function is called after successful Cognito auth\n    login(username, email);\n  };\n\n  // Enhanced logout function\n  const handleLogout = async () => {\n    try {\n      // Only sign out from Cognito if it's not an admin user\n      if (authUser && !authUser.isAdminUser) {\n        await signOut();\n      }\n      setAuthUser(null);\n      gameLogout();\n    } catch (error) {\n      console.error('Error signing out:', error);\n      // Force logout even if Cognito signout fails\n      setAuthUser(null);\n      gameLogout();\n    }\n  };\n\n  // Check if the current card is new for the user\n  const isNewCard = () => {\n    return isCardNew;\n  };\n\n  // Show loading screen while checking authentication\n  if (isAuthLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-600 to-blue-600\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-4 border-white mb-4\"></div>\n          <p className=\"text-white text-xl font-bold\">Chargement de Pocket Machicoulis...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show login screen if no authenticated user and no game user\n  if (!authUser && !user) {\n    return <LoginScreen login={handleLogin} />;\n  }\n\n  return (\n    <div>\n      {currentView === 'home' && (\n        <HomeScreen\n          user={user}\n          logout={handleLogout}\n          drawDailyImage={drawDailyImage}\n          loading={loading}\n          todaysClaim={todaysClaim}\n          userCollection={userCollection}\n          getStreakCount={getStreakCount}\n          imageDatabase={imageDatabase}\n          setCurrentView={setCurrentView}\n        />\n      )}\n      {currentView === 'collection' && (\n        <CollectionScreen\n          userCollection={userCollection}\n          imageDatabase={imageDatabase}\n          setCurrentView={setCurrentView}\n          setSelectedImage={setSelectedImage}\n        />\n      )}\n      <NewImageModal\n        showNewImage={showNewImage}\n        setShowNewImage={setShowNewImage}\n        todaysImage={todaysImage}\n        shakeAnimation={shakeAnimation}\n        setShakeAnimation={setShakeAnimation}\n        isNewCard={isNewCard()}\n        userCollection={userCollection}\n      />\n      <ImageDetailModal\n        selectedImage={selectedImage}\n        setSelectedImage={setSelectedImage}\n        isFullscreen={isFullscreen}\n        setIsFullscreen={setIsFullscreen}\n      />\n    </div>\n  );\n};\n\nexport default DailyImageCollector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}