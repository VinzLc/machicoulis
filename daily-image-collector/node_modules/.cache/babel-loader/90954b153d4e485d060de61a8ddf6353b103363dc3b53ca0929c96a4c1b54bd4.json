{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.I18n = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst I18n_1 = require(\"./I18n\");\nconst errorHelpers_1 = require(\"./errorHelpers\");\nconst logger = new Logger_1.ConsoleLogger('I18n');\nlet _config = {\n  language: null\n};\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nclass I18n {\n  /**\n   * @static\n   * @method\n   * Configure I18n part\n   * @param {Object} config - Configuration of the I18n\n   */\n  static configure(config) {\n    logger.debug('configure I18n');\n    if (!config) {\n      return _config;\n    }\n    _config = Object.assign({}, _config, config.I18n || config);\n    I18n.createInstance();\n    return _config;\n  }\n  static getModuleName() {\n    return 'I18n';\n  }\n  /**\n   * @static\n   * @method\n   * Create an instance of I18n for the library\n   */\n  static createInstance() {\n    logger.debug('create I18n instance');\n    if (_i18n) {\n      return;\n    }\n    _i18n = new I18n_1.I18n();\n  }\n  /**\n   * @static @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  static setLanguage(lang) {\n    I18n.checkConfig();\n    (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n    _i18n.setLanguage(lang);\n  }\n  /**\n   * @static @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  static get(key, defVal) {\n    if (!I18n.checkConfig()) {\n      return typeof defVal === 'undefined' ? key : defVal;\n    }\n    (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n    return _i18n.get(key, defVal);\n  }\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  static putVocabulariesForLanguage(language, vocabularies) {\n    I18n.checkConfig();\n    (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n    _i18n.putVocabulariesForLanguage(language, vocabularies);\n  }\n  /**\n   * @static\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  static putVocabularies(vocabularies) {\n    I18n.checkConfig();\n    (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n    _i18n.putVocabularies(vocabularies);\n  }\n  static checkConfig() {\n    if (!_i18n) {\n      I18n.createInstance();\n    }\n    return true;\n  }\n}\nexports.I18n = I18n;\n// Create an instance of I18n in the static class\nI18n.createInstance();","map":{"version":3,"names":["Object","defineProperty","exports","value","I18n","Logger_1","require","I18n_1","errorHelpers_1","logger","ConsoleLogger","_config","language","_i18n","configure","config","debug","assign","createInstance","getModuleName","setLanguage","lang","checkConfig","assert","I18nErrorCode","NotConfigured","get","key","defVal","putVocabulariesForLanguage","vocabularies","putVocabularies"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\I18n\\index.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.I18n = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst I18n_1 = require(\"./I18n\");\nconst errorHelpers_1 = require(\"./errorHelpers\");\nconst logger = new Logger_1.ConsoleLogger('I18n');\nlet _config = { language: null };\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nclass I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    }\n    static getModuleName() {\n        return 'I18n';\n    }\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18n_1.I18n();\n    }\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n        (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n        _i18n.setLanguage(lang);\n    }\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n        return _i18n.get(key, defVal);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n        (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n        _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n        (0, errorHelpers_1.assert)(!!_i18n, errorHelpers_1.I18nErrorCode.NotConfigured);\n        _i18n.putVocabularies(vocabularies);\n    }\n    static checkConfig() {\n        if (!_i18n) {\n            I18n.createInstance();\n        }\n        return true;\n    }\n}\nexports.I18n = I18n;\n// Create an instance of I18n in the static class\nI18n.createInstance();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}