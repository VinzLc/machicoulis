{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst utils_2 = require(\"../../utils\");\nconst s3data_1 = require(\"../../utils/client/s3data\");\nconst userAgent_1 = require(\"../../utils/userAgent\");\nconst utils_3 = require(\"../../../../utils\");\nconst constants_1 = require(\"../../utils/constants\");\nconst remove = async (amplify, input) => {\n  const {\n    s3Config,\n    keyPrefix,\n    bucket,\n    identityId\n  } = await (0, utils_2.resolveS3ConfigAndInput)(amplify, input);\n  const {\n    inputType,\n    objectKey\n  } = (0, utils_2.validateStorageOperationInput)(input, identityId);\n  (0, utils_2.validateBucketOwnerID)(input.options?.expectedBucketOwner);\n  let finalKey;\n  if (inputType === constants_1.STORAGE_INPUT_KEY) {\n    finalKey = `${keyPrefix}${objectKey}`;\n    utils_3.logger.debug(`remove \"${objectKey}\" from \"${finalKey}\".`);\n  } else {\n    finalKey = objectKey;\n    utils_3.logger.debug(`removing object in path \"${finalKey}\"`);\n  }\n  await (0, s3data_1.deleteObject)({\n    ...s3Config,\n    userAgentValue: (0, userAgent_1.getStorageUserAgentValue)(utils_1.StorageAction.Remove)\n  }, {\n    Bucket: bucket,\n    Key: finalKey,\n    ExpectedBucketOwner: input.options?.expectedBucketOwner\n  });\n  return inputType === constants_1.STORAGE_INPUT_KEY ? {\n    key: objectKey\n  } : {\n    path: objectKey\n  };\n};\nexports.remove = remove;","map":{"version":3,"names":["Object","defineProperty","exports","value","remove","utils_1","require","utils_2","s3data_1","userAgent_1","utils_3","constants_1","amplify","input","s3Config","keyPrefix","bucket","identityId","resolveS3ConfigAndInput","inputType","objectKey","validateStorageOperationInput","validateBucketOwnerID","options","expectedBucketOwner","finalKey","STORAGE_INPUT_KEY","logger","debug","deleteObject","userAgentValue","getStorageUserAgentValue","StorageAction","Remove","Bucket","Key","ExpectedBucketOwner","key","path"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\internal\\remove.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remove = void 0;\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst utils_2 = require(\"../../utils\");\nconst s3data_1 = require(\"../../utils/client/s3data\");\nconst userAgent_1 = require(\"../../utils/userAgent\");\nconst utils_3 = require(\"../../../../utils\");\nconst constants_1 = require(\"../../utils/constants\");\nconst remove = async (amplify, input) => {\n    const { s3Config, keyPrefix, bucket, identityId } = await (0, utils_2.resolveS3ConfigAndInput)(amplify, input);\n    const { inputType, objectKey } = (0, utils_2.validateStorageOperationInput)(input, identityId);\n    (0, utils_2.validateBucketOwnerID)(input.options?.expectedBucketOwner);\n    let finalKey;\n    if (inputType === constants_1.STORAGE_INPUT_KEY) {\n        finalKey = `${keyPrefix}${objectKey}`;\n        utils_3.logger.debug(`remove \"${objectKey}\" from \"${finalKey}\".`);\n    }\n    else {\n        finalKey = objectKey;\n        utils_3.logger.debug(`removing object in path \"${finalKey}\"`);\n    }\n    await (0, s3data_1.deleteObject)({\n        ...s3Config,\n        userAgentValue: (0, userAgent_1.getStorageUserAgentValue)(utils_1.StorageAction.Remove),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ExpectedBucketOwner: input.options?.expectedBucketOwner,\n    });\n    return inputType === constants_1.STORAGE_INPUT_KEY\n        ? {\n            key: objectKey,\n        }\n        : {\n            path: objectKey,\n        };\n};\nexports.remove = remove;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,MAAM;AACvB,MAAMC,OAAO,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AAC5D,MAAMC,OAAO,GAAGD,OAAO,CAAC,aAAa,CAAC;AACtC,MAAME,QAAQ,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AACrD,MAAMG,WAAW,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AACpD,MAAMI,OAAO,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMK,WAAW,GAAGL,OAAO,CAAC,uBAAuB,CAAC;AACpD,MAAMF,MAAM,GAAG,MAAAA,CAAOQ,OAAO,EAAEC,KAAK,KAAK;EACrC,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAE,GAAG,MAAM,IAAIV,OAAO,CAACW,uBAAuB,EAAEN,OAAO,EAAEC,KAAK,CAAC;EAC9G,MAAM;IAAEM,SAAS;IAAEC;EAAS,CAAE,GAAG,IAAIb,OAAO,CAACc,6BAA6B,EAAER,KAAK,EAAEI,UAAU,CAAC;EAC9F,IAAIV,OAAO,CAACe,qBAAqB,EAAET,KAAK,CAACU,OAAO,EAAEC,mBAAmB,CAAC;EACtE,IAAIC,QAAQ;EACZ,IAAIN,SAAS,KAAKR,WAAW,CAACe,iBAAiB,EAAE;IAC7CD,QAAQ,GAAG,GAAGV,SAAS,GAAGK,SAAS,EAAE;IACrCV,OAAO,CAACiB,MAAM,CAACC,KAAK,CAAC,WAAWR,SAAS,WAAWK,QAAQ,IAAI,CAAC;EACzE,OACS;IACDA,QAAQ,GAAGL,SAAS;IACpBV,OAAO,CAACiB,MAAM,CAACC,KAAK,CAAC,4BAA4BH,QAAQ,GAAG,CAAC;EACrE;EACI,MAAM,IAAIjB,QAAQ,CAACqB,YAAY,EAAE;IAC7B,GAAGf,QAAQ;IACXgB,cAAc,EAAE,IAAIrB,WAAW,CAACsB,wBAAwB,EAAE1B,OAAO,CAAC2B,aAAa,CAACC,MAAM;EAC9F,CAAK,EAAE;IACCC,MAAM,EAAElB,MAAM;IACdmB,GAAG,EAAEV,QAAQ;IACbW,mBAAmB,EAAEvB,KAAK,CAACU,OAAO,EAAEC;EAC5C,CAAK,CAAC;EACF,OAAOL,SAAS,KAAKR,WAAW,CAACe,iBAAA,GAC3B;IACEW,GAAG,EAAEjB;EACjB,IACU;IACEkB,IAAI,EAAElB;EAClB,CAAS;AACT,CAAC;AACDlB,OAAO,CAACE,MAAM,GAAGA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}