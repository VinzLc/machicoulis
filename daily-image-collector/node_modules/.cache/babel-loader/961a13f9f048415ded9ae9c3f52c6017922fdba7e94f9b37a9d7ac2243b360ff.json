{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.listParts = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst composers_1 = require(\"@aws-amplify/core/internals/aws-client-utils/composers\");\nconst utils_2 = require(\"../utils\");\nconst base_1 = require(\"./base\");\nconst listPartsSerializer = async (input, endpoint) => {\n  const headers = {};\n  const url = new utils_1.AmplifyUrl(endpoint.url.toString());\n  (0, utils_2.validateS3RequiredParameter)(!!input.Key, 'Key');\n  url.pathname = (0, utils_2.serializePathnameObjectKey)(url, input.Key);\n  (0, utils_2.validateS3RequiredParameter)(!!input.UploadId, 'UploadId');\n  url.search = new utils_1.AmplifyUrlSearchParams({\n    'x-id': 'ListParts',\n    uploadId: input.UploadId\n  }).toString();\n  return {\n    method: 'GET',\n    headers,\n    url\n  };\n};\nconst listPartsDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    // error is always set when statusCode >= 300\n    throw (0, utils_2.buildStorageServiceError)(await (0, base_1.parseXmlError)(response));\n  } else {\n    const parsed = await (0, utils_2.parseXmlBody)(response);\n    const contents = (0, utils_2.map)(parsed, {\n      UploadId: 'UploadId',\n      Parts: ['Part', value => (0, utils_2.emptyArrayGuard)(value, utils_2.deserializeCompletedPartList)]\n    });\n    return {\n      $metadata: (0, aws_client_utils_1.parseMetadata)(response),\n      ...contents\n    };\n  }\n};\nexports.listParts = (0, composers_1.composeServiceApi)(utils_2.s3TransferHandler, listPartsSerializer, listPartsDeserializer, {\n  ...base_1.defaultConfig,\n  responseType: 'text'\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","listParts","aws_client_utils_1","require","utils_1","composers_1","utils_2","base_1","listPartsSerializer","input","endpoint","headers","url","AmplifyUrl","toString","validateS3RequiredParameter","Key","pathname","serializePathnameObjectKey","UploadId","search","AmplifyUrlSearchParams","uploadId","method","listPartsDeserializer","response","statusCode","buildStorageServiceError","parseXmlError","parsed","parseXmlBody","contents","map","Parts","emptyArrayGuard","deserializeCompletedPartList","$metadata","parseMetadata","composeServiceApi","s3TransferHandler","defaultConfig","responseType"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\s3data\\listParts.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listParts = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst composers_1 = require(\"@aws-amplify/core/internals/aws-client-utils/composers\");\nconst utils_2 = require(\"../utils\");\nconst base_1 = require(\"./base\");\nconst listPartsSerializer = async (input, endpoint) => {\n    const headers = {};\n    const url = new utils_1.AmplifyUrl(endpoint.url.toString());\n    (0, utils_2.validateS3RequiredParameter)(!!input.Key, 'Key');\n    url.pathname = (0, utils_2.serializePathnameObjectKey)(url, input.Key);\n    (0, utils_2.validateS3RequiredParameter)(!!input.UploadId, 'UploadId');\n    url.search = new utils_1.AmplifyUrlSearchParams({\n        'x-id': 'ListParts',\n        uploadId: input.UploadId,\n    }).toString();\n    return {\n        method: 'GET',\n        headers,\n        url,\n    };\n};\nconst listPartsDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        throw (0, utils_2.buildStorageServiceError)((await (0, base_1.parseXmlError)(response)));\n    }\n    else {\n        const parsed = await (0, utils_2.parseXmlBody)(response);\n        const contents = (0, utils_2.map)(parsed, {\n            UploadId: 'UploadId',\n            Parts: [\n                'Part',\n                value => (0, utils_2.emptyArrayGuard)(value, utils_2.deserializeCompletedPartList),\n            ],\n        });\n        return {\n            $metadata: (0, aws_client_utils_1.parseMetadata)(response),\n            ...contents,\n        };\n    }\n};\nexports.listParts = (0, composers_1.composeServiceApi)(utils_2.s3TransferHandler, listPartsSerializer, listPartsDeserializer, { ...base_1.defaultConfig, responseType: 'text' });\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAG,MAAM;AAC1B,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAClF,MAAMC,OAAO,GAAGD,OAAO,CAAC,mCAAmC,CAAC;AAC5D,MAAME,WAAW,GAAGF,OAAO,CAAC,wDAAwD,CAAC;AACrF,MAAMG,OAAO,GAAGH,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMK,mBAAmB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACnD,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,GAAG,GAAG,IAAIR,OAAO,CAACS,UAAU,CAACH,QAAQ,CAACE,GAAG,CAACE,QAAQ,EAAE,CAAC;EAC3D,IAAIR,OAAO,CAACS,2BAA2B,EAAE,CAAC,CAACN,KAAK,CAACO,GAAG,EAAE,KAAK,CAAC;EAC5DJ,GAAG,CAACK,QAAQ,GAAG,IAAIX,OAAO,CAACY,0BAA0B,EAAEN,GAAG,EAAEH,KAAK,CAACO,GAAG,CAAC;EACtE,IAAIV,OAAO,CAACS,2BAA2B,EAAE,CAAC,CAACN,KAAK,CAACU,QAAQ,EAAE,UAAU,CAAC;EACtEP,GAAG,CAACQ,MAAM,GAAG,IAAIhB,OAAO,CAACiB,sBAAsB,CAAC;IAC5C,MAAM,EAAE,WAAW;IACnBC,QAAQ,EAAEb,KAAK,CAACU;EACxB,CAAK,CAAC,CAACL,QAAQ,EAAE;EACb,OAAO;IACHS,MAAM,EAAE,KAAK;IACbZ,OAAO;IACPC;EACR,CAAK;AACL,CAAC;AACD,MAAMY,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAIA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAAE;IACpC;IACQ,MAAM,IAAIpB,OAAO,CAACqB,wBAAwB,EAAG,MAAM,IAAIpB,MAAM,CAACqB,aAAa,EAAEH,QAAQ,CAAC,CAAE;EAChG,OACS;IACD,MAAMI,MAAM,GAAG,MAAM,IAAIvB,OAAO,CAACwB,YAAY,EAAEL,QAAQ,CAAC;IACxD,MAAMM,QAAQ,GAAG,IAAIzB,OAAO,CAAC0B,GAAG,EAAEH,MAAM,EAAE;MACtCV,QAAQ,EAAE,UAAU;MACpBc,KAAK,EAAE,CACH,MAAM,EACNjC,KAAK,IAAI,IAAIM,OAAO,CAAC4B,eAAe,EAAElC,KAAK,EAAEM,OAAO,CAAC6B,4BAA4B,CAAC;IAElG,CAAS,CAAC;IACF,OAAO;MACHC,SAAS,EAAE,IAAIlC,kBAAkB,CAACmC,aAAa,EAAEZ,QAAQ,CAAC;MAC1D,GAAGM;IACf,CAAS;EACT;AACA,CAAC;AACDhC,OAAO,CAACE,SAAS,GAAG,IAAII,WAAW,CAACiC,iBAAiB,EAAEhC,OAAO,CAACiC,iBAAiB,EAAE/B,mBAAmB,EAAEgB,qBAAqB,EAAE;EAAE,GAAGjB,MAAM,CAACiC,aAAa;EAAEC,YAAY,EAAE;AAAM,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}