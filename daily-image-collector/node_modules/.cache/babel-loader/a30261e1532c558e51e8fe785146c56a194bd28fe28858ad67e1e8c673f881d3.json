{"ast":null,"code":"import React__default from 'react';\nimport { isFunction } from '@aws-amplify/ui';\n\n// async state constants\nconst INITIAL = {\n  hasError: false,\n  isLoading: false,\n  message: undefined\n};\nconst LOADING = {\n  hasError: false,\n  isLoading: true,\n  message: undefined\n};\nconst ERROR = {\n  hasError: true,\n  isLoading: false\n};\n/**\n * @internal may be updated in future versions\n *\n * @description like `useReducer` but make it async\n *\n * @example\n * ```ts\n * import fetchData from './fetchData';\n *\n * type MyState = { data: string[] | undefined }\n * const initialState: MyState = { data: undefined }\n *\n * type MyAction = { type: 'fetch' | 'clear' }\n *\n * const asyncReducer = async (state: MyState, action: MyAction): Promise<MyState> => {\n *   switch(action.type) {\n *     case 'fetch':\n *       const data = await fetchData();\n *       return { data: state.data ? state.data.concat(data) : data }\n *     case 'clear':\n *       return { data: undefined }\n *   }\n * }\n *\n * const FetchDataButton = () => {\n *   const [state, dispatch] = useAsyncReducer(asyncReducer, initialState);\n *\n *   const { value: { data }, isLoading } = state;\n *\n *   return (\n *     <button onClick={() => isLoading ? null : dispatch({ type: 'fetch'})}>\n *       Fetch Data\n *     </button>\n *   )\n * }\n * ```\n */\nfunction useAsyncReducer(reducer, initialValue, options) {\n  const [state, setAsyncState] = React__default.useState(() => ({\n    ...INITIAL,\n    value: initialValue\n  }));\n  const prevValue = React__default.useRef(initialValue);\n  const pendingId = React__default.useRef();\n  const {\n    onSuccess,\n    onError\n  } = options ?? {};\n  const dispatch = React__default.useCallback(input => {\n    const id = Symbol();\n    pendingId.current = id;\n    setAsyncState(({\n      value\n    }) => ({\n      ...LOADING,\n      value\n    }));\n    reducer(prevValue.current, input).then(value => {\n      if (pendingId.current !== id) return;\n      prevValue.current = value;\n      if (isFunction(onSuccess)) onSuccess(value);\n      setAsyncState({\n        ...INITIAL,\n        value\n      });\n    }).catch(error => {\n      if (pendingId.current !== id) return;\n      if (isFunction(onError)) onError(error);\n      const {\n        message\n      } = error;\n      setAsyncState(({\n        value\n      }) => ({\n        ...ERROR,\n        value,\n        message\n      }));\n    });\n  }, [onError, onSuccess, reducer]);\n  return [state, dispatch];\n}\nexport { useAsyncReducer as default };","map":{"version":3,"names":["React__default","isFunction","INITIAL","hasError","isLoading","message","undefined","LOADING","ERROR","useAsyncReducer","reducer","initialValue","options","state","setAsyncState","useState","value","prevValue","useRef","pendingId","onSuccess","onError","dispatch","useCallback","input","id","Symbol","current","then","catch","error","default"],"sources":["C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@aws-amplify/ui-react-core/dist/esm/hooks/useAsyncReducer.mjs"],"sourcesContent":["import React__default from 'react';\nimport { isFunction } from '@aws-amplify/ui';\n\n// async state constants\nconst INITIAL = { hasError: false, isLoading: false, message: undefined };\nconst LOADING = { hasError: false, isLoading: true, message: undefined };\nconst ERROR = { hasError: true, isLoading: false };\n/**\n * @internal may be updated in future versions\n *\n * @description like `useReducer` but make it async\n *\n * @example\n * ```ts\n * import fetchData from './fetchData';\n *\n * type MyState = { data: string[] | undefined }\n * const initialState: MyState = { data: undefined }\n *\n * type MyAction = { type: 'fetch' | 'clear' }\n *\n * const asyncReducer = async (state: MyState, action: MyAction): Promise<MyState> => {\n *   switch(action.type) {\n *     case 'fetch':\n *       const data = await fetchData();\n *       return { data: state.data ? state.data.concat(data) : data }\n *     case 'clear':\n *       return { data: undefined }\n *   }\n * }\n *\n * const FetchDataButton = () => {\n *   const [state, dispatch] = useAsyncReducer(asyncReducer, initialState);\n *\n *   const { value: { data }, isLoading } = state;\n *\n *   return (\n *     <button onClick={() => isLoading ? null : dispatch({ type: 'fetch'})}>\n *       Fetch Data\n *     </button>\n *   )\n * }\n * ```\n */\nfunction useAsyncReducer(reducer, initialValue, options) {\n    const [state, setAsyncState] = React__default.useState(() => ({\n        ...INITIAL,\n        value: initialValue,\n    }));\n    const prevValue = React__default.useRef(initialValue);\n    const pendingId = React__default.useRef();\n    const { onSuccess, onError } = options ?? {};\n    const dispatch = React__default.useCallback((input) => {\n        const id = Symbol();\n        pendingId.current = id;\n        setAsyncState(({ value }) => ({ ...LOADING, value }));\n        reducer(prevValue.current, input)\n            .then((value) => {\n            if (pendingId.current !== id)\n                return;\n            prevValue.current = value;\n            if (isFunction(onSuccess))\n                onSuccess(value);\n            setAsyncState({ ...INITIAL, value });\n        })\n            .catch((error) => {\n            if (pendingId.current !== id)\n                return;\n            if (isFunction(onError))\n                onError(error);\n            const { message } = error;\n            setAsyncState(({ value }) => ({ ...ERROR, value, message }));\n        });\n    }, [onError, onSuccess, reducer]);\n    return [state, dispatch];\n}\n\nexport { useAsyncReducer as default };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C;AACA,MAAMC,OAAO,GAAG;EAAEC,QAAQ,EAAE,KAAK;EAAEC,SAAS,EAAE,KAAK;EAAEC,OAAO,EAAEC;AAAU,CAAC;AACzE,MAAMC,OAAO,GAAG;EAAEJ,QAAQ,EAAE,KAAK;EAAEC,SAAS,EAAE,IAAI;EAAEC,OAAO,EAAEC;AAAU,CAAC;AACxE,MAAME,KAAK,GAAG;EAAEL,QAAQ,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAM,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,eAAeA,CAACC,OAAO,EAAEC,YAAY,EAAEC,OAAO,EAAE;EACrD,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGd,cAAc,CAACe,QAAQ,CAAC,OAAO;IAC1D,GAAGb,OAAO;IACVc,KAAK,EAAEL;EACX,CAAC,CAAC,CAAC;EACH,MAAMM,SAAS,GAAGjB,cAAc,CAACkB,MAAM,CAACP,YAAY,CAAC;EACrD,MAAMQ,SAAS,GAAGnB,cAAc,CAACkB,MAAM,CAAC,CAAC;EACzC,MAAM;IAAEE,SAAS;IAAEC;EAAQ,CAAC,GAAGT,OAAO,IAAI,CAAC,CAAC;EAC5C,MAAMU,QAAQ,GAAGtB,cAAc,CAACuB,WAAW,CAAEC,KAAK,IAAK;IACnD,MAAMC,EAAE,GAAGC,MAAM,CAAC,CAAC;IACnBP,SAAS,CAACQ,OAAO,GAAGF,EAAE;IACtBX,aAAa,CAAC,CAAC;MAAEE;IAAM,CAAC,MAAM;MAAE,GAAGT,OAAO;MAAES;IAAM,CAAC,CAAC,CAAC;IACrDN,OAAO,CAACO,SAAS,CAACU,OAAO,EAAEH,KAAK,CAAC,CAC5BI,IAAI,CAAEZ,KAAK,IAAK;MACjB,IAAIG,SAAS,CAACQ,OAAO,KAAKF,EAAE,EACxB;MACJR,SAAS,CAACU,OAAO,GAAGX,KAAK;MACzB,IAAIf,UAAU,CAACmB,SAAS,CAAC,EACrBA,SAAS,CAACJ,KAAK,CAAC;MACpBF,aAAa,CAAC;QAAE,GAAGZ,OAAO;QAAEc;MAAM,CAAC,CAAC;IACxC,CAAC,CAAC,CACGa,KAAK,CAAEC,KAAK,IAAK;MAClB,IAAIX,SAAS,CAACQ,OAAO,KAAKF,EAAE,EACxB;MACJ,IAAIxB,UAAU,CAACoB,OAAO,CAAC,EACnBA,OAAO,CAACS,KAAK,CAAC;MAClB,MAAM;QAAEzB;MAAQ,CAAC,GAAGyB,KAAK;MACzBhB,aAAa,CAAC,CAAC;QAAEE;MAAM,CAAC,MAAM;QAAE,GAAGR,KAAK;QAAEQ,KAAK;QAAEX;MAAQ,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,EAAE,CAACgB,OAAO,EAAED,SAAS,EAAEV,OAAO,CAAC,CAAC;EACjC,OAAO,CAACG,KAAK,EAAES,QAAQ,CAAC;AAC5B;AAEA,SAASb,eAAe,IAAIsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}