{"ast":null,"code":"import _objectSpread from \"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { fromBase64 } from '@smithy/util-base64';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deserializeContent = content => content.map(block => {\n  if (block.image) {\n    return deserializeImageBlock(block);\n  }\n  if (block.document) {\n    return deserializeDocumentBlock(block);\n  }\n  if (block.toolUse) {\n    return deserializeToolUseBlock(block);\n  }\n  if (block.toolResult) {\n    return deserializeToolResultBlock(block);\n  }\n  return removeNullsFromBlock(block);\n});\nconst deserializeImageBlock = _ref => {\n  let {\n    image\n  } = _ref;\n  return {\n    image: _objectSpread(_objectSpread({}, image), {}, {\n      source: _objectSpread(_objectSpread({}, image.source), {}, {\n        bytes: fromBase64(image.source.bytes)\n      })\n    })\n  };\n};\nconst deserializeDocumentBlock = _ref2 => {\n  let {\n    document\n  } = _ref2;\n  return {\n    document: _objectSpread(_objectSpread({}, document), {}, {\n      source: _objectSpread(_objectSpread({}, document.source), {}, {\n        bytes: fromBase64(document.source.bytes)\n      })\n    })\n  };\n};\nconst deserializeJsonBlock = _ref3 => {\n  let {\n    json\n  } = _ref3;\n  return {\n    json: JSON.parse(json)\n  };\n};\nconst deserializeToolUseBlock = _ref4 => {\n  let {\n    toolUse\n  } = _ref4;\n  return {\n    toolUse: _objectSpread(_objectSpread({}, toolUse), {}, {\n      input: JSON.parse(toolUse.input)\n    })\n  };\n};\nconst deserializeToolResultBlock = _ref5 => {\n  let {\n    toolResult\n  } = _ref5;\n  return {\n    toolResult: {\n      toolUseId: toolResult.toolUseId,\n      content: toolResult.content.map(toolResultBlock => {\n        if (toolResultBlock.image) {\n          return deserializeImageBlock(toolResultBlock);\n        }\n        if (toolResultBlock.json) {\n          return deserializeJsonBlock(toolResultBlock);\n        }\n        return removeNullsFromBlock(toolResultBlock);\n      })\n    }\n  };\n};\nconst removeNullsFromBlock = block => Object.fromEntries(Object.entries(block).filter(_ref6 => {\n  let [_, v] = _ref6;\n  return v !== null;\n}));\nexport { deserializeContent };","map":{"version":3,"names":["deserializeContent","content","map","block","image","deserializeImageBlock","document","deserializeDocumentBlock","toolUse","deserializeToolUseBlock","toolResult","deserializeToolResultBlock","removeNullsFromBlock","_ref","_objectSpread","source","bytes","fromBase64","_ref2","deserializeJsonBlock","_ref3","json","JSON","parse","_ref4","input","_ref5","toolUseId","toolResultBlock","Object","fromEntries","entries","filter","_ref6","_","v"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\data-schema\\src\\runtime\\internals\\ai\\conversationMessageDeserializers.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromBase64 } from '@smithy/util-base64';\nexport const deserializeContent = (content) => content.map((block) => {\n    if (block.image) {\n        return deserializeImageBlock(block);\n    }\n    if (block.document) {\n        return deserializeDocumentBlock(block);\n    }\n    if (block.toolUse) {\n        return deserializeToolUseBlock(block);\n    }\n    if (block.toolResult) {\n        return deserializeToolResultBlock(block);\n    }\n    return removeNullsFromBlock(block);\n});\nconst deserializeImageBlock = ({ image }) => ({\n    image: {\n        ...image,\n        source: {\n            ...image.source,\n            bytes: fromBase64(image.source.bytes),\n        },\n    },\n});\nconst deserializeDocumentBlock = ({ document }) => ({\n    document: {\n        ...document,\n        source: {\n            ...document.source,\n            bytes: fromBase64(document.source.bytes),\n        },\n    },\n});\nconst deserializeJsonBlock = ({ json }) => ({\n    json: JSON.parse(json),\n});\nconst deserializeToolUseBlock = ({ toolUse }) => ({\n    toolUse: {\n        ...toolUse,\n        input: JSON.parse(toolUse.input),\n    },\n});\nconst deserializeToolResultBlock = ({ toolResult, }) => ({\n    toolResult: {\n        toolUseId: toolResult.toolUseId,\n        content: toolResult.content.map((toolResultBlock) => {\n            if (toolResultBlock.image) {\n                return deserializeImageBlock(toolResultBlock);\n            }\n            if (toolResultBlock.json) {\n                return deserializeJsonBlock(toolResultBlock);\n            }\n            return removeNullsFromBlock(toolResultBlock);\n        }),\n    },\n});\nconst removeNullsFromBlock = (block) => Object.fromEntries(Object.entries(block).filter(([_, v]) => v !== null));\n"],"mappings":";;;AAAA;AACA;AAEY,MAACA,kBAAkB,GAAIC,OAAO,IAAKA,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;EAClE,IAAIA,KAAK,CAACC,KAAK,EAAE;IACb,OAAOC,qBAAqB,CAACF,KAAK,CAAC;EAC3C;EACI,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAChB,OAAOC,wBAAwB,CAACJ,KAAK,CAAC;EAC9C;EACI,IAAIA,KAAK,CAACK,OAAO,EAAE;IACf,OAAOC,uBAAuB,CAACN,KAAK,CAAC;EAC7C;EACI,IAAIA,KAAK,CAACO,UAAU,EAAE;IAClB,OAAOC,0BAA0B,CAACR,KAAK,CAAC;EAChD;EACI,OAAOS,oBAAoB,CAACT,KAAK,CAAC;AACtC,CAAC;AACD,MAAME,qBAAqB,GAAGQ,IAAA;EAAA,IAAC;IAAET;EAAK,CAAE,GAAAS,IAAA;EAAA,OAAM;IAC1CT,KAAK,EAAAU,aAAA,CAAAA,aAAA,KACEV,KAAK;MACRW,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCV,KAAK,CAACW,MAAM;QACfC,KAAK,EAAEC,UAAU,CAACb,KAAK,CAACW,MAAM,CAACC,KAAK;MAAC;IACxC;EAET,CAAC;AAAA,CAAC;AACF,MAAMT,wBAAwB,GAAGW,KAAA;EAAA,IAAC;IAAEZ;EAAQ,CAAE,GAAAY,KAAA;EAAA,OAAM;IAChDZ,QAAQ,EAAAQ,aAAA,CAAAA,aAAA,KACDR,QAAQ;MACXS,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACCR,QAAQ,CAACS,MAAM;QAClBC,KAAK,EAAEC,UAAU,CAACX,QAAQ,CAACS,MAAM,CAACC,KAAK;MAAC;IAC3C;EAET,CAAC;AAAA,CAAC;AACF,MAAMG,oBAAoB,GAAGC,KAAA;EAAA,IAAC;IAAEC;EAAI,CAAE,GAAAD,KAAA;EAAA,OAAM;IACxCC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACF,IAAI;EACzB,CAAC;AAAA,CAAC;AACF,MAAMZ,uBAAuB,GAAGe,KAAA;EAAA,IAAC;IAAEhB;EAAO,CAAE,GAAAgB,KAAA;EAAA,OAAM;IAC9ChB,OAAO,EAAAM,aAAA,CAAAA,aAAA,KACAN,OAAO;MACViB,KAAK,EAAEH,IAAI,CAACC,KAAK,CAACf,OAAO,CAACiB,KAAK;IAAC;EAExC,CAAC;AAAA,CAAC;AACF,MAAMd,0BAA0B,GAAGe,KAAA;EAAA,IAAC;IAAEhB;EAAU,CAAG,GAAAgB,KAAA;EAAA,OAAM;IACrDhB,UAAU,EAAE;MACRiB,SAAS,EAAEjB,UAAU,CAACiB,SAAS;MAC/B1B,OAAO,EAAES,UAAU,CAACT,OAAO,CAACC,GAAG,CAAE0B,eAAe,IAAK;QACjD,IAAIA,eAAe,CAACxB,KAAK,EAAE;UACvB,OAAOC,qBAAqB,CAACuB,eAAe,CAAC;QAC7D;QACY,IAAIA,eAAe,CAACP,IAAI,EAAE;UACtB,OAAOF,oBAAoB,CAACS,eAAe,CAAC;QAC5D;QACY,OAAOhB,oBAAoB,CAACgB,eAAe,CAAC;MACxD,CAAS;IACT;EACA,CAAC;AAAA,CAAC;AACF,MAAMhB,oBAAoB,GAAIT,KAAK,IAAK0B,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAAC5B,KAAK,CAAC,CAAC6B,MAAM,CAACC,KAAA;EAAA,IAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAAF,KAAA;EAAA,OAAKE,CAAC,KAAK,IAAI;AAAA,EAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}