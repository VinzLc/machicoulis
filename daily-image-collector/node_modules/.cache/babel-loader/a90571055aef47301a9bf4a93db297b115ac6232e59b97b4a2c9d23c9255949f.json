{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCanonicalHeaders = void 0;\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = headers => Object.entries(headers).map(([key, value]) => ({\n  key: key.toLowerCase(),\n  value: value?.trim().replace(/\\s+/g, ' ') ?? ''\n})).sort((a, b) => a.key < b.key ? -1 : 1).map(entry => `${entry.key}:${entry.value}\\n`).join('');\nexports.getCanonicalHeaders = getCanonicalHeaders;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCanonicalHeaders","headers","entries","map","key","toLowerCase","trim","replace","sort","a","b","entry","join"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\signer\\signatureV4\\utils\\getCanonicalHeaders.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\nexports.getCanonicalHeaders = getCanonicalHeaders;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,MAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,mBAAmB,GAAIC,OAAO,IAAKL,MAAM,CAACM,OAAO,CAACD,OAAO,EAC1DE,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEL,KAAK,CAAC,MAAM;EACxBK,GAAG,EAAEA,GAAG,CAACC,WAAW,EAAE;EACtBN,KAAK,EAAEA,KAAK,EAAEO,IAAI,EAAE,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI;AACjD,CAAC,CAAC,EACGC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACL,GAAG,GAAGM,CAAC,CAACN,GAAG,GAAG,EAAE,GAAG,CAAE,EACvCD,GAAG,CAACQ,KAAK,IAAI,GAAGA,KAAK,CAACP,GAAG,IAAIO,KAAK,CAACZ,KAAK,IAAI,EAC5Ca,IAAI,CAAC,EAAE,CAAC;AACbd,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}