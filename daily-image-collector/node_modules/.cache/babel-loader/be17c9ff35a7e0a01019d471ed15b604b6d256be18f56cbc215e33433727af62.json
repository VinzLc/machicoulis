{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEqual = exports.isObject = exports.bothNilOrEqual = exports.isNil = void 0;\nconst isNil = value => {\n  return value === undefined || value === null;\n};\nexports.isNil = isNil;\nconst bothNilOrEqual = (original, output) => {\n  return (0, exports.isNil)(original) && (0, exports.isNil)(output) || original === output;\n};\nexports.bothNilOrEqual = bothNilOrEqual;\n/**\n * This function is used to determine if a value is an object.\n * It excludes arrays and null values.\n *\n * @param value\n * @returns\n */\nconst isObject = value => {\n  return value != null && typeof value === 'object' && !Array.isArray(value);\n};\nexports.isObject = isObject;\n/**\n * This function is used to compare two objects and determine if they are equal.\n * It handles nested objects and arrays as well.\n * Array order is not taken into account.\n *\n * @param object\n * @param other\n * @returns\n */\nconst isEqual = (object, other) => {\n  if (Array.isArray(object) && !Array.isArray(other)) {\n    return false;\n  }\n  if (!Array.isArray(object) && Array.isArray(other)) {\n    return false;\n  }\n  if (Array.isArray(object) && Array.isArray(other)) {\n    return object.length === other.length && object.every((val, ix) => (0, exports.isEqual)(val, other[ix]));\n  }\n  if (!(0, exports.isObject)(object) || !(0, exports.isObject)(other)) {\n    return object === other;\n  }\n  const objectKeys = Object.keys(object);\n  const otherKeys = Object.keys(other);\n  if (objectKeys.length !== otherKeys.length) {\n    return false;\n  }\n  return objectKeys.every(key => {\n    return otherKeys.includes(key) && (0, exports.isEqual)(object[key], other[key]);\n  });\n};\nexports.isEqual = isEqual;","map":{"version":3,"names":["Object","defineProperty","exports","value","isEqual","isObject","bothNilOrEqual","isNil","undefined","original","output","Array","isArray","object","other","length","every","val","ix","objectKeys","keys","otherKeys","key","includes"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\utils\\integrityHelpers.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEqual = exports.isObject = exports.bothNilOrEqual = exports.isNil = void 0;\nconst isNil = (value) => {\n    return value === undefined || value === null;\n};\nexports.isNil = isNil;\nconst bothNilOrEqual = (original, output) => {\n    return ((0, exports.isNil)(original) && (0, exports.isNil)(output)) || original === output;\n};\nexports.bothNilOrEqual = bothNilOrEqual;\n/**\n * This function is used to determine if a value is an object.\n * It excludes arrays and null values.\n *\n * @param value\n * @returns\n */\nconst isObject = (value) => {\n    return value != null && typeof value === 'object' && !Array.isArray(value);\n};\nexports.isObject = isObject;\n/**\n * This function is used to compare two objects and determine if they are equal.\n * It handles nested objects and arrays as well.\n * Array order is not taken into account.\n *\n * @param object\n * @param other\n * @returns\n */\nconst isEqual = (object, other) => {\n    if (Array.isArray(object) && !Array.isArray(other)) {\n        return false;\n    }\n    if (!Array.isArray(object) && Array.isArray(other)) {\n        return false;\n    }\n    if (Array.isArray(object) && Array.isArray(other)) {\n        return (object.length === other.length &&\n            object.every((val, ix) => (0, exports.isEqual)(val, other[ix])));\n    }\n    if (!(0, exports.isObject)(object) || !(0, exports.isObject)(other)) {\n        return object === other;\n    }\n    const objectKeys = Object.keys(object);\n    const otherKeys = Object.keys(other);\n    if (objectKeys.length !== otherKeys.length) {\n        return false;\n    }\n    return objectKeys.every(key => {\n        return (otherKeys.includes(key) &&\n            (0, exports.isEqual)(object[key], other[key]));\n    });\n};\nexports.isEqual = isEqual;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACG,QAAQ,GAAGH,OAAO,CAACI,cAAc,GAAGJ,OAAO,CAACK,KAAK,GAAG,MAAM;AACpF,MAAMA,KAAK,GAAIJ,KAAK,IAAK;EACrB,OAAOA,KAAK,KAAKK,SAAS,IAAIL,KAAK,KAAK,IAAI;AAChD,CAAC;AACDD,OAAO,CAACK,KAAK,GAAGA,KAAK;AACrB,MAAMD,cAAc,GAAGA,CAACG,QAAQ,EAAEC,MAAM,KAAK;EACzC,OAAQ,IAAIR,OAAO,CAACK,KAAK,EAAEE,QAAQ,CAAC,IAAI,IAAIP,OAAO,CAACK,KAAK,EAAEG,MAAM,CAAC,IAAKD,QAAQ,KAAKC,MAAM;AAC9F,CAAC;AACDR,OAAO,CAACI,cAAc,GAAGA,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,QAAQ,GAAIF,KAAK,IAAK;EACxB,OAAOA,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACQ,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC;AAC9E,CAAC;AACDD,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMD,OAAO,GAAGA,CAACS,MAAM,EAAEC,KAAK,KAAK;EAC/B,IAAIH,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,IAAI,CAACF,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC,EAAE;IAChD,OAAO,KAAK;EACpB;EACI,IAAI,CAACH,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,IAAIF,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC,EAAE;IAChD,OAAO,KAAK;EACpB;EACI,IAAIH,KAAK,CAACC,OAAO,CAACC,MAAM,CAAC,IAAIF,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC,EAAE;IAC/C,OAAQD,MAAM,CAACE,MAAM,KAAKD,KAAK,CAACC,MAAM,IAClCF,MAAM,CAACG,KAAK,CAAC,CAACC,GAAG,EAAEC,EAAE,KAAK,IAAIhB,OAAO,CAACE,OAAO,EAAEa,GAAG,EAAEH,KAAK,CAACI,EAAE,CAAC,CAAC,CAAC;EAC3E;EACI,IAAI,CAAC,IAAIhB,OAAO,CAACG,QAAQ,EAAEQ,MAAM,CAAC,IAAI,CAAC,IAAIX,OAAO,CAACG,QAAQ,EAAES,KAAK,CAAC,EAAE;IACjE,OAAOD,MAAM,KAAKC,KAAK;EAC/B;EACI,MAAMK,UAAU,GAAGnB,MAAM,CAACoB,IAAI,CAACP,MAAM,CAAC;EACtC,MAAMQ,SAAS,GAAGrB,MAAM,CAACoB,IAAI,CAACN,KAAK,CAAC;EACpC,IAAIK,UAAU,CAACJ,MAAM,KAAKM,SAAS,CAACN,MAAM,EAAE;IACxC,OAAO,KAAK;EACpB;EACI,OAAOI,UAAU,CAACH,KAAK,CAACM,GAAG,IAAI;IAC3B,OAAQD,SAAS,CAACE,QAAQ,CAACD,GAAG,CAAC,IAC3B,IAAIpB,OAAO,CAACE,OAAO,EAAES,MAAM,CAACS,GAAG,CAAC,EAAER,KAAK,CAACQ,GAAG,CAAC,CAAC;EACzD,CAAK,CAAC;AACN,CAAC;AACDpB,OAAO,CAACE,OAAO,GAAGA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}