{"ast":null,"code":"import _objectSpread from\"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/hooks/useGameLogic.js\nimport{useState,useEffect,useCallback}from'react';import imageData from'../imageDatabase.json';const imageDatabase=imageData.images;export const useGameLogic=()=>{const[user,setUser]=useState(null);const[currentView,setCurrentView]=useState('home');const[userCollection,setUserCollection]=useState([]);const[todaysClaim,setTodaysClaim]=useState(false);const[showNewImage,setShowNewImage]=useState(false);const[todaysImage,setTodaysImage]=useState(null);const[loading,setLoading]=useState(false);const[selectedImage,setSelectedImage]=useState(null);const[collectionView,setCollectionView]=useState('obtained');const[shakeAnimation,setShakeAnimation]=useState(true);const[isFullscreen,setIsFullscreen]=useState(false);const loadUserData=useCallback(()=>{if(user){const collection=JSON.parse(localStorage.getItem(\"collection_\".concat(user.username))||'[]');setUserCollection(collection);}},[user]);useEffect(()=>{if(user){loadUserData();if(user.username==='admin'){setTodaysClaim(false);}else{const today=new Date().toDateString();const lastClaim=localStorage.getItem(\"lastClaim_\".concat(user.username));setTodaysClaim(lastClaim===today);}}},[user,loadUserData]);const getStreakCount=useCallback(()=>{if(!user)return 0;return parseInt(localStorage.getItem(\"streak_\".concat(user.username))||'0');},[user]);const updateStreak=useCallback(()=>{if(!user)return;const today=new Date().toDateString();const lastClaim=localStorage.getItem(\"lastClaim_\".concat(user.username));const yesterday=new Date(Date.now()-86400000).toDateString();let newStreak=lastClaim===yesterday?getStreakCount()+1:1;localStorage.setItem(\"streak_\".concat(user.username),newStreak.toString());},[user,getStreakCount]);const login=(username,email)=>{const userData={username,email,joinDate:new Date().toISOString()};setUser(userData);setCurrentView('home');};const logout=()=>{setUser(null);setCurrentView('home');setUserCollection([]);setTodaysClaim(false);};const drawDailyImage=useCallback(()=>{if(todaysClaim||loading)return;setLoading(true);setTimeout(()=>{try{if(!imageDatabase||imageDatabase.length===0){throw new Error('No images available in database');}const weights={Common:50,Rare:30,Epic:15,Legendary:5};const totalWeight=Object.values(weights).reduce((a,b)=>a+b,0);const random=Math.random()*totalWeight;let currentWeight=0;let selectedRarity='Common';for(const[rarity,weight]of Object.entries(weights)){currentWeight+=weight;if(random<=currentWeight){selectedRarity=rarity;break;}}let availableImages=imageDatabase.filter(img=>img.rarity===selectedRarity);if(availableImages.length===0){availableImages=imageDatabase.filter(img=>img.rarity==='Common');if(availableImages.length===0)throw new Error('No images available');}const drawnImage=availableImages[Math.floor(Math.random()*availableImages.length)];const newCollection=[...userCollection,_objectSpread(_objectSpread({},drawnImage),{},{dateObtained:new Date().toISOString(),id:\"\".concat(drawnImage.id,\"_\").concat(Date.now()),imageUrl:drawnImage.url,imageName:drawnImage.name})];setUserCollection(newCollection);localStorage.setItem(\"collection_\".concat(user.username),JSON.stringify(newCollection));if(user.username!=='admin'){updateStreak();const today=new Date().toDateString();localStorage.setItem(\"lastClaim_\".concat(user.username),today);setTodaysClaim(true);}setTodaysImage(drawnImage);setShakeAnimation(true);setShowNewImage(true);setTimeout(()=>setShakeAnimation(false),5000);}catch(error){console.error('Error drawing daily image:',error);alert(\"Error: \".concat(error.message));}finally{setLoading(false);}},1500);},[todaysClaim,loading,userCollection,user,updateStreak]);return{user,currentView,setCurrentView,userCollection,todaysClaim,showNewImage,setShowNewImage,todaysImage,loading,selectedImage,setSelectedImage,collectionView,setCollectionView,shakeAnimation,setShakeAnimation,isFullscreen,setIsFullscreen,imageDatabase,login,logout,drawDailyImage,getStreakCount};};","map":{"version":3,"names":["useState","useEffect","useCallback","imageData","imageDatabase","images","useGameLogic","user","setUser","currentView","setCurrentView","userCollection","setUserCollection","todaysClaim","setTodaysClaim","showNewImage","setShowNewImage","todaysImage","setTodaysImage","loading","setLoading","selectedImage","setSelectedImage","collectionView","setCollectionView","shakeAnimation","setShakeAnimation","isFullscreen","setIsFullscreen","loadUserData","collection","JSON","parse","localStorage","getItem","concat","username","today","Date","toDateString","lastClaim","getStreakCount","parseInt","updateStreak","yesterday","now","newStreak","setItem","toString","login","email","userData","joinDate","toISOString","logout","drawDailyImage","setTimeout","length","Error","weights","Common","Rare","Epic","Legendary","totalWeight","Object","values","reduce","a","b","random","Math","currentWeight","selectedRarity","rarity","weight","entries","availableImages","filter","img","drawnImage","floor","newCollection","_objectSpread","dateObtained","id","imageUrl","url","imageName","name","stringify","error","console","alert","message"],"sources":["C:/Users/vinzl/workspace/machicoulis/daily-image-collector/src/hooks/useGameLogic.js"],"sourcesContent":["// src/hooks/useGameLogic.js\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport imageData from '../imageDatabase.json';\r\n\r\nconst imageDatabase = imageData.images;\r\n\r\nexport const useGameLogic = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [currentView, setCurrentView] = useState('home');\r\n  const [userCollection, setUserCollection] = useState([]);\r\n  const [todaysClaim, setTodaysClaim] = useState(false);\r\n  const [showNewImage, setShowNewImage] = useState(false);\r\n  const [todaysImage, setTodaysImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [collectionView, setCollectionView] = useState('obtained');\r\n  const [shakeAnimation, setShakeAnimation] = useState(true);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n  const loadUserData = useCallback(() => {\r\n    if (user) {\r\n      const collection = JSON.parse(localStorage.getItem(`collection_${user.username}`) || '[]');\r\n      setUserCollection(collection);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadUserData();\r\n      if (user.username === 'admin') {\r\n        setTodaysClaim(false);\r\n      } else {\r\n        const today = new Date().toDateString();\r\n        const lastClaim = localStorage.getItem(`lastClaim_${user.username}`);\r\n        setTodaysClaim(lastClaim === today);\r\n      }\r\n    }\r\n  }, [user, loadUserData]);\r\n\r\n  const getStreakCount = useCallback(() => {\r\n    if (!user) return 0;\r\n    return parseInt(localStorage.getItem(`streak_${user.username}`) || '0');\r\n  }, [user]);\r\n\r\n  const updateStreak = useCallback(() => {\r\n    if (!user) return;\r\n    const today = new Date().toDateString();\r\n    const lastClaim = localStorage.getItem(`lastClaim_${user.username}`);\r\n    const yesterday = new Date(Date.now() - 86400000).toDateString();\r\n    \r\n    let newStreak = (lastClaim === yesterday) ? getStreakCount() + 1 : 1;\r\n    localStorage.setItem(`streak_${user.username}`, newStreak.toString());\r\n  }, [user, getStreakCount]);\r\n\r\n  const login = (username, email) => {\r\n    const userData = { username, email, joinDate: new Date().toISOString() };\r\n    setUser(userData);\r\n    setCurrentView('home');\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setCurrentView('home');\r\n    setUserCollection([]);\r\n    setTodaysClaim(false);\r\n  };\r\n\r\n  const drawDailyImage = useCallback(() => {\r\n    if (todaysClaim || loading) return;\r\n    setLoading(true);\r\n    \r\n    setTimeout(() => {\r\n      try {\r\n        if (!imageDatabase || imageDatabase.length === 0) {\r\n          throw new Error('No images available in database');\r\n        }\r\n        \r\n        const weights = { Common: 50, Rare: 30, Epic: 15, Legendary: 5 };\r\n        const totalWeight = Object.values(weights).reduce((a, b) => a + b, 0);\r\n        const random = Math.random() * totalWeight;\r\n        \r\n        let currentWeight = 0;\r\n        let selectedRarity = 'Common';\r\n        for (const [rarity, weight] of Object.entries(weights)) {\r\n          currentWeight += weight;\r\n          if (random <= currentWeight) {\r\n            selectedRarity = rarity;\r\n            break;\r\n          }\r\n        }\r\n\r\n        let availableImages = imageDatabase.filter(img => img.rarity === selectedRarity);\r\n        if (availableImages.length === 0) {\r\n            availableImages = imageDatabase.filter(img => img.rarity === 'Common');\r\n            if(availableImages.length === 0) throw new Error('No images available');\r\n        }\r\n\r\n        const drawnImage = availableImages[Math.floor(Math.random() * availableImages.length)];\r\n        \r\n        const newCollection = [...userCollection, { \r\n          ...drawnImage, \r\n          dateObtained: new Date().toISOString(),\r\n          id: `${drawnImage.id}_${Date.now()}`,\r\n          imageUrl: drawnImage.url,\r\n          imageName: drawnImage.name\r\n        }];\r\n        \r\n        setUserCollection(newCollection);\r\n        localStorage.setItem(`collection_${user.username}`, JSON.stringify(newCollection));\r\n        \r\n        if (user.username !== 'admin') {\r\n          updateStreak();\r\n          const today = new Date().toDateString();\r\n          localStorage.setItem(`lastClaim_${user.username}`, today);\r\n          setTodaysClaim(true);\r\n        }\r\n        \r\n        setTodaysImage(drawnImage);\r\n        setShakeAnimation(true);\r\n        setShowNewImage(true);\r\n        \r\n        setTimeout(() => setShakeAnimation(false), 5000);\r\n      } catch (error) {\r\n        console.error('Error drawing daily image:', error);\r\n        alert(`Error: ${error.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }, 1500);\r\n  }, [todaysClaim, loading, userCollection, user, updateStreak]);\r\n\r\n  return {\r\n    user,\r\n    currentView,\r\n    setCurrentView,\r\n    userCollection,\r\n    todaysClaim,\r\n    showNewImage,\r\n    setShowNewImage,\r\n    todaysImage,\r\n    loading,\r\n    selectedImage,\r\n    setSelectedImage,\r\n    collectionView,\r\n    setCollectionView,\r\n    shakeAnimation,\r\n    setShakeAnimation,\r\n    isFullscreen,\r\n    setIsFullscreen,\r\n    imageDatabase,\r\n    login,\r\n    logout,\r\n    drawDailyImage,\r\n    getStreakCount,\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}