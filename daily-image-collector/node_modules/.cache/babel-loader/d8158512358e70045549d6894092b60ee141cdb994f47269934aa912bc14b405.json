{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StorageCache = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst KeyValueStorage_1 = require(\"../storage/KeyValueStorage\");\nconst utils_1 = require(\"../storage/utils\");\nconst constants_1 = require(\"./constants\");\nconst StorageCacheCommon_1 = require(\"./StorageCacheCommon\");\nconst utils_2 = require(\"./utils\");\nconst logger = new Logger_1.ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nclass StorageCache extends StorageCacheCommon_1.StorageCacheCommon {\n  /**\n   * initialize the cache\n   * @param config - the configuration of the cache\n   */\n  constructor(config) {\n    const storage = (0, utils_1.getLocalStorageWithFallback)();\n    super({\n      config,\n      keyValueStorage: new KeyValueStorage_1.KeyValueStorage(storage)\n    });\n    this.storage = storage;\n    this.getItem = this.getItem.bind(this);\n    this.setItem = this.setItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n  async getAllCacheKeys(options) {\n    const {\n      omitSizeKey\n    } = options ?? {};\n    const keys = [];\n    for (let i = 0; i < this.storage.length; i++) {\n      const key = this.storage.key(i);\n      if (omitSizeKey && key === (0, utils_2.getCurrentSizeKey)(this.config.keyPrefix)) {\n        continue;\n      }\n      if (key?.startsWith(this.config.keyPrefix)) {\n        keys.push(key.substring(this.config.keyPrefix.length));\n      }\n    }\n    return keys;\n  }\n  /**\n   * Return a new instance of cache with customized configuration.\n   * @param {Object} config - the customized configuration\n   * @return {Object} - the new instance of Cache\n   */\n  createInstance(config) {\n    if (!config.keyPrefix || config.keyPrefix === constants_1.defaultConfig.keyPrefix) {\n      logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n      config.keyPrefix = utils_2.getCurrentTime.toString();\n    }\n    return new StorageCache(config);\n  }\n}\nexports.StorageCache = StorageCache;","map":{"version":3,"names":["Object","defineProperty","exports","value","StorageCache","Logger_1","require","KeyValueStorage_1","utils_1","constants_1","StorageCacheCommon_1","utils_2","logger","ConsoleLogger","StorageCacheCommon","constructor","config","storage","getLocalStorageWithFallback","keyValueStorage","KeyValueStorage","getItem","bind","setItem","removeItem","getAllCacheKeys","options","omitSizeKey","keys","i","length","key","getCurrentSizeKey","keyPrefix","startsWith","push","substring","createInstance","defaultConfig","error","getCurrentTime","toString"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\Cache\\StorageCache.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageCache = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst KeyValueStorage_1 = require(\"../storage/KeyValueStorage\");\nconst utils_1 = require(\"../storage/utils\");\nconst constants_1 = require(\"./constants\");\nconst StorageCacheCommon_1 = require(\"./StorageCacheCommon\");\nconst utils_2 = require(\"./utils\");\nconst logger = new Logger_1.ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nclass StorageCache extends StorageCacheCommon_1.StorageCacheCommon {\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    constructor(config) {\n        const storage = (0, utils_1.getLocalStorageWithFallback)();\n        super({ config, keyValueStorage: new KeyValueStorage_1.KeyValueStorage(storage) });\n        this.storage = storage;\n        this.getItem = this.getItem.bind(this);\n        this.setItem = this.setItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n    async getAllCacheKeys(options) {\n        const { omitSizeKey } = options ?? {};\n        const keys = [];\n        for (let i = 0; i < this.storage.length; i++) {\n            const key = this.storage.key(i);\n            if (omitSizeKey && key === (0, utils_2.getCurrentSizeKey)(this.config.keyPrefix)) {\n                continue;\n            }\n            if (key?.startsWith(this.config.keyPrefix)) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    }\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param {Object} config - the customized configuration\n     * @return {Object} - the new instance of Cache\n     */\n    createInstance(config) {\n        if (!config.keyPrefix || config.keyPrefix === constants_1.defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = utils_2.getCurrentTime.toString();\n        }\n        return new StorageCache(config);\n    }\n}\nexports.StorageCache = StorageCache;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,MAAM;AAC7B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAC/D,MAAME,OAAO,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMG,WAAW,GAAGH,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMI,oBAAoB,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAC5D,MAAMK,OAAO,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMM,MAAM,GAAG,IAAIP,QAAQ,CAACQ,aAAa,CAAC,cAAc,CAAC;AACzD;AACA;AACA;AACA,MAAMT,YAAY,SAASM,oBAAoB,CAACI,kBAAkB,CAAC;EACnE;AACA;AACA;AACA;EACIC,WAAWA,CAACC,MAAM,EAAE;IAChB,MAAMC,OAAO,GAAG,IAAIT,OAAO,CAACU,2BAA2B,GAAG;IAC1D,KAAK,CAAC;MAAEF,MAAM;MAAEG,eAAe,EAAE,IAAIZ,iBAAiB,CAACa,eAAe,CAACH,OAAO;IAAC,CAAE,CAAC;IAClF,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACI,OAAO,GAAG,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACD,IAAI,CAAC,IAAI,CAAC;IACtC,IAAI,CAACE,UAAU,GAAG,IAAI,CAACA,UAAU,CAACF,IAAI,CAAC,IAAI,CAAC;EACpD;EACI,MAAMG,eAAeA,CAACC,OAAO,EAAE;IAC3B,MAAM;MAAEC;IAAW,CAAE,GAAGD,OAAO,IAAI,EAAE;IACrC,MAAME,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACZ,OAAO,CAACa,MAAM,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,GAAG,GAAG,IAAI,CAACd,OAAO,CAACc,GAAG,CAACF,CAAC,CAAC;MAC/B,IAAIF,WAAW,IAAII,GAAG,KAAK,IAAIpB,OAAO,CAACqB,iBAAiB,EAAE,IAAI,CAAChB,MAAM,CAACiB,SAAS,CAAC,EAAE;QAC9E;MAChB;MACY,IAAIF,GAAG,EAAEG,UAAU,CAAC,IAAI,CAAClB,MAAM,CAACiB,SAAS,CAAC,EAAE;QACxCL,IAAI,CAACO,IAAI,CAACJ,GAAG,CAACK,SAAS,CAAC,IAAI,CAACpB,MAAM,CAACiB,SAAS,CAACH,MAAM,CAAC,CAAC;MACtE;IACA;IACQ,OAAOF,IAAI;EACnB;EACA;AACA;AACA;AACA;AACA;EACIS,cAAcA,CAACrB,MAAM,EAAE;IACnB,IAAI,CAACA,MAAM,CAACiB,SAAS,IAAIjB,MAAM,CAACiB,SAAS,KAAKxB,WAAW,CAAC6B,aAAa,CAACL,SAAS,EAAE;MAC/ErB,MAAM,CAAC2B,KAAK,CAAC,qDAAqD,CAAC;MACnEvB,MAAM,CAACiB,SAAS,GAAGtB,OAAO,CAAC6B,cAAc,CAACC,QAAQ,EAAE;IAChE;IACQ,OAAO,IAAIrC,YAAY,CAACY,MAAM,CAAC;EACvC;AACA;AACAd,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}