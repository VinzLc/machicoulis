{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDataChunker = void 0;\nconst validation_1 = require(\"../../../../../../errors/types/validation\");\nconst StorageError_1 = require(\"../../../../../../errors/StorageError\");\nconst calculatePartSize_1 = require(\"./calculatePartSize\");\nconst getDataChunker = (data, totalSize) => {\n  const partSize = (0, calculatePartSize_1.calculatePartSize)(totalSize);\n  if (data instanceof Blob) {\n    return helper(data, 0, data.size, partSize);\n  } else if (ArrayBuffer.isView(data)) {\n    return helper(data.buffer, data.byteOffset, data.byteLength, partSize);\n  } else if (data instanceof ArrayBuffer) {\n    return helper(data, 0, data.byteLength, partSize);\n  } else if (typeof data === 'string') {\n    const blob = new Blob([data]);\n    return (0, exports.getDataChunker)(blob, blob.size);\n  } else {\n    throw new StorageError_1.StorageError({\n      name: validation_1.StorageValidationErrorCode.InvalidUploadSource,\n      ...validation_1.validationErrorMap[validation_1.StorageValidationErrorCode.InvalidUploadSource]\n    });\n  }\n};\nexports.getDataChunker = getDataChunker;\nconst helper = function* (buffer, byteOffset, byteLength, partSize) {\n  let partNumber = 1;\n  let startByte = byteOffset;\n  let endByte = byteOffset + Math.min(partSize, byteLength);\n  while (endByte < byteLength + byteOffset) {\n    yield {\n      partNumber,\n      data: buffer.slice(startByte, endByte),\n      size: partSize\n    };\n    partNumber += 1;\n    startByte = endByte;\n    endByte = startByte + partSize;\n  }\n  yield {\n    partNumber,\n    data: buffer.slice(startByte, byteLength + byteOffset),\n    size: byteLength + byteOffset - startByte\n  };\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","getDataChunker","validation_1","require","StorageError_1","calculatePartSize_1","data","totalSize","partSize","calculatePartSize","Blob","helper","size","ArrayBuffer","isView","buffer","byteOffset","byteLength","blob","StorageError","name","StorageValidationErrorCode","InvalidUploadSource","validationErrorMap","partNumber","startByte","endByte","Math","min","slice"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\internal\\uploadData\\multipart\\getDataChunker.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDataChunker = void 0;\nconst validation_1 = require(\"../../../../../../errors/types/validation\");\nconst StorageError_1 = require(\"../../../../../../errors/StorageError\");\nconst calculatePartSize_1 = require(\"./calculatePartSize\");\nconst getDataChunker = (data, totalSize) => {\n    const partSize = (0, calculatePartSize_1.calculatePartSize)(totalSize);\n    if (data instanceof Blob) {\n        return helper(data, 0, data.size, partSize);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        return helper(data.buffer, data.byteOffset, data.byteLength, partSize);\n    }\n    else if (data instanceof ArrayBuffer) {\n        return helper(data, 0, data.byteLength, partSize);\n    }\n    else if (typeof data === 'string') {\n        const blob = new Blob([data]);\n        return (0, exports.getDataChunker)(blob, blob.size);\n    }\n    else {\n        throw new StorageError_1.StorageError({\n            name: validation_1.StorageValidationErrorCode.InvalidUploadSource,\n            ...validation_1.validationErrorMap[validation_1.StorageValidationErrorCode.InvalidUploadSource],\n        });\n    }\n};\nexports.getDataChunker = getDataChunker;\nconst helper = function* (buffer, byteOffset, byteLength, partSize) {\n    let partNumber = 1;\n    let startByte = byteOffset;\n    let endByte = byteOffset + Math.min(partSize, byteLength);\n    while (endByte < byteLength + byteOffset) {\n        yield {\n            partNumber,\n            data: buffer.slice(startByte, endByte),\n            size: partSize,\n        };\n        partNumber += 1;\n        startByte = endByte;\n        endByte = startByte + partSize;\n    }\n    yield {\n        partNumber,\n        data: buffer.slice(startByte, byteLength + byteOffset),\n        size: byteLength + byteOffset - startByte,\n    };\n};\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAG,MAAM;AAC/B,MAAMC,YAAY,GAAGC,OAAO,CAAC,2CAA2C,CAAC;AACzE,MAAMC,cAAc,GAAGD,OAAO,CAAC,uCAAuC,CAAC;AACvE,MAAME,mBAAmB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAC1D,MAAMF,cAAc,GAAGA,CAACK,IAAI,EAAEC,SAAS,KAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIH,mBAAmB,CAACI,iBAAiB,EAAEF,SAAS,CAAC;EACtE,IAAID,IAAI,YAAYI,IAAI,EAAE;IACtB,OAAOC,MAAM,CAACL,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACM,IAAI,EAAEJ,QAAQ,CAAC;EACnD,OACS,IAAIK,WAAW,CAACC,MAAM,CAACR,IAAI,CAAC,EAAE;IAC/B,OAAOK,MAAM,CAACL,IAAI,CAACS,MAAM,EAAET,IAAI,CAACU,UAAU,EAAEV,IAAI,CAACW,UAAU,EAAET,QAAQ,CAAC;EAC9E,OACS,IAAIF,IAAI,YAAYO,WAAW,EAAE;IAClC,OAAOF,MAAM,CAACL,IAAI,EAAE,CAAC,EAAEA,IAAI,CAACW,UAAU,EAAET,QAAQ,CAAC;EACzD,OACS,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE;IAC/B,MAAMY,IAAI,GAAG,IAAIR,IAAI,CAAC,CAACJ,IAAI,CAAC,CAAC;IAC7B,OAAO,IAAIP,OAAO,CAACE,cAAc,EAAEiB,IAAI,EAAEA,IAAI,CAACN,IAAI,CAAC;EAC3D,OACS;IACD,MAAM,IAAIR,cAAc,CAACe,YAAY,CAAC;MAClCC,IAAI,EAAElB,YAAY,CAACmB,0BAA0B,CAACC,mBAAmB;MACjE,GAAGpB,YAAY,CAACqB,kBAAkB,CAACrB,YAAY,CAACmB,0BAA0B,CAACC,mBAAmB;IAC1G,CAAS,CAAC;EACV;AACA,CAAC;AACDvB,OAAO,CAACE,cAAc,GAAGA,cAAc;AACvC,MAAMU,MAAM,GAAG,UAAAA,CAAWI,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAET,QAAQ,EAAE;EAChE,IAAIgB,UAAU,GAAG,CAAC;EAClB,IAAIC,SAAS,GAAGT,UAAU;EAC1B,IAAIU,OAAO,GAAGV,UAAU,GAAGW,IAAI,CAACC,GAAG,CAACpB,QAAQ,EAAES,UAAU,CAAC;EACzD,OAAOS,OAAO,GAAGT,UAAU,GAAGD,UAAU,EAAE;IACtC,MAAM;MACFQ,UAAU;MACVlB,IAAI,EAAES,MAAM,CAACc,KAAK,CAACJ,SAAS,EAAEC,OAAO,CAAC;MACtCd,IAAI,EAAEJ;IAClB,CAAS;IACDgB,UAAU,IAAI,CAAC;IACfC,SAAS,GAAGC,OAAO;IACnBA,OAAO,GAAGD,SAAS,GAAGjB,QAAQ;EACtC;EACI,MAAM;IACFgB,UAAU;IACVlB,IAAI,EAAES,MAAM,CAACc,KAAK,CAACJ,SAAS,EAAER,UAAU,GAAGD,UAAU,CAAC;IACtDJ,IAAI,EAAEK,UAAU,GAAGD,UAAU,GAAGS;EACxC,CAAK;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}