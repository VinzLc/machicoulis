{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPresignedGetObjectUrl = exports.getObject = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst composers_1 = require(\"@aws-amplify/core/internals/aws-client-utils/composers\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst utils_2 = require(\"../utils\");\nconst validateObjectUrl_1 = require(\"../../validateObjectUrl\");\nconst base_1 = require(\"./base\");\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst getObjectSerializer = async (input, endpoint) => {\n  const url = new utils_1.AmplifyUrl(endpoint.url.toString());\n  (0, utils_2.validateS3RequiredParameter)(!!input.Key, 'Key');\n  url.pathname = (0, utils_2.serializePathnameObjectKey)(url, input.Key);\n  url.search = new utils_1.AmplifyUrlSearchParams({\n    'x-id': 'GetObject'\n  }).toString();\n  (0, validateObjectUrl_1.validateObjectUrl)({\n    bucketName: input.Bucket,\n    key: input.Key,\n    objectURL: url\n  });\n  return {\n    method: 'GET',\n    headers: {\n      ...(input.Range && {\n        Range: input.Range\n      }),\n      ...(0, utils_2.assignStringVariables)({\n        'x-amz-expected-bucket-owner': input.ExpectedBucketOwner\n      })\n    },\n    url\n  };\n};\nconst getObjectDeserializer = async response => {\n  if (response.statusCode >= 300) {\n    // error is always set when statusCode >= 300\n    throw (0, utils_2.buildStorageServiceError)(await (0, base_1.parseXmlError)(response));\n  } else {\n    return {\n      ...(0, utils_2.map)(response.headers, {\n        DeleteMarker: ['x-amz-delete-marker', utils_2.deserializeBoolean],\n        AcceptRanges: 'accept-ranges',\n        Expiration: 'x-amz-expiration',\n        Restore: 'x-amz-restore',\n        LastModified: ['last-modified', utils_2.deserializeTimestamp],\n        ContentLength: ['content-length', utils_2.deserializeNumber],\n        ETag: 'etag',\n        ChecksumCRC32: 'x-amz-checksum-crc32',\n        ChecksumCRC32C: 'x-amz-checksum-crc32c',\n        ChecksumSHA1: 'x-amz-checksum-sha1',\n        ChecksumSHA256: 'x-amz-checksum-sha256',\n        ChecksumType: 'x-amz-checksum-type',\n        MissingMeta: ['x-amz-missing-meta', utils_2.deserializeNumber],\n        VersionId: 'x-amz-version-id',\n        CacheControl: 'cache-control',\n        ContentDisposition: 'content-disposition',\n        ContentEncoding: 'content-encoding',\n        ContentLanguage: 'content-language',\n        ContentRange: 'content-range',\n        ContentType: 'content-type',\n        Expires: ['expires', utils_2.deserializeTimestamp],\n        WebsiteRedirectLocation: 'x-amz-website-redirect-location',\n        ServerSideEncryption: 'x-amz-server-side-encryption',\n        SSECustomerAlgorithm: 'x-amz-server-side-encryption-customer-algorithm',\n        SSECustomerKeyMD5: 'x-amz-server-side-encryption-customer-key-md5',\n        SSEKMSKeyId: 'x-amz-server-side-encryption-aws-kms-key-id',\n        BucketKeyEnabled: ['x-amz-server-side-encryption-bucket-key-enabled', utils_2.deserializeBoolean],\n        StorageClass: 'x-amz-storage-class',\n        RequestCharged: 'x-amz-request-charged',\n        ReplicationStatus: 'x-amz-replication-status',\n        PartsCount: ['x-amz-mp-parts-count', utils_2.deserializeNumber],\n        TagCount: ['x-amz-tagging-count', utils_2.deserializeNumber],\n        ObjectLockMode: 'x-amz-object-lock-mode',\n        ObjectLockRetainUntilDate: ['x-amz-object-lock-retain-until-date', utils_2.deserializeTimestamp],\n        ObjectLockLegalHoldStatus: 'x-amz-object-lock-legal-hold'\n      }),\n      Metadata: (0, utils_2.deserializeMetadata)(response.headers),\n      $metadata: (0, aws_client_utils_1.parseMetadata)(response),\n      // @ts-expect-error The body is a CompatibleHttpResponse type because the lower-level handler is XHR instead of\n      // fetch, which represents payload in Blob instread of ReadableStream.\n      Body: response.body\n    };\n  }\n};\nexports.getObject = (0, composers_1.composeServiceApi)(utils_2.s3TransferHandler, getObjectSerializer, getObjectDeserializer, {\n  ...base_1.defaultConfig,\n  responseType: 'blob'\n});\n/**\n * Get a presigned URL for the `getObject` API.\n *\n * @internal\n */\nconst getPresignedGetObjectUrl = async (config, input) => {\n  const endpoint = base_1.defaultConfig.endpointResolver(config, input);\n  const {\n    url,\n    headers,\n    method\n  } = await getObjectSerializer(input, endpoint);\n  // TODO: set content sha256 query parameter with value of UNSIGNED-PAYLOAD instead of empty hash.\n  // It requires changes in presignUrl. Without this change, the generated url still works,\n  // but not the same as other tools like AWS SDK and CLI.\n  url.searchParams.append(utils_2.CONTENT_SHA256_HEADER, aws_client_utils_1.EMPTY_SHA256_HASH);\n  if (config.userAgentValue) {\n    url.searchParams.append(config.userAgentHeader ?? USER_AGENT_HEADER, config.userAgentValue);\n  }\n  if (input.ResponseContentType) {\n    url.searchParams.append('response-content-type', input.ResponseContentType);\n  }\n  if (input.ResponseContentDisposition) {\n    url.searchParams.append('response-content-disposition', input.ResponseContentDisposition);\n  }\n  for (const [headerName, value] of Object.entries(headers).sort(([key1], [key2]) => key1.localeCompare(key2))) {\n    url.searchParams.append(headerName, value);\n  }\n  return (0, aws_client_utils_1.presignUrl)({\n    method,\n    url,\n    body: undefined\n  }, {\n    signingService: base_1.defaultConfig.service,\n    signingRegion: config.region,\n    ...base_1.defaultConfig,\n    ...config\n  });\n};\nexports.getPresignedGetObjectUrl = getPresignedGetObjectUrl;","map":{"version":3,"names":["Object","defineProperty","exports","value","getPresignedGetObjectUrl","getObject","aws_client_utils_1","require","composers_1","utils_1","utils_2","validateObjectUrl_1","base_1","USER_AGENT_HEADER","getObjectSerializer","input","endpoint","url","AmplifyUrl","toString","validateS3RequiredParameter","Key","pathname","serializePathnameObjectKey","search","AmplifyUrlSearchParams","validateObjectUrl","bucketName","Bucket","key","objectURL","method","headers","Range","assignStringVariables","ExpectedBucketOwner","getObjectDeserializer","response","statusCode","buildStorageServiceError","parseXmlError","map","DeleteMarker","deserializeBoolean","AcceptRanges","Expiration","Restore","LastModified","deserializeTimestamp","ContentLength","deserializeNumber","ETag","ChecksumCRC32","ChecksumCRC32C","ChecksumSHA1","ChecksumSHA256","ChecksumType","MissingMeta","VersionId","CacheControl","ContentDisposition","ContentEncoding","ContentLanguage","ContentRange","ContentType","Expires","WebsiteRedirectLocation","ServerSideEncryption","SSECustomerAlgorithm","SSECustomerKeyMD5","SSEKMSKeyId","BucketKeyEnabled","StorageClass","RequestCharged","ReplicationStatus","PartsCount","TagCount","ObjectLockMode","ObjectLockRetainUntilDate","ObjectLockLegalHoldStatus","Metadata","deserializeMetadata","$metadata","parseMetadata","Body","body","composeServiceApi","s3TransferHandler","defaultConfig","responseType","config","endpointResolver","searchParams","append","CONTENT_SHA256_HEADER","EMPTY_SHA256_HASH","userAgentValue","userAgentHeader","ResponseContentType","ResponseContentDisposition","headerName","entries","sort","key1","key2","localeCompare","presignUrl","undefined","signingService","service","signingRegion","region"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\utils\\client\\s3data\\getObject.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPresignedGetObjectUrl = exports.getObject = void 0;\nconst aws_client_utils_1 = require(\"@aws-amplify/core/internals/aws-client-utils\");\nconst composers_1 = require(\"@aws-amplify/core/internals/aws-client-utils/composers\");\nconst utils_1 = require(\"@aws-amplify/core/internals/utils\");\nconst utils_2 = require(\"../utils\");\nconst validateObjectUrl_1 = require(\"../../validateObjectUrl\");\nconst base_1 = require(\"./base\");\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\nconst getObjectSerializer = async (input, endpoint) => {\n    const url = new utils_1.AmplifyUrl(endpoint.url.toString());\n    (0, utils_2.validateS3RequiredParameter)(!!input.Key, 'Key');\n    url.pathname = (0, utils_2.serializePathnameObjectKey)(url, input.Key);\n    url.search = new utils_1.AmplifyUrlSearchParams({\n        'x-id': 'GetObject',\n    }).toString();\n    (0, validateObjectUrl_1.validateObjectUrl)({\n        bucketName: input.Bucket,\n        key: input.Key,\n        objectURL: url,\n    });\n    return {\n        method: 'GET',\n        headers: {\n            ...(input.Range && { Range: input.Range }),\n            ...(0, utils_2.assignStringVariables)({\n                'x-amz-expected-bucket-owner': input.ExpectedBucketOwner,\n            }),\n        },\n        url,\n    };\n};\nconst getObjectDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        // error is always set when statusCode >= 300\n        throw (0, utils_2.buildStorageServiceError)((await (0, base_1.parseXmlError)(response)));\n    }\n    else {\n        return {\n            ...(0, utils_2.map)(response.headers, {\n                DeleteMarker: ['x-amz-delete-marker', utils_2.deserializeBoolean],\n                AcceptRanges: 'accept-ranges',\n                Expiration: 'x-amz-expiration',\n                Restore: 'x-amz-restore',\n                LastModified: ['last-modified', utils_2.deserializeTimestamp],\n                ContentLength: ['content-length', utils_2.deserializeNumber],\n                ETag: 'etag',\n                ChecksumCRC32: 'x-amz-checksum-crc32',\n                ChecksumCRC32C: 'x-amz-checksum-crc32c',\n                ChecksumSHA1: 'x-amz-checksum-sha1',\n                ChecksumSHA256: 'x-amz-checksum-sha256',\n                ChecksumType: 'x-amz-checksum-type',\n                MissingMeta: ['x-amz-missing-meta', utils_2.deserializeNumber],\n                VersionId: 'x-amz-version-id',\n                CacheControl: 'cache-control',\n                ContentDisposition: 'content-disposition',\n                ContentEncoding: 'content-encoding',\n                ContentLanguage: 'content-language',\n                ContentRange: 'content-range',\n                ContentType: 'content-type',\n                Expires: ['expires', utils_2.deserializeTimestamp],\n                WebsiteRedirectLocation: 'x-amz-website-redirect-location',\n                ServerSideEncryption: 'x-amz-server-side-encryption',\n                SSECustomerAlgorithm: 'x-amz-server-side-encryption-customer-algorithm',\n                SSECustomerKeyMD5: 'x-amz-server-side-encryption-customer-key-md5',\n                SSEKMSKeyId: 'x-amz-server-side-encryption-aws-kms-key-id',\n                BucketKeyEnabled: [\n                    'x-amz-server-side-encryption-bucket-key-enabled',\n                    utils_2.deserializeBoolean,\n                ],\n                StorageClass: 'x-amz-storage-class',\n                RequestCharged: 'x-amz-request-charged',\n                ReplicationStatus: 'x-amz-replication-status',\n                PartsCount: ['x-amz-mp-parts-count', utils_2.deserializeNumber],\n                TagCount: ['x-amz-tagging-count', utils_2.deserializeNumber],\n                ObjectLockMode: 'x-amz-object-lock-mode',\n                ObjectLockRetainUntilDate: [\n                    'x-amz-object-lock-retain-until-date',\n                    utils_2.deserializeTimestamp,\n                ],\n                ObjectLockLegalHoldStatus: 'x-amz-object-lock-legal-hold',\n            }),\n            Metadata: (0, utils_2.deserializeMetadata)(response.headers),\n            $metadata: (0, aws_client_utils_1.parseMetadata)(response),\n            // @ts-expect-error The body is a CompatibleHttpResponse type because the lower-level handler is XHR instead of\n            // fetch, which represents payload in Blob instread of ReadableStream.\n            Body: response.body,\n        };\n    }\n};\nexports.getObject = (0, composers_1.composeServiceApi)(utils_2.s3TransferHandler, getObjectSerializer, getObjectDeserializer, { ...base_1.defaultConfig, responseType: 'blob' });\n/**\n * Get a presigned URL for the `getObject` API.\n *\n * @internal\n */\nconst getPresignedGetObjectUrl = async (config, input) => {\n    const endpoint = base_1.defaultConfig.endpointResolver(config, input);\n    const { url, headers, method } = await getObjectSerializer(input, endpoint);\n    // TODO: set content sha256 query parameter with value of UNSIGNED-PAYLOAD instead of empty hash.\n    // It requires changes in presignUrl. Without this change, the generated url still works,\n    // but not the same as other tools like AWS SDK and CLI.\n    url.searchParams.append(utils_2.CONTENT_SHA256_HEADER, aws_client_utils_1.EMPTY_SHA256_HASH);\n    if (config.userAgentValue) {\n        url.searchParams.append(config.userAgentHeader ?? USER_AGENT_HEADER, config.userAgentValue);\n    }\n    if (input.ResponseContentType) {\n        url.searchParams.append('response-content-type', input.ResponseContentType);\n    }\n    if (input.ResponseContentDisposition) {\n        url.searchParams.append('response-content-disposition', input.ResponseContentDisposition);\n    }\n    for (const [headerName, value] of Object.entries(headers).sort(([key1], [key2]) => key1.localeCompare(key2))) {\n        url.searchParams.append(headerName, value);\n    }\n    return (0, aws_client_utils_1.presignUrl)({ method, url, body: undefined }, {\n        signingService: base_1.defaultConfig.service,\n        signingRegion: config.region,\n        ...base_1.defaultConfig,\n        ...config,\n    });\n};\nexports.getPresignedGetObjectUrl = getPresignedGetObjectUrl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}