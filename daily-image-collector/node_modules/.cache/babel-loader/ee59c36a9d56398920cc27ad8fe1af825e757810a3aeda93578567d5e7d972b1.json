{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.I18n = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst logger = new Logger_1.ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nclass I18n {\n  constructor() {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n    this._lang = null;\n    /**\n     * @private\n     */\n    this._dict = {};\n  }\n  /**\n   * Sets the default language from the configuration when required.\n   */\n  setDefaultLanguage() {\n    // Default to window language if not set in instance\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n  setLanguage(lang) {\n    this._lang = lang;\n  }\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n  get(key, defVal = undefined) {\n    this.setDefaultLanguage();\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    const lang = this._lang;\n    let val = this.getByLanguage(key, lang);\n    if (val) {\n      return val;\n    }\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n    if (val) {\n      return val;\n    }\n    return typeof defVal !== 'undefined' ? defVal : key;\n  }\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n  getByLanguage(key, language, defVal = null) {\n    if (!language) {\n      return defVal;\n    }\n    const langDict = this._dict[language];\n    if (!langDict) {\n      return defVal;\n    }\n    return langDict[key];\n  }\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} language - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n  putVocabulariesForLanguage(language, vocabularies) {\n    let langDict = this._dict[language];\n    if (!langDict) {\n      langDict = this._dict[language] = {};\n    }\n    this._dict[language] = {\n      ...langDict,\n      ...vocabularies\n    };\n  }\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n  putVocabularies(vocabularies) {\n    Object.keys(vocabularies).forEach(key => {\n      this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  }\n}\nexports.I18n = I18n;","map":{"version":3,"names":["Object","defineProperty","exports","value","I18n","Logger_1","require","logger","ConsoleLogger","constructor","_options","_lang","_dict","setDefaultLanguage","window","navigator","language","debug","setLanguage","lang","get","key","defVal","undefined","val","getByLanguage","indexOf","split","langDict","putVocabulariesForLanguage","vocabularies","putVocabularies","keys","forEach"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\I18n\\I18n.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.I18n = void 0;\nconst Logger_1 = require(\"../Logger\");\nconst logger = new Logger_1.ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nclass I18n {\n    constructor() {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n    }\n    /**\n     * Sets the default language from the configuration when required.\n     */\n    setDefaultLanguage() {\n        // Default to window language if not set in instance\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    setLanguage(lang) {\n        this._lang = lang;\n    }\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    get(key, defVal = undefined) {\n        this.setDefaultLanguage();\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal = null) {\n        if (!language) {\n            return defVal;\n        }\n        const langDict = this._dict[language];\n        if (!langDict) {\n            return defVal;\n        }\n        return langDict[key];\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let langDict = this._dict[language];\n        if (!langDict) {\n            langDict = this._dict[language] = {};\n        }\n        this._dict[language] = { ...langDict, ...vocabularies };\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).forEach(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n}\nexports.I18n = I18n;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}