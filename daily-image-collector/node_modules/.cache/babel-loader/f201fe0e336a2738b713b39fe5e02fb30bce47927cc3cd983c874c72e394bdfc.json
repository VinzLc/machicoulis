{"ast":null,"code":"'use strict';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStringToSign = void 0;\nconst constants_1 = require(\"../constants\");\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [constants_1.SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\nexports.getStringToSign = getStringToSign;","map":{"version":3,"names":["Object","defineProperty","exports","value","getStringToSign","constants_1","require","date","credentialScope","hashedRequest","SHA256_ALGORITHM_IDENTIFIER","join"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\core\\src\\clients\\middleware\\signing\\signer\\signatureV4\\utils\\getStringToSign.ts"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStringToSign = void 0;\nconst constants_1 = require(\"../constants\");\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [constants_1.SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\nexports.getStringToSign = getStringToSign;\n"],"mappings":";;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAI,CAAE,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,MAAM;AAChC,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,eAAe,GAAGA,CAACG,IAAI,EAAEC,eAAe,EAAEC,aAAa,KAAK,CAACJ,WAAW,CAACK,2BAA2B,EAAEH,IAAI,EAAEC,eAAe,EAAEC,aAAa,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;AAC5JT,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}