{"ast":null,"code":"import { StorageAction } from '@aws-amplify/core/internals/utils';\nimport '@smithy/md5-js';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../utils/client/runtime/s3TransferHandler/fetch.mjs';\nimport 'fast-xml-parser';\nimport '../../utils/client/runtime/s3TransferHandler/xhr.mjs';\nimport 'buffer';\nimport { resolveS3ConfigAndInput } from '../../utils/resolveS3ConfigAndInput.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport { logger } from '../../../../utils/logger.mjs';\nimport { validateBucketOwnerID } from '../../utils/validateBucketOwnerID.mjs';\nimport { validateStorageOperationInput } from '../../utils/validateStorageOperationInput.mjs';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants.mjs';\nimport '../../utils/client/s3data/base.mjs';\nimport '../../utils/client/s3data/getObject.mjs';\nimport '../../utils/client/s3data/listObjectsV2.mjs';\nimport '../../utils/client/s3data/putObject.mjs';\nimport '../../utils/client/s3data/createMultipartUpload.mjs';\nimport '../../utils/client/s3data/uploadPart.mjs';\nimport '../../utils/client/s3data/completeMultipartUpload.mjs';\nimport '../../utils/client/s3data/listParts.mjs';\nimport '../../utils/client/s3data/abortMultipartUpload.mjs';\nimport '../../utils/client/s3data/copyObject.mjs';\nimport { headObject } from '../../utils/client/s3data/headObject.mjs';\nimport '../../utils/client/s3data/deleteObject.mjs';\nimport { getStorageUserAgentValue } from '../../utils/userAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getProperties = async (amplify, input, action) => {\n  const {\n    s3Config,\n    bucket,\n    keyPrefix,\n    identityId\n  } = await resolveS3ConfigAndInput(amplify, input);\n  const {\n    inputType,\n    objectKey\n  } = validateStorageOperationInput(input, identityId);\n  validateBucketOwnerID(input.options?.expectedBucketOwner);\n  const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n  logger.debug(`get properties of ${objectKey} from ${finalKey}`);\n  const response = await headObject({\n    ...s3Config,\n    userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties)\n  }, {\n    Bucket: bucket,\n    Key: finalKey,\n    ExpectedBucketOwner: input.options?.expectedBucketOwner\n  });\n  const result = {\n    contentType: response.ContentType,\n    size: response.ContentLength,\n    eTag: response.ETag,\n    lastModified: response.LastModified,\n    metadata: response.Metadata,\n    versionId: response.VersionId\n  };\n  return inputType === STORAGE_INPUT_KEY ? {\n    key: objectKey,\n    ...result\n  } : {\n    path: objectKey,\n    ...result\n  };\n};\nexport { getProperties };","map":{"version":3,"names":["getProperties","amplify","input","action","s3Config","bucket","keyPrefix","identityId","resolveS3ConfigAndInput","inputType","objectKey","validateStorageOperationInput","validateBucketOwnerID","options","expectedBucketOwner","finalKey","STORAGE_INPUT_KEY","logger","debug","response","headObject","userAgentValue","getStorageUserAgentValue","StorageAction","GetProperties","Bucket","Key","ExpectedBucketOwner","result","contentType","ContentType","size","ContentLength","eTag","ETag","lastModified","LastModified","metadata","Metadata","versionId","VersionId","key","path"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\storage\\src\\providers\\s3\\apis\\internal\\getProperties.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { StorageAction } from '@aws-amplify/core/internals/utils';\nimport { resolveS3ConfigAndInput, validateBucketOwnerID, validateStorageOperationInput, } from '../../utils';\nimport { headObject } from '../../utils/client/s3data';\nimport { getStorageUserAgentValue } from '../../utils/userAgent';\nimport { logger } from '../../../../utils';\nimport { STORAGE_INPUT_KEY } from '../../utils/constants';\nexport const getProperties = async (amplify, input, action) => {\n    const { s3Config, bucket, keyPrefix, identityId } = await resolveS3ConfigAndInput(amplify, input);\n    const { inputType, objectKey } = validateStorageOperationInput(input, identityId);\n    validateBucketOwnerID(input.options?.expectedBucketOwner);\n    const finalKey = inputType === STORAGE_INPUT_KEY ? keyPrefix + objectKey : objectKey;\n    logger.debug(`get properties of ${objectKey} from ${finalKey}`);\n    const response = await headObject({\n        ...s3Config,\n        userAgentValue: getStorageUserAgentValue(action ?? StorageAction.GetProperties),\n    }, {\n        Bucket: bucket,\n        Key: finalKey,\n        ExpectedBucketOwner: input.options?.expectedBucketOwner,\n    });\n    const result = {\n        contentType: response.ContentType,\n        size: response.ContentLength,\n        eTag: response.ETag,\n        lastModified: response.LastModified,\n        metadata: response.Metadata,\n        versionId: response.VersionId,\n    };\n    return inputType === STORAGE_INPUT_KEY\n        ? { key: objectKey, ...result }\n        : { path: objectKey, ...result };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOY,MAACA,aAAa,GAAG,MAAAA,CAAOC,OAAO,EAAEC,KAAK,EAAEC,MAAM,KAAK;EAC3D,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAU,CAAE,GAAG,MAAMC,uBAAuB,CAACP,OAAO,EAAEC,KAAK,CAAC;EACjG,MAAM;IAAEO,SAAS;IAAEC;EAAS,CAAE,GAAGC,6BAA6B,CAACT,KAAK,EAAEK,UAAU,CAAC;EACjFK,qBAAqB,CAACV,KAAK,CAACW,OAAO,EAAEC,mBAAmB,CAAC;EACzD,MAAMC,QAAQ,GAAGN,SAAS,KAAKO,iBAAiB,GAAGV,SAAS,GAAGI,SAAS,GAAGA,SAAS;EACpFO,MAAM,CAACC,KAAK,CAAC,qBAAqBR,SAAS,SAASK,QAAQ,EAAE,CAAC;EAC/D,MAAMI,QAAQ,GAAG,MAAMC,UAAU,CAAC;IAC9B,GAAGhB,QAAQ;IACXiB,cAAc,EAAEC,wBAAwB,CAACnB,MAAM,IAAIoB,aAAa,CAACC,aAAa;EACtF,CAAK,EAAE;IACCC,MAAM,EAAEpB,MAAM;IACdqB,GAAG,EAAEX,QAAQ;IACbY,mBAAmB,EAAEzB,KAAK,CAACW,OAAO,EAAEC;EAC5C,CAAK,CAAC;EACF,MAAMc,MAAM,GAAG;IACXC,WAAW,EAAEV,QAAQ,CAACW,WAAW;IACjCC,IAAI,EAAEZ,QAAQ,CAACa,aAAa;IAC5BC,IAAI,EAAEd,QAAQ,CAACe,IAAI;IACnBC,YAAY,EAAEhB,QAAQ,CAACiB,YAAY;IACnCC,QAAQ,EAAElB,QAAQ,CAACmB,QAAQ;IAC3BC,SAAS,EAAEpB,QAAQ,CAACqB;EAC5B,CAAK;EACD,OAAO/B,SAAS,KAAKO,iBAAA,GACf;IAAEyB,GAAG,EAAE/B,SAAS;IAAE,GAAGkB;EAAM,IAC3B;IAAEc,IAAI,EAAEhC,SAAS;IAAE,GAAGkB;EAAM,CAAE;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}