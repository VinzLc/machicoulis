{"ast":null,"code":"import _objectSpread from \"C:/Users/vinzl/workspace/machicoulis/daily-image-collector/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createCreateConversationFunction } from '../../ai/createCreateConversationFunction.mjs';\nimport { createGetConversationFunction } from '../../ai/createGetConversationFunction.mjs';\nimport { createListConversationsFunction } from '../../ai/createListConversationsFunction.mjs';\nimport { createDeleteConversationFunction } from '../../ai/createDeleteConversationFunction.mjs';\nimport { createUpdateConversationFunction } from '../../ai/createUpdateConversationFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction generateConversationsProperty(client, apiGraphQLConfig, getInternals) {\n  const modelIntrospection = apiGraphQLConfig === null || apiGraphQLConfig === void 0 ? void 0 : apiGraphQLConfig.modelIntrospection;\n  // conversations will be absent from model intro schema if no conversation routes\n  // are present on the source schema.\n  if (!(modelIntrospection !== null && modelIntrospection !== void 0 && modelIntrospection.conversations)) {\n    return {};\n  }\n  const conversations = {};\n  for (const {\n    name,\n    conversation,\n    message,\n    models,\n    nonModels,\n    enums\n  } of Object.values(modelIntrospection.conversations)) {\n    const conversationModel = models[conversation.modelName];\n    const conversationMessageModel = models[message.modelName];\n    if (!conversationModel || !conversationMessageModel) {\n      return {};\n    }\n    const conversationModelIntrospection = _objectSpread(_objectSpread({}, modelIntrospection), {}, {\n      models: _objectSpread(_objectSpread({}, modelIntrospection.models), models),\n      nonModels: _objectSpread(_objectSpread({}, modelIntrospection.nonModels), nonModels),\n      enums: _objectSpread(_objectSpread({}, modelIntrospection.enums), enums)\n    });\n    conversations[name] = {\n      update: createUpdateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      create: createCreateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      get: createGetConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      delete: createDeleteConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      list: createListConversationsFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals)\n    };\n  }\n  return conversations;\n}\nexport { generateConversationsProperty };","map":{"version":3,"names":["generateConversationsProperty","client","apiGraphQLConfig","getInternals","modelIntrospection","conversations","name","conversation","message","models","nonModels","enums","Object","values","conversationModel","modelName","conversationMessageModel","conversationModelIntrospection","_objectSpread","update","createUpdateConversationFunction","create","createCreateConversationFunction","get","createGetConversationFunction","delete","createDeleteConversationFunction","list","createListConversationsFunction"],"sources":["C:\\Users\\vinzl\\workspace\\machicoulis\\daily-image-collector\\node_modules\\@aws-amplify\\data-schema\\src\\runtime\\internals\\utils\\clientProperties\\generateConversationsProperty.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createCreateConversationFunction } from '../../ai/createCreateConversationFunction';\nimport { createGetConversationFunction } from '../../ai/createGetConversationFunction';\nimport { createListConversationsFunction } from '../../ai/createListConversationsFunction';\nimport { createDeleteConversationFunction } from '../../ai/createDeleteConversationFunction';\nimport { createUpdateConversationFunction } from '../../ai/createUpdateConversationFunction';\nexport function generateConversationsProperty(client, apiGraphQLConfig, getInternals) {\n    const modelIntrospection = apiGraphQLConfig?.modelIntrospection;\n    // conversations will be absent from model intro schema if no conversation routes\n    // are present on the source schema.\n    if (!modelIntrospection?.conversations) {\n        return {};\n    }\n    const conversations = {};\n    for (const { name, conversation, message, models, nonModels, enums, } of Object.values(modelIntrospection.conversations)) {\n        const conversationModel = models[conversation.modelName];\n        const conversationMessageModel = models[message.modelName];\n        if (!conversationModel || !conversationMessageModel) {\n            return {};\n        }\n        const conversationModelIntrospection = {\n            ...modelIntrospection,\n            models: {\n                ...modelIntrospection.models,\n                ...models,\n            },\n            nonModels: {\n                ...modelIntrospection.nonModels,\n                ...nonModels,\n            },\n            enums: {\n                ...modelIntrospection.enums,\n                ...enums,\n            },\n        };\n        conversations[name] = {\n            update: createUpdateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            create: createCreateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            get: createGetConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            delete: createDeleteConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            list: createListConversationsFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n        };\n    }\n    return conversations;\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAMO,SAASA,6BAA6BA,CAACC,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,EAAE;EAClF,MAAMC,kBAAkB,GAAGF,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEE,kBAAkB;EACnE;EACA;EACI,IAAI,EAACA,kBAAkB,aAAlBA,kBAAkB,eAAlBA,kBAAkB,CAAEC,aAAa,GAAE;IACpC,OAAO,EAAE;EACjB;EACI,MAAMA,aAAa,GAAG,EAAE;EACxB,KAAK,MAAM;IAAEC,IAAI;IAAEC,YAAY;IAAEC,OAAO;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAG,IAAIC,MAAM,CAACC,MAAM,CAACT,kBAAkB,CAACC,aAAa,CAAC,EAAE;IACtH,MAAMS,iBAAiB,GAAGL,MAAM,CAACF,YAAY,CAACQ,SAAS,CAAC;IACxD,MAAMC,wBAAwB,GAAGP,MAAM,CAACD,OAAO,CAACO,SAAS,CAAC;IAC1D,IAAI,CAACD,iBAAiB,IAAI,CAACE,wBAAwB,EAAE;MACjD,OAAO,EAAE;IACrB;IACQ,MAAMC,8BAA8B,GAAAC,aAAA,CAAAA,aAAA,KAC7Bd,kBAAkB;MACrBK,MAAM,EAAAS,aAAA,CAAAA,aAAA,KACCd,kBAAkB,CAACK,MAAM,GACzBA,MAAM,CACZ;MACDC,SAAS,EAAAQ,aAAA,CAAAA,aAAA,KACFd,kBAAkB,CAACM,SAAS,GAC5BA,SAAS,CACf;MACDC,KAAK,EAAAO,aAAA,CAAAA,aAAA,KACEd,kBAAkB,CAACO,KAAK,GACxBA,KAAK;IACX,EACJ;IACDN,aAAa,CAACC,IAAI,CAAC,GAAG;MAClBa,MAAM,EAAEC,gCAAgC,CAACnB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJkB,MAAM,EAAEC,gCAAgC,CAACrB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJoB,GAAG,EAAEC,6BAA6B,CAACvB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MAC3IsB,MAAM,EAAEC,gCAAgC,CAACzB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJwB,IAAI,EAAEC,+BAA+B,CAAC3B,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY;IACzJ,CAAS;EACT;EACI,OAAOE,aAAa;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}